!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTIVATE	src/common.h	/^    ACTIVATE,$/;"	m	class:dramsim3::CommandType
ADD16	src/hmc.h	/^    ADD16,$/;"	m	class:dramsim3::HMCReqType
ADD8	src/hmc.h	/^    ADD8,  \/\/ 2ADD8, cannot name it like that in c++...$/;"	m	class:dramsim3::HMCReqType
ADDS16R	src/hmc.h	/^    ADDS16R,$/;"	m	class:dramsim3::HMCReqType
ADDS8R	src/hmc.h	/^    ADDS8R,  \/\/ 2ADD8, cannot name it like that...$/;"	m	class:dramsim3::HMCReqType
AL	src/configuration.h	/^    int AL;$/;"	m	class:dramsim3::Config
ALIGN_CENTER	ext/fmt/include/fmt/format.h	/^  ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:alignment
ALIGN_DEFAULT	ext/fmt/include/fmt/format.h	/^  ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:alignment
ALIGN_LEFT	ext/fmt/include/fmt/format.h	/^  ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:alignment
ALIGN_NUMERIC	ext/fmt/include/fmt/format.h	/^  ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:alignment
ALIGN_RIGHT	ext/fmt/include/fmt/format.h	/^  ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:alignment
AND16	src/hmc.h	/^    AND16,$/;"	m	class:dramsim3::HMCReqType
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	433;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	437;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	448;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	451;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	454;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	459;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	462;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	465;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	468;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	410;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	418;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	422;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	433;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	436;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	439;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	444;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	447;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	450;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	446;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	455;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	457;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	461;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	475;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	478;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	483;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	486;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	489;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	492;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	442;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	446;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	452;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	460;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	463;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	468;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	471;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	474;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	477;"	d	file:
ARGS_HXX	ext/headers/args.hxx	29;"	d
ARGS_LIB_DIR	Makefile	/^ARGS_LIB_DIR=ext\/headers$/;"	m
AbruptExit	src/common.cc	/^void AbruptExit(const std::string& file, int line) {$/;"	f	namespace:dramsim3
ActivationWindowOk	src/channel_state.cc	/^bool ChannelState::ActivationWindowOk(int rank, uint64_t curr_time) const {$/;"	f	class:dramsim3::ChannelState
Add	ext/headers/args.hxx	/^            void Add(Base &child)$/;"	f	class:argstest::Group
AddCommand	src/command_queue.cc	/^bool CommandQueue::AddCommand(Command cmd) {$/;"	f	class:dramsim3::CommandQueue
AddTransaction	src/controller.cc	/^bool Controller::AddTransaction(Transaction trans) {$/;"	f	class:dramsim3::Controller
AddTransaction	src/dram_system.cc	/^bool IdealDRAMSystem::AddTransaction(AddressPair hex_addr, bool is_write) {$/;"	f	class:dramsim3::IdealDRAMSystem
AddTransaction	src/dram_system.cc	/^bool JedecDRAMSystem::AddTransaction(AddressPair hex_addr, bool is_write) {$/;"	f	class:dramsim3::JedecDRAMSystem
AddTransaction	src/hmc.cc	/^bool HMCMemorySystem::AddTransaction(AddressPair hex_addr, bool is_write) {$/;"	f	class:dramsim3::HMCMemorySystem
AddTransaction	src/memory_system.cc	/^bool MemorySystem::AddTransaction(AddressPair hex_addr, bool is_write) {$/;"	f	class:dramsim3::MemorySystem
AddValue	src/simple_stats.cc	/^void SimpleStats::AddValue(const std::string name, const int value) {$/;"	f	class:dramsim3::SimpleStats
Address	src/common.h	/^    Address()$/;"	f	struct:dramsim3::Address
Address	src/common.h	/^    Address(const Address& addr)$/;"	f	struct:dramsim3::Address
Address	src/common.h	/^    Address(int channel, int rank, int bankgroup, int bank, int row, int column)$/;"	f	struct:dramsim3::Address
Address	src/common.h	/^struct Address {$/;"	s	namespace:dramsim3
AddressMapping	src/configuration.cc	/^Address Config::AddressMapping(AddressPair hex_addr) const {$/;"	f	class:dramsim3::Config
AddressPair	src/common.h	/^        AddressPair() :src_addr(0), dest_addr(0), is_copy(false) {}$/;"	f	class:dramsim3::AddressPair
AddressPair	src/common.h	/^        AddressPair(const uint64_t src_addr): src_addr(src_addr), dest_addr(0), is_copy(false) {}$/;"	f	class:dramsim3::AddressPair
AddressPair	src/common.h	/^        AddressPair(const uint64_t src_addr, const uint64_t dest_addr)$/;"	f	class:dramsim3::AddressPair
AddressPair	src/common.h	/^    class AddressPair {$/;"	c	namespace:dramsim3
All	ext/headers/args.hxx	/^                static bool All(const Group &group)$/;"	f	struct:argstest::Group::Validators
AllChildGroups	ext/headers/args.hxx	/^                static bool AllChildGroups(const Group &group)$/;"	f	struct:argstest::Group::Validators
AllOrNone	ext/headers/args.hxx	/^                static bool AllOrNone(const Group &group)$/;"	f	struct:argstest::Group::Validators
ArbitratePrecharge	src/command_queue.cc	/^bool CommandQueue::ArbitratePrecharge(const CMDIterator& cmd_it,$/;"	f	class:dramsim3::CommandQueue
Arg	ext/headers/catch.hpp	/^    class Arg : public ParserRefImpl<Arg> {$/;"	c	namespace:Catch
ArgumentParser	ext/headers/args.hxx	/^            ArgumentParser(const std::string &description_, const std::string &epilog_ = std::string()) :$/;"	f	class:argstest::ArgumentParser
ArgumentParser	ext/headers/args.hxx	/^    class ArgumentParser : public Group$/;"	c	namespace:argstest
AssertionInfo	ext/headers/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AtLeastOne	ext/headers/args.hxx	/^                static bool AtLeastOne(const Group &group)$/;"	f	struct:argstest::Group::Validators
AtMostOne	ext/headers/args.hxx	/^                static bool AtMostOne(const Group &group)$/;"	f	struct:argstest::Group::Validators
AutoReg	ext/headers/catch.hpp	/^struct AutoReg : NonCopyable {$/;"	s	namespace:Catch
BACKGROUND_COLOR	ext/fmt/include/fmt/format-inl.h	/^template <typename T> const char basic_data<T>::BACKGROUND_COLOR[] = "\\x1b[48;2;";$/;"	m	class:internal::basic_data
BANK_LEVEL_STAGGERED	src/configuration.h	/^    BANK_LEVEL_STAGGERED,$/;"	m	class:dramsim3::RefreshPolicy
BENCHMARK	ext/headers/catch.hpp	2607;"	d
BL	src/configuration.h	/^    int BL;$/;"	m	class:dramsim3::Config
BUFFER_SIZE	ext/fmt/include/fmt/format.h	/^  enum {BUFFER_SIZE = std::numeric_limits<unsigned long long>::digits10 + 3};$/;"	e	enum:format_int::__anon12
BWR	src/hmc.h	/^    BWR,$/;"	m	class:dramsim3::HMCReqType
BWR8R	src/hmc.h	/^    BWR8R,  \/\/ bit write with return$/;"	m	class:dramsim3::HMCReqType
Bank	src/common.h	/^    int Bank() const { return addr.bank; }$/;"	f	struct:dramsim3::Command
BankNeedRefresh	src/channel_state.cc	/^void ChannelState::BankNeedRefresh(int rank, int bankgroup, int bank,$/;"	f	class:dramsim3::ChannelState
BankState	src/bankstate.cc	/^BankState::BankState()$/;"	f	class:dramsim3::BankState
BankState	src/bankstate.h	/^class BankState {$/;"	c	namespace:dramsim3
Bankgroup	src/common.h	/^    int Bankgroup() const { return addr.bankgroup; }$/;"	f	struct:dramsim3::Command
Base	ext/headers/args.hxx	/^            Base(const std::string &help_) : matched(false), help(help_) {}$/;"	f	class:argstest::Base
Base	ext/headers/args.hxx	/^    class Base$/;"	c	namespace:argstest
BaseDRAMSystem	src/dram_system.cc	/^BaseDRAMSystem::BaseDRAMSystem(Config &config, const std::string &output_dir,$/;"	f	class:dramsim3::BaseDRAMSystem
BaseDRAMSystem	src/dram_system.h	/^class BaseDRAMSystem {$/;"	c	namespace:dramsim3
Bpos	scripts/final_PowerTemperature_map.py	/^Bpos = Bpos[1:, :]$/;"	v
Bpos	scripts/final_PowerTemperature_map.py	/^Bpos = genfromtxt(pos_file, delimiter=',')$/;"	v
BuildAgeQueue	src/hmc.cc	/^std::vector<int> HMCMemorySystem::BuildAgeQueue(std::vector<int> &age_counter) {$/;"	f	class:dramsim3::HMCMemorySystem
CASEQ8	src/hmc.h	/^    CASEQ8,$/;"	m	class:dramsim3::HMCReqType
CASGT16	src/hmc.h	/^    CASGT16,$/;"	m	class:dramsim3::HMCReqType
CASGT8	src/hmc.h	/^    CASGT8,$/;"	m	class:dramsim3::HMCReqType
CASLT16	src/hmc.h	/^    CASLT16,$/;"	m	class:dramsim3::HMCReqType
CASLT8	src/hmc.h	/^    CASLT8,$/;"	m	class:dramsim3::HMCReqType
CASZERO16	src/hmc.h	/^    CASZERO16,$/;"	m	class:dramsim3::HMCReqType
CATCH_ARC_ENABLED	ext/headers/catch.hpp	1180;"	d
CATCH_ARC_STRONG	ext/headers/catch.hpp	1198;"	d
CATCH_ARC_STRONG	ext/headers/catch.hpp	1214;"	d
CATCH_BREAK_INTO_DEBUGGER	ext/headers/catch.hpp	6035;"	d
CATCH_CATCH_ALL	ext/headers/catch.hpp	370;"	d
CATCH_CATCH_ANON	ext/headers/catch.hpp	371;"	d
CATCH_CLARA_CONFIG_CONSOLE_WIDTH	ext/headers/catch.hpp	6524;"	d
CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	ext/headers/catch.hpp	6501;"	d
CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	ext/headers/catch.hpp	6503;"	d
CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	ext/headers/catch.hpp	6528;"	d
CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	ext/headers/catch.hpp	6558;"	d
CATCH_CONFIG_ALL_PARTS	ext/headers/catch.hpp	51;"	d
CATCH_CONFIG_COLOUR_NONE	ext/headers/catch.hpp	176;"	d
CATCH_CONFIG_COLOUR_NONE	ext/headers/catch.hpp	225;"	d
CATCH_CONFIG_CONSOLE_WIDTH	ext/headers/catch.hpp	4649;"	d
CATCH_CONFIG_COUNTER	ext/headers/catch.hpp	305;"	d
CATCH_CONFIG_CPP11_TO_STRING	ext/headers/catch.hpp	320;"	d
CATCH_CONFIG_CPP17_OPTIONAL	ext/headers/catch.hpp	324;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	ext/headers/catch.hpp	332;"	d
CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	ext/headers/catch.hpp	328;"	d
CATCH_CONFIG_CPP17_VARIANT	ext/headers/catch.hpp	336;"	d
CATCH_CONFIG_DEFAULT_REPORTER	ext/headers/catch.hpp	4685;"	d
CATCH_CONFIG_DEFAULT_REPORTER	ext/headers/catch.hpp	4688;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	ext/headers/catch.hpp	348;"	d
CATCH_CONFIG_DISABLE_MATCHERS	ext/headers/catch.hpp	59;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	ext/headers/catch.hpp	1541;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	ext/headers/catch.hpp	62;"	d
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	ext/headers/catch.hpp	1542;"	d
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	ext/headers/catch.hpp	1538;"	d
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	ext/headers/catch.hpp	1539;"	d
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	ext/headers/catch.hpp	1540;"	d
CATCH_CONFIG_EXTERNAL_INTERFACES	ext/headers/catch.hpp	57;"	d
CATCH_CONFIG_MAIN	tests/test_config.cc	1;"	d	file:
CATCH_CONFIG_NEW_CAPTURE	ext/headers/catch.hpp	344;"	d
CATCH_CONFIG_NO_CPP17_VARIANT	ext/headers/catch.hpp	294;"	d
CATCH_CONFIG_POLYFILL_ISNAN	ext/headers/catch.hpp	352;"	d
CATCH_CONFIG_POSIX_SIGNALS	ext/headers/catch.hpp	312;"	d
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	ext/headers/catch.hpp	379;"	d
CATCH_CONFIG_WCHAR	ext/headers/catch.hpp	316;"	d
CATCH_CONFIG_WINDOWS_SEH	ext/headers/catch.hpp	308;"	d
CATCH_CPP14_OR_GREATER	ext/headers/catch.hpp	126;"	d
CATCH_CPP17_OR_GREATER	ext/headers/catch.hpp	130;"	d
CATCH_DEFER	ext/headers/catch.hpp	686;"	d
CATCH_DEFINED_NOMINMAX	ext/headers/catch.hpp	6051;"	d
CATCH_DEFINED_WIN32_LEAN_AND_MEAN	ext/headers/catch.hpp	6055;"	d
CATCH_EMPTY	ext/headers/catch.hpp	685;"	d
CATCH_ENFORCE	ext/headers/catch.hpp	3496;"	d
CATCH_ERROR	ext/headers/catch.hpp	3492;"	d
CATCH_IMPL	ext/headers/catch.hpp	50;"	d
CATCH_INTERNAL_CHECK_UNIQUE_TYPES	ext/headers/catch.hpp	929;"	d
CATCH_INTERNAL_CONFIG_COUNTER	ext/headers/catch.hpp	265;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	ext/headers/catch.hpp	281;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	ext/headers/catch.hpp	273;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	ext/headers/catch.hpp	136;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	ext/headers/catch.hpp	219;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	ext/headers/catch.hpp	242;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	ext/headers/catch.hpp	340;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	ext/headers/catch.hpp	182;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	ext/headers/catch.hpp	209;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	ext/headers/catch.hpp	194;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	ext/headers/catch.hpp	171;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	ext/headers/catch.hpp	175;"	d
CATCH_INTERNAL_CONFIG_NO_WCHAR	ext/headers/catch.hpp	248;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	ext/headers/catch.hpp	188;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	ext/headers/catch.hpp	254;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	ext/headers/catch.hpp	165;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	ext/headers/catch.hpp	234;"	d
CATCH_INTERNAL_ERROR	ext/headers/catch.hpp	3490;"	d
CATCH_INTERNAL_LINEINFO	ext/headers/catch.hpp	458;"	d
CATCH_INTERNAL_STRINGIFY	ext/headers/catch.hpp	2305;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	ext/headers/catch.hpp	141;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	ext/headers/catch.hpp	360;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	ext/headers/catch.hpp	148;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	ext/headers/catch.hpp	356;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	ext/headers/catch.hpp	154;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	ext/headers/catch.hpp	364;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	ext/headers/catch.hpp	145;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	ext/headers/catch.hpp	361;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	ext/headers/catch.hpp	151;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	ext/headers/catch.hpp	357;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	ext/headers/catch.hpp	157;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	ext/headers/catch.hpp	365;"	d
CATCH_PLATFORM_IPHONE	ext/headers/catch.hpp	74;"	d
CATCH_PLATFORM_LINUX	ext/headers/catch.hpp	78;"	d
CATCH_PLATFORM_MAC	ext/headers/catch.hpp	72;"	d
CATCH_PLATFORM_WINDOWS	ext/headers/catch.hpp	6885;"	d
CATCH_PLATFORM_WINDOWS	ext/headers/catch.hpp	81;"	d
CATCH_PREPARE_EXCEPTION	ext/headers/catch.hpp	3488;"	d
CATCH_RECURSE	ext/headers/catch.hpp	677;"	d
CATCH_RECURSION_LEVEL0	ext/headers/catch.hpp	666;"	d
CATCH_RECURSION_LEVEL1	ext/headers/catch.hpp	667;"	d
CATCH_RECURSION_LEVEL2	ext/headers/catch.hpp	668;"	d
CATCH_RECURSION_LEVEL3	ext/headers/catch.hpp	669;"	d
CATCH_RECURSION_LEVEL4	ext/headers/catch.hpp	670;"	d
CATCH_RECURSION_LEVEL5	ext/headers/catch.hpp	671;"	d
CATCH_RECURSION_LEVEL6	ext/headers/catch.hpp	676;"	d
CATCH_REC_END	ext/headers/catch.hpp	682;"	d
CATCH_REC_GET_END	ext/headers/catch.hpp	690;"	d
CATCH_REC_GET_END1	ext/headers/catch.hpp	689;"	d
CATCH_REC_GET_END2	ext/headers/catch.hpp	688;"	d
CATCH_REC_LIST	ext/headers/catch.hpp	708;"	d
CATCH_REC_LIST0	ext/headers/catch.hpp	695;"	d
CATCH_REC_LIST0_UD	ext/headers/catch.hpp	699;"	d
CATCH_REC_LIST1	ext/headers/catch.hpp	696;"	d
CATCH_REC_LIST1_UD	ext/headers/catch.hpp	700;"	d
CATCH_REC_LIST2	ext/headers/catch.hpp	697;"	d
CATCH_REC_LIST2_UD	ext/headers/catch.hpp	701;"	d
CATCH_REC_LIST_UD	ext/headers/catch.hpp	706;"	d
CATCH_REC_NEXT	ext/headers/catch.hpp	693;"	d
CATCH_REC_NEXT0	ext/headers/catch.hpp	691;"	d
CATCH_REC_NEXT1	ext/headers/catch.hpp	692;"	d
CATCH_REC_OUT	ext/headers/catch.hpp	683;"	d
CATCH_REGISTER_LISTENER	ext/headers/catch.hpp	5446;"	d
CATCH_REGISTER_REPORTER	ext/headers/catch.hpp	5441;"	d
CATCH_REGISTER_TAG_ALIAS	ext/headers/catch.hpp	470;"	d
CATCH_RUNTIME_ERROR	ext/headers/catch.hpp	3494;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	ext/headers/catch.hpp	6500;"	d
CATCH_TRAP	ext/headers/catch.hpp	6014;"	d
CATCH_TRY	ext/headers/catch.hpp	369;"	d
CATCH_UNSAFE_UNRETAINED	ext/headers/catch.hpp	1197;"	d
CATCH_UNSAFE_UNRETAINED	ext/headers/catch.hpp	1213;"	d
CATCH_VERSION_MAJOR	ext/headers/catch.hpp	16;"	d
CATCH_VERSION_MINOR	ext/headers/catch.hpp	17;"	d
CATCH_VERSION_PATCH	ext/headers/catch.hpp	18;"	d
CC	Makefile	/^CC=gcc$/;"	m
CL	src/configuration.h	/^    int CL;$/;"	m	class:dramsim3::Config
CLARA_CONFIG_MAIN	ext/headers/catch.hpp	89;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	ext/headers/catch.hpp	88;"	d
CLARA_CONFIG_OPTIONAL_TYPE	ext/headers/catch.hpp	6535;"	d
CLOSED	src/bankstate.h	/^    enum class State { OPEN, CLOSED, SREF, PD, WAIT_WRITECOPY, SIZE };$/;"	m	class:dramsim3::BankState::State
CLOSE_PAGE	src/controller.h	/^enum class RowBufPolicy { OPEN_PAGE, CLOSE_PAGE, SIZE };$/;"	m	class:dramsim3::RowBufPolicy
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/nfs\/home\/tojslee\/PIM\/DRAMsim3\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/nfs\/home\/tojslee\/PIM\/DRAMsim3$/;"	m
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	309;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	312;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	230;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	189;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	291;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	266;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	273;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	169;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	292;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	169;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	270;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CPU	src/cpu.h	/^    CPU(const std::string& config_file, const std::string& output_dir)$/;"	f	class:dramsim3::CPU
CPU	src/cpu.h	/^class CPU {$/;"	c	namespace:dramsim3
CWL	src/configuration.h	/^    int CWL;$/;"	m	class:dramsim3::Config
CXX	Makefile	/^CXX=g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS=-Wall -O3 -fPIC -std=c++11 $(INC) -DFMT_HEADER_ONLY=1$/;"	m
CXX_STD	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	534;"	d	file:
CXX_STD	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	536;"	d	file:
CXX_STD	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	558;"	d	file:
CXX_STD	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	560;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	550;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	552;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	557;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	559;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	575;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	577;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	580;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	582;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	584;"	d	file:
CalcFinalT	src/thermal.cc	/^void ThermalCalculator::CalcFinalT(int case_id, uint64_t clk) {$/;"	f	class:dramsim3::ThermalCalculator
CalcTransT	src/thermal.cc	/^void ThermalCalculator::CalcTransT(int case_id) {$/;"	f	class:dramsim3::ThermalCalculator
CalculateSize	src/configuration.cc	/^void Config::CalculateSize() {$/;"	f	class:dramsim3::Config
CanStartWait	src/channel_state.cc	/^bool ChannelState::CanStartWait(const Command& cmd, uint64_t clk) const{$/;"	f	class:dramsim3::ChannelState
Cap	src/thermal.h	/^    double *Cap;            \/\/ Cap storing the thermal capacitance$/;"	m	class:dramsim3::ThermalCalculator
CapSize	src/thermal.h	/^    int MidxSize, CapSize;  \/\/ first dimension size of Midx and Cap$/;"	m	class:dramsim3::ThermalCalculator
CareTooMuch	ext/headers/args.hxx	/^                static bool CareTooMuch(const Group &group)$/;"	f	struct:argstest::Group::Validators
CaseSensitive	ext/headers/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
Catch	ext/headers/catch.hpp	/^namespace Catch {$/;"	n
Catch	ext/headers/catch.hpp	/^namespace Catch{$/;"	n
Catch_global_namespace_dummy	ext/headers/catch.hpp	/^struct Catch_global_namespace_dummy {};$/;"	s
Ccu	src/thermal_config.h	/^const double Ccu = 3.2e6;   \/\/ Copper$/;"	v
Channel	src/common.h	/^    int Channel() const { return addr.channel; }$/;"	f	struct:dramsim3::Command
ChannelState	src/channel_state.cc	/^ChannelState::ChannelState(const Config& config, const Timing& timing)$/;"	f	class:dramsim3::ChannelState
ChannelState	src/channel_state.h	/^class ChannelState {$/;"	c	namespace:dramsim3
Children	ext/headers/args.hxx	/^            const std::vector<Base *> &Children() const$/;"	f	class:argstest::Group
Choice	ext/headers/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Chs	src/thermal_config.h	/^const double Chs = 2.42e6;  \/\/ Heat sink$/;"	v
Cin	src/thermal_config.h	/^const double Cin = 1.65e6;  \/\/ insulator$/;"	v
ClockTick	src/command_queue.h	/^    void ClockTick() { clk_ += 1; };$/;"	f	class:dramsim3::CommandQueue
ClockTick	src/controller.cc	/^void Controller::ClockTick() {$/;"	f	class:dramsim3::Controller
ClockTick	src/cpu.cc	/^void RandomCPU::ClockTick() {$/;"	f	class:dramsim3::RandomCPU
ClockTick	src/cpu.cc	/^void StreamCPU::ClockTick() {$/;"	f	class:dramsim3::StreamCPU
ClockTick	src/cpu.cc	/^void TraceBasedCPU::ClockTick() {$/;"	f	class:dramsim3::TraceBasedCPU
ClockTick	src/dram_system.cc	/^void IdealDRAMSystem::ClockTick() {$/;"	f	class:dramsim3::IdealDRAMSystem
ClockTick	src/dram_system.cc	/^void JedecDRAMSystem::ClockTick() {$/;"	f	class:dramsim3::JedecDRAMSystem
ClockTick	src/hmc.cc	/^void HMCMemorySystem::ClockTick() {$/;"	f	class:dramsim3::HMCMemorySystem
ClockTick	src/memory_system.cc	/^void MemorySystem::ClockTick() { dram_system_->ClockTick(); }$/;"	f	class:dramsim3::MemorySystem
ClockTick	src/refresh.cc	/^void Refresh::ClockTick() {$/;"	f	class:dramsim3::Refresh
Column	src/common.h	/^    int Column() const { return addr.column; }$/;"	f	struct:dramsim3::Command
Command	scripts/validation.py	/^class Command(object):$/;"	c
Command	src/common.h	/^    Command() : cmd_type(CommandType::SIZE), hex_addr(0) {}$/;"	f	struct:dramsim3::Command
Command	src/common.h	/^    Command(CommandType cmd_type, const Address& addr, AddressPair hex_addr)$/;"	f	struct:dramsim3::Command
Command	src/common.h	/^struct Command {$/;"	s	namespace:dramsim3
CommandQueue	src/command_queue.cc	/^CommandQueue::CommandQueue(int channel_id, const Config& config,$/;"	f	class:dramsim3::CommandQueue
CommandQueue	src/command_queue.h	/^class CommandQueue {$/;"	c	namespace:dramsim3
CommandType	src/common.h	/^enum class CommandType {$/;"	c	namespace:dramsim3
ComposableParserImpl	ext/headers/catch.hpp	/^    class ComposableParserImpl : public ParserBase {$/;"	c	namespace:Catch
Config	src/configuration.cc	/^Config::Config(std::string config_file, std::string out_dir)$/;"	f	class:dramsim3::Config
Config	src/configuration.h	/^class Config {$/;"	c	namespace:dramsim3
ContinueOnFailure	ext/headers/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
Controller	src/controller.cc	/^Controller::Controller(int channel, const Config &config, const Timing &timing,$/;"	f	class:dramsim3::Controller
Controller	src/controller.h	/^class Controller {$/;"	c	namespace:dramsim3
CopyTransToCommand	src/controller.cc	/^std::pair<Command, Command> Controller::CopyTransToCommand(const Transaction &trans){$/;"	f	class:dramsim3::Controller
CounterFlag	ext/headers/args.hxx	/^            CounterFlag(Group &group_, const std::string &name_, const std::string &help_, Matcher &&matcher_, const int startcount_ = 0): Flag(group_, name_, help_, std::move(matcher_)), startcount(startcount_), count(startcount_) {}$/;"	f	class:argstest::CounterFlag
CounterFlag	ext/headers/args.hxx	/^    class CounterFlag : public Flag$/;"	c	namespace:argstest
Csi	src/thermal_config.h	/^const double Csi = 1.66e6;  \/\/ Silicon$/;"	v
DDR3	src/configuration.h	/^    DDR3,$/;"	m	class:dramsim3::DRAMProtocol
DDR3Validation	scripts/validation.py	/^class DDR3Validation(DRAMValidation):$/;"	c
DDR4	src/configuration.h	/^    DDR4,$/;"	m	class:dramsim3::DRAMProtocol
DDR4Validation	scripts/validation.py	/^class DDR4Validation(DRAMValidation):$/;"	c
DEC	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
DEC	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
DEC	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	496;"	d	file:
DEC	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	481;"	d	file:
DEV_TO_DEV	src/hmc.h	/^enum class HMCLinkType { HOST_TO_DEV, DEV_TO_DEV, SIZE };$/;"	m	class:dramsim3::HMCLinkType
DIGITS	ext/fmt/include/fmt/format-inl.h	/^const char basic_data<T>::DIGITS[] =$/;"	m	class:internal::basic_data
DRAMClockTick	src/hmc.cc	/^void HMCMemorySystem::DRAMClockTick() {$/;"	f	class:dramsim3::HMCMemorySystem
DRAMProtocol	src/configuration.h	/^enum class DRAMProtocol {$/;"	c	namespace:dramsim3
DRAMValidation	scripts/validation.py	/^class DRAMValidation(object):$/;"	c
Description	ext/headers/args.hxx	/^            const std::string &Description() const$/;"	f	class:argstest::ArgumentParser
Description	ext/headers/args.hxx	/^            void Description(const std::string &description_)$/;"	f	class:argstest::ArgumentParser
Detail	ext/headers/catch.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
DidntThrowException	ext/headers/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DirExist	src/common.cc	/^bool DirExist(std::string dir) {$/;"	f	namespace:dramsim3
DontCare	ext/headers/args.hxx	/^                static bool DontCare(const Group &group)$/;"	f	struct:argstest::Group::Validators
DrainRequests	src/hmc.cc	/^void HMCMemorySystem::DrainRequests() {$/;"	f	class:dramsim3::HMCMemorySystem
DrainResponses	src/hmc.cc	/^void HMCMemorySystem::DrainResponses() {$/;"	f	class:dramsim3::HMCMemorySystem
EQ16	src/hmc.h	/^    EQ16,$/;"	m	class:dramsim3::HMCReqType
EQ8	src/hmc.h	/^    EQ8,$/;"	m	class:dramsim3::HMCReqType
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
ERR	src/hmc.h	/^enum class HMCRespType { NONE, RD_RS, WR_RS, ERR, SIZE };$/;"	m	class:dramsim3::HMCRespType
EXE_NAME	Makefile	/^EXE_NAME=dramsim3main.out$/;"	m
EXE_OBJS	Makefile	/^EXE_OBJS := $(EXE_OBJS) $(OBJECTS)$/;"	m
EXE_OBJS	Makefile	/^EXE_OBJS = $(addsuffix .o, $(basename $(EXE_SRCS)))$/;"	m
EXE_SRCS	Makefile	/^EXE_SRCS = src\/cpu.cc src\/main.cc$/;"	m
EitherFlag	ext/headers/args.hxx	/^        EitherFlag(const char *flag) : isShort(false), shortFlag(), longFlag(flag) {}$/;"	f	struct:argstest::EitherFlag
EitherFlag	ext/headers/args.hxx	/^        EitherFlag(const char flag) : isShort(true), shortFlag(flag), longFlag() {}$/;"	f	struct:argstest::EitherFlag
EitherFlag	ext/headers/args.hxx	/^        EitherFlag(const std::string &flag) : isShort(false), shortFlag(), longFlag(flag) {}$/;"	f	struct:argstest::EitherFlag
EitherFlag	ext/headers/args.hxx	/^    struct EitherFlag$/;"	s	namespace:argstest
Epilog	ext/headers/args.hxx	/^            const std::string &Epilog() const$/;"	f	class:argstest::ArgumentParser
Epilog	ext/headers/args.hxx	/^            void Epilog(const std::string &epilog_)$/;"	f	class:argstest::ArgumentParser
EraseCOPYCommand	src/command_queue.cc	/^void CommandQueue::EraseCOPYCommand(const Command& cmd){$/;"	f	class:dramsim3::CommandQueue
EraseRWCommand	src/command_queue.cc	/^void CommandQueue::EraseRWCommand(const Command& cmd) {$/;"	f	class:dramsim3::CommandQueue
Error	ext/headers/args.hxx	/^            Error(const std::string &problem) : std::runtime_error(problem) {}$/;"	f	class:argstest::Error
Error	ext/headers/args.hxx	/^    class Error : public std::runtime_error$/;"	c	namespace:argstest
Error	ext/headers/args.hxx	/^    enum class Error$/;"	c	namespace:argstest
Exception	ext/headers/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
ExeName	ext/headers/catch.hpp	/^        ExeName() : m_name( std::make_shared<std::string>( "<executable>" ) ) {}$/;"	f	class:Catch::ExeName
ExeName	ext/headers/catch.hpp	/^        explicit ExeName( LambdaT const& lambda ) : ExeName() {$/;"	f	class:Catch::ExeName
ExeName	ext/headers/catch.hpp	/^        explicit ExeName( std::string &ref ) : ExeName() {$/;"	f	class:Catch::ExeName
ExeName	ext/headers/catch.hpp	/^    class ExeName : public ComposableParserImpl<ExeName> {$/;"	c	namespace:Catch
ExplicitFailure	ext/headers/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	ext/headers/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
Extra	ext/headers/args.hxx	/^        Extra,$/;"	m	class:argstest::Error
ExtraError	ext/headers/args.hxx	/^            ExtraError(const std::string &problem) : ParseError(problem) {}$/;"	f	class:argstest::ExtraError
ExtraError	ext/headers/args.hxx	/^    class ExtraError : public ParseError$/;"	c	namespace:argstest
FMT_ALWAYS_INLINE	ext/fmt/include/fmt/format.h	/^inline char *lg(uint32_t n, Handler h) FMT_ALWAYS_INLINE;$/;"	m	namespace:internal
FMT_ALWAYS_INLINE	ext/fmt/include/fmt/format.h	907;"	d
FMT_ALWAYS_INLINE	ext/fmt/include/fmt/format.h	909;"	d
FMT_API	ext/fmt/include/fmt/core.h	158;"	d
FMT_API	ext/fmt/include/fmt/core.h	160;"	d
FMT_API	ext/fmt/include/fmt/core.h	164;"	d
FMT_ASSERT	ext/fmt/include/fmt/core.h	168;"	d
FMT_BEGIN_NAMESPACE	ext/fmt/include/fmt/core.h	153;"	d
FMT_BUILTIN_CLZ	ext/fmt/include/fmt/format.h	173;"	d
FMT_BUILTIN_CLZ	ext/fmt/include/fmt/format.h	204;"	d
FMT_BUILTIN_CLZLL	ext/fmt/include/fmt/format.h	177;"	d
FMT_BUILTIN_CLZLL	ext/fmt/include/fmt/format.h	230;"	d
FMT_CATCH	ext/fmt/include/fmt/format-inl.h	41;"	d
FMT_CATCH	ext/fmt/include/fmt/format-inl.h	44;"	d
FMT_CHAR	ext/fmt/include/fmt/core.h	1309;"	d
FMT_CLANG_VERSION	ext/fmt/include/fmt/format.h	41;"	d
FMT_CLANG_VERSION	ext/fmt/include/fmt/format.h	43;"	d
FMT_CONSTEXPR	ext/fmt/include/fmt/core.h	66;"	d
FMT_CONSTEXPR	ext/fmt/include/fmt/core.h	69;"	d
FMT_CONSTEXPR11	ext/fmt/include/fmt/core.h	78;"	d
FMT_CONSTEXPR11	ext/fmt/include/fmt/core.h	80;"	d
FMT_CONSTEXPR_DECL	ext/fmt/include/fmt/core.h	67;"	d
FMT_CONSTEXPR_DECL	ext/fmt/include/fmt/core.h	70;"	d
FMT_CORE_H_	ext/fmt/include/fmt/core.h	9;"	d
FMT_CUDA_VERSION	ext/fmt/include/fmt/format.h	55;"	d
FMT_CUDA_VERSION	ext/fmt/include/fmt/format.h	57;"	d
FMT_DETECTED_NOEXCEPT	ext/fmt/include/fmt/core.h	129;"	d
FMT_DETECTED_NOEXCEPT	ext/fmt/include/fmt/core.h	132;"	d
FMT_ENABLE_IF_STRING	ext/fmt/include/fmt/core.h	1314;"	d
FMT_END_NAMESPACE	ext/fmt/include/fmt/core.h	148;"	d
FMT_END_NAMESPACE	ext/fmt/include/fmt/core.h	151;"	d
FMT_EXCEPTIONS	ext/fmt/include/fmt/core.h	117;"	d
FMT_EXCEPTIONS	ext/fmt/include/fmt/core.h	119;"	d
FMT_EXPLICIT	ext/fmt/include/fmt/core.h	95;"	d
FMT_EXPLICIT	ext/fmt/include/fmt/core.h	98;"	d
FMT_FALLTHROUGH	ext/fmt/include/fmt/format-inl.h	532;"	d
FMT_FALLTHROUGH	ext/fmt/include/fmt/format-inl.h	534;"	d
FMT_FALLTHROUGH	ext/fmt/include/fmt/format-inl.h	536;"	d
FMT_FORMAT_H_	ext/fmt/include/fmt/format.h	29;"	d
FMT_FORMAT_INL_H_	ext/fmt/include/fmt/format-inl.h	9;"	d
FMT_FUNC	ext/fmt/include/fmt/format.h	3694;"	d
FMT_GCC_VERSION	ext/fmt/include/fmt/core.h	41;"	d
FMT_GCC_VERSION	ext/fmt/include/fmt/core.h	43;"	d
FMT_GNUC_LIBSTD_VERSION	ext/fmt/include/fmt/format.h	95;"	d
FMT_HAS_BUILTIN	ext/fmt/include/fmt/format.h	89;"	d
FMT_HAS_BUILTIN	ext/fmt/include/fmt/format.h	91;"	d
FMT_HAS_CPP_ATTRIBUTE	ext/fmt/include/fmt/core.h	35;"	d
FMT_HAS_CPP_ATTRIBUTE	ext/fmt/include/fmt/core.h	37;"	d
FMT_HAS_CXX11_NOEXCEPT	ext/fmt/include/fmt/core.h	130;"	d
FMT_HAS_CXX11_NOEXCEPT	ext/fmt/include/fmt/core.h	133;"	d
FMT_HAS_FEATURE	ext/fmt/include/fmt/core.h	22;"	d
FMT_HAS_FEATURE	ext/fmt/include/fmt/core.h	24;"	d
FMT_HAS_GXX_CXX11	ext/fmt/include/fmt/core.h	47;"	d
FMT_HAS_GXX_CXX11	ext/fmt/include/fmt/core.h	49;"	d
FMT_HAS_INCLUDE	ext/fmt/include/fmt/core.h	29;"	d
FMT_HAS_INCLUDE	ext/fmt/include/fmt/core.h	31;"	d
FMT_ICC_VERSION	ext/fmt/include/fmt/format.h	47;"	d
FMT_ICC_VERSION	ext/fmt/include/fmt/format.h	49;"	d
FMT_ICC_VERSION	ext/fmt/include/fmt/format.h	51;"	d
FMT_INLINE_NAMESPACE	ext/fmt/include/fmt/core.h	147;"	d
FMT_INLINE_NAMESPACE	ext/fmt/include/fmt/core.h	150;"	d
FMT_LIB_DIR	Makefile	/^FMT_LIB_DIR=ext\/fmt\/include$/;"	m
FMT_MAKE_VALUE	ext/fmt/include/fmt/core.h	640;"	d
FMT_MAKE_VALUE_SAME	ext/fmt/include/fmt/core.h	646;"	d
FMT_MSC_VER	ext/fmt/include/fmt/core.h	53;"	d
FMT_MSC_VER	ext/fmt/include/fmt/core.h	55;"	d
FMT_NOEXCEPT	ext/fmt/include/fmt/core.h	/^typename std::add_rvalue_reference<T>::type declval() FMT_NOEXCEPT;$/;"	m	namespace:internal
FMT_NOEXCEPT	ext/fmt/include/fmt/core.h	138;"	d
FMT_NOEXCEPT	ext/fmt/include/fmt/core.h	140;"	d
FMT_NOEXCEPT	ext/fmt/include/fmt/format.h	/^                                  fmt::string_view message) FMT_NOEXCEPT;$/;"	m	namespace:internal
FMT_NULL	ext/fmt/include/fmt/core.h	104;"	d
FMT_NULL	ext/fmt/include/fmt/core.h	107;"	d
FMT_OVERRIDE	ext/fmt/include/fmt/core.h	86;"	d
FMT_OVERRIDE	ext/fmt/include/fmt/core.h	88;"	d
FMT_OVERRIDE	ext/fmt/include/fmt/format.h	/^  void grow(std::size_t size) FMT_OVERRIDE;$/;"	m	class:basic_memory_buffer
FMT_POWERS_OF_10	ext/fmt/include/fmt/format-inl.h	267;"	d
FMT_SECURE_SCL	ext/fmt/include/fmt/format.h	79;"	d
FMT_SECURE_SCL	ext/fmt/include/fmt/format.h	81;"	d
FMT_SNPRINTF	ext/fmt/include/fmt/format-inl.h	70;"	d
FMT_STRING	ext/fmt/include/fmt/format.h	3663;"	d
FMT_STRING_VIEW	ext/fmt/include/fmt/core.h	176;"	d
FMT_STRING_VIEW	ext/fmt/include/fmt/core.h	179;"	d
FMT_SWPRINTF	ext/fmt/include/fmt/format-inl.h	83;"	d
FMT_THROW	ext/fmt/include/fmt/format.h	113;"	d
FMT_TRY	ext/fmt/include/fmt/format-inl.h	40;"	d
FMT_TRY	ext/fmt/include/fmt/format-inl.h	43;"	d
FMT_UDL_TEMPLATE	ext/fmt/include/fmt/format.h	142;"	d
FMT_USE_ALIAS_TEMPLATES	ext/fmt/include/fmt/core.h	1302;"	d
FMT_USE_CONSTEXPR	ext/fmt/include/fmt/core.h	61;"	d
FMT_USE_CONSTEXPR11	ext/fmt/include/fmt/core.h	74;"	d
FMT_USE_EXPLICIT	ext/fmt/include/fmt/core.h	94;"	d
FMT_USE_EXPLICIT	ext/fmt/include/fmt/core.h	97;"	d
FMT_USE_EXTERN_TEMPLATES	ext/fmt/include/fmt/format.h	149;"	d
FMT_USE_GRISU	ext/fmt/include/fmt/format.h	165;"	d
FMT_USE_NOEXCEPT	ext/fmt/include/fmt/core.h	124;"	d
FMT_USE_NULLPTR	ext/fmt/include/fmt/core.h	105;"	d
FMT_USE_NULLPTR	ext/fmt/include/fmt/core.h	111;"	d
FMT_USE_TRAILING_RETURN	ext/fmt/include/fmt/format.h	159;"	d
FMT_USE_USER_DEFINED_LITERALS	ext/fmt/include/fmt/format.h	129;"	d
FMT_USE_WINDOWS_H	ext/fmt/include/fmt/format.h	1111;"	d
FMT_USE_WINDOWS_H	ext/fmt/include/fmt/format.h	1113;"	d
FMT_VERSION	ext/fmt/include/fmt/core.h	19;"	d
FOREGROUND_COLOR	ext/fmt/include/fmt/format-inl.h	/^template <typename T> const char basic_data<T>::FOREGROUND_COLOR[] = "\\x1b[38;2;";$/;"	m	class:internal::basic_data
FailureBit	ext/headers/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FalseTest	ext/headers/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FatalErrorCondition	ext/headers/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FinishRefresh	src/command_queue.cc	/^Command CommandQueue::FinishRefresh() {$/;"	f	class:dramsim3::CommandQueue
Flag	ext/headers/args.hxx	/^            Flag(Group &group_, const std::string &name_, const std::string &help_, Matcher &&matcher_, const bool extraError_ = false): FlagBase(name_, help_, std::move(matcher_), extraError_)$/;"	f	class:argstest::Flag
Flag	ext/headers/args.hxx	/^    class Flag : public FlagBase$/;"	c	namespace:argstest
FlagBase	ext/headers/args.hxx	/^            FlagBase(const std::string &name_, const std::string &help_, Matcher &&matcher_, const bool extraError_ = false) : NamedBase(name_, help_), extraError(extraError_), matcher(std::move(matcher_)) {}$/;"	f	class:argstest::FlagBase
FlagBase	ext/headers/args.hxx	/^    class FlagBase : public NamedBase$/;"	c	namespace:argstest
Flags	ext/headers/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
FormatFunc	ext/fmt/include/fmt/format-inl.h	/^typedef void (*FormatFunc)(internal::buffer &, int, string_view);$/;"	t	namespace:__anon13
GDDR5	src/configuration.h	/^    GDDR5,$/;"	m	class:dramsim3::DRAMProtocol
GDDR5X	src/configuration.h	/^    GDDR5X,$/;"	m	class:dramsim3::DRAMProtocol
GDDR6	src/configuration.h	/^    GDDR6,$/;"	m	class:dramsim3::DRAMProtocol
GENERATE	ext/headers/catch.hpp	3688;"	d
Generator	scripts/trace_gen.py	/^class Generator():$/;"	c
Get	ext/headers/INIReader.h	/^inline string INIReader::Get(string section, string name, string default_value) const$/;"	f	class:INIReader
Get	ext/headers/args.hxx	/^            bool Get() const$/;"	f	class:argstest::Flag
Get	ext/headers/args.hxx	/^            bool Get() const$/;"	f	class:argstest::Group
GetArgumentSeparations	ext/headers/args.hxx	/^            void GetArgumentSeparations($/;"	f	class:argstest::ArgumentParser
GetBitInPos	src/common.cc	/^int GetBitInPos(uint64_t bits, int pos) {$/;"	f	namespace:dramsim3
GetBoolean	ext/headers/INIReader.h	/^inline bool INIReader::GetBoolean(string section, string name, bool default_value) const$/;"	f	class:INIReader
GetBurstLength	src/memory_system.cc	/^int MemorySystem::GetBurstLength() const { return config_->BL; }$/;"	f	class:dramsim3::MemorySystem
GetBusBits	src/memory_system.cc	/^int MemorySystem::GetBusBits() const { return config_->bus_width; }$/;"	f	class:dramsim3::MemorySystem
GetChannel	src/dram_system.cc	/^int BaseDRAMSystem::GetChannel(AddressPair hex_addr) const {$/;"	f	class:dramsim3::BaseDRAMSystem
GetChildDescriptions	ext/headers/args.hxx	/^            std::vector<std::tuple<std::string, std::string, unsigned int>> GetChildDescriptions(const std::string &shortPrefix, const std::string &longPrefix, const std::string &shortSeparator, const std::string &longSeparator, const unsigned int indent = 0) const$/;"	f	class:argstest::Group
GetCommandToIssue	src/command_queue.cc	/^Command CommandQueue::GetCommandToIssue() {$/;"	f	class:dramsim3::CommandQueue
GetDRAMProtocol	src/configuration.cc	/^DRAMProtocol Config::GetDRAMProtocol(std::string protocol_str) {$/;"	f	class:dramsim3::Config
GetDescription	ext/headers/args.hxx	/^            virtual std::tuple<std::string, std::string> GetDescription(const std::string &shortPrefix, const std::string &longPrefix, const std::string &shortSeparator, const std::string &longSeparator) const$/;"	f	class:argstest::Base
GetError	ext/headers/args.hxx	/^            virtual Error GetError() const$/;"	f	class:argstest::Base
GetFirstReadyInQueue	src/command_queue.cc	/^Command CommandQueue::GetFirstReadyInQueue(CMDQueue& queue) {$/;"	f	class:dramsim3::CommandQueue
GetFlagStrings	ext/headers/args.hxx	/^            std::vector<std::string> GetFlagStrings(const std::string &shortPrefix, const std::string &longPrefix) const$/;"	f	class:argstest::Matcher
GetFlagStrings	ext/headers/args.hxx	/^            std::vector<std::string> GetFlagStrings(const std::string &shortPrefix, const std::string &longPrefix, const std::string &name, const std::string &shortSeparator, const std::string longSeparator) const$/;"	f	class:argstest::Matcher
GetHistoAvg	src/simple_stats.cc	/^double SimpleStats::GetHistoAvg(const HistoCount& hist_counts) const {$/;"	f	class:dramsim3::SimpleStats
GetInteger	ext/headers/INIReader.h	/^inline long INIReader::GetInteger(string section, string name, long default_value) const$/;"	f	class:INIReader
GetInteger	src/configuration.cc	/^int Config::GetInteger(const std::string& sec, const std::string& opt,$/;"	f	class:dramsim3::Config
GetLong	ext/headers/args.hxx	/^        static std::unordered_set<std::string> GetLong(std::initializer_list<EitherFlag> flags)$/;"	f	struct:argstest::EitherFlag
GetMaxTofCase	src/thermal.cc	/^double ThermalCalculator::GetMaxTofCase(double **temp_map, int case_id) {$/;"	f	class:dramsim3::ThermalCalculator
GetMaxTofCaseLayer	src/thermal.cc	/^double ThermalCalculator::GetMaxTofCaseLayer(double **temp_map, int case_id,$/;"	f	class:dramsim3::ThermalCalculator
GetMemorySystem	src/memory_system.cc	/^MemorySystem* GetMemorySystem(const std::string &config_file, const std::string &output_dir,$/;"	f	namespace:dramsim3
GetNextPositional	ext/headers/args.hxx	/^            PositionalBase *GetNextPositional()$/;"	f	class:argstest::Group
GetNextQueue	src/command_queue.cc	/^CMDQueue& CommandQueue::GetNextQueue() {$/;"	f	class:dramsim3::CommandQueue
GetPhyAddress	src/thermal.cc	/^std::function<Address(const Address &addr)> GetPhyAddress;$/;"	m	namespace:dramsim3	file:
GetPosNames	ext/headers/args.hxx	/^            std::vector<std::string> GetPosNames() const$/;"	f	class:argstest::Group
GetQueue	src/command_queue.cc	/^CMDQueue& CommandQueue::GetQueue(int rank, int bankgroup, int bank) {$/;"	f	class:dramsim3::CommandQueue
GetQueueIndex	src/command_queue.cc	/^int CommandQueue::GetQueueIndex(int rank, int bankgroup, int bank) const {$/;"	f	class:dramsim3::CommandQueue
GetQueueSize	src/memory_system.cc	/^int MemorySystem::GetQueueSize() const { return config_->trans_queue_size; }$/;"	f	class:dramsim3::MemorySystem
GetReadyCommand	src/bankstate.cc	/^Command BankState::GetReadyCommand(const Command& cmd, uint64_t clk) const {$/;"	f	class:dramsim3::BankState
GetReadyCommand	src/channel_state.cc	/^Command ChannelState::GetReadyCommand(const Command& cmd, uint64_t clk) const {$/;"	f	class:dramsim3::ChannelState
GetReal	ext/headers/INIReader.h	/^inline double INIReader::GetReal(string section, string name, double default_value) const$/;"	f	class:INIReader
GetRefQIndices	src/command_queue.cc	/^void CommandQueue::GetRefQIndices(const Command& ref) {$/;"	f	class:dramsim3::CommandQueue
GetShort	ext/headers/args.hxx	/^        static std::unordered_set<char> GetShort(std::initializer_list<EitherFlag> flags)$/;"	f	struct:argstest::EitherFlag
GetTCK	src/memory_system.cc	/^double MemorySystem::GetTCK() const { return config_->tCK; }$/;"	f	class:dramsim3::MemorySystem
GetTextHeader	src/simple_stats.cc	/^std::string SimpleStats::GetTextHeader(bool is_final) const {$/;"	f	class:dramsim3::SimpleStats
GetTotalPower	src/thermal.cc	/^double ThermalCalculator::GetTotalPower(double ***powerM) {$/;"	f	class:dramsim3::ThermalCalculator
Glyphs	ext/headers/args.hxx	/^    std::string::size_type Glyphs(const std::string &string_)$/;"	f	namespace:argstest
Group	ext/headers/args.hxx	/^            Group(Group &group_, const std::string &help_ = std::string(), const std::function<bool(const Group &)> &validator_ = Validators::DontCare) : Base(help_), validator(validator_)$/;"	f	class:argstest::Group
Group	ext/headers/args.hxx	/^            Group(const std::string &help_ = std::string(), const std::function<bool(const Group &)> &validator_ = Validators::DontCare) : Base(help_), validator(validator_) {}$/;"	f	class:argstest::Group
Group	ext/headers/args.hxx	/^    class Group : public Base$/;"	c	namespace:argstest
HASH_FLAG	ext/fmt/include/fmt/format.h	/^enum { SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8 };$/;"	e	enum:__anon6
HBM	src/configuration.h	/^    HBM,$/;"	m	class:dramsim3::DRAMProtocol
HBM2	src/configuration.h	/^    HBM2,$/;"	m	class:dramsim3::DRAMProtocol
HEX	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	483;"	d	file:
HEX	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	468;"	d	file:
HEX	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	507;"	d	file:
HEX	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	492;"	d	file:
HMC	src/configuration.h	/^    HMC,$/;"	m	class:dramsim3::DRAMProtocol
HMCLinkType	src/hmc.h	/^enum class HMCLinkType { HOST_TO_DEV, DEV_TO_DEV, SIZE };$/;"	c	namespace:dramsim3
HMCMemorySystem	src/hmc.cc	/^HMCMemorySystem::HMCMemorySystem(Config &config, const std::string &output_dir,$/;"	f	class:dramsim3::HMCMemorySystem
HMCMemorySystem	src/hmc.h	/^class HMCMemorySystem : public BaseDRAMSystem {$/;"	c	namespace:dramsim3
HMCReqType	src/hmc.h	/^enum class HMCReqType {$/;"	c	namespace:dramsim3
HMCRequest	src/hmc.cc	/^HMCRequest::HMCRequest(HMCReqType req_type, AddressPair hex_addr, int vault)$/;"	f	class:dramsim3::HMCRequest
HMCRequest	src/hmc.h	/^class HMCRequest {$/;"	c	namespace:dramsim3
HMCRespType	src/hmc.h	/^enum class HMCRespType { NONE, RD_RS, WR_RS, ERR, SIZE };$/;"	c	namespace:dramsim3
HMCResponse	src/hmc.cc	/^HMCResponse::HMCResponse(uint64_t id, HMCReqType req_type, int dest_link,$/;"	f	class:dramsim3::HMCResponse
HMCResponse	src/hmc.h	/^class HMCResponse {$/;"	c	namespace:dramsim3
HOST_TO_DEV	src/hmc.h	/^enum class HMCLinkType { HOST_TO_DEV, DEV_TO_DEV, SIZE };$/;"	m	class:dramsim3::HMCLinkType
HasFlag	ext/headers/args.hxx	/^            bool HasFlag() const$/;"	f	class:argstest::Group
HasRWDependency	src/command_queue.cc	/^bool CommandQueue::HasRWDependency(const CMDIterator& cmd_it,$/;"	f	class:dramsim3::CommandQueue
Hcu	src/thermal_config.h	/^const double Hcu = 5e-6;     \/\/ Copper$/;"	v
Help	ext/headers/args.hxx	/^            Help(const std::string &flag) : Error(flag) {}$/;"	f	class:argstest::Help
Help	ext/headers/args.hxx	/^            std::string Help() const$/;"	f	class:argstest::ArgumentParser
Help	ext/headers/args.hxx	/^            void Help(std::ostream &help) const$/;"	f	class:argstest::ArgumentParser
Help	ext/headers/args.hxx	/^    class Help : public Error$/;"	c	namespace:argstest
Help	ext/headers/catch.hpp	/^        Help( bool &showHelpFlag )$/;"	f	struct:Catch::Help
Help	ext/headers/catch.hpp	/^    struct Help : Opt {$/;"	s	namespace:Catch
HelpFlag	ext/headers/args.hxx	/^            HelpFlag(Group &group_, const std::string &name_, const std::string &help_, Matcher &&matcher_): Flag(group_, name_, help_, std::move(matcher_)) {}$/;"	f	class:argstest::HelpFlag
HelpFlag	ext/headers/args.hxx	/^    class HelpFlag : public Flag$/;"	c	namespace:argstest
HelpParams	ext/headers/args.hxx	/^            struct HelpParams$/;"	s	class:argstest::ArgumentParser
Hhs	src/thermal_config.h	/^const double Hhs = 1000e-6;  \/\/ Heat sink$/;"	v
Hin	src/thermal_config.h	/^const double Hin = 20e-6;    \/\/ Insulator$/;"	v
Hsi	src/thermal_config.h	/^const double Hsi = 400e-6;   \/\/ Silicon$/;"	v
ID_VOID_MAIN	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INC	Makefile	/^INC=-Isrc\/ -I$(FMT_LIB_DIR) -I$(INI_LIB_DIR) -I$(ARGS_LIB_DIR) -I$(JSON_LIB_DIR)$/;"	m
INC8	src/hmc.h	/^    INC8,  \/\/ read, return(the original), then write$/;"	m	class:dramsim3::HMCReqType
INDEX	ext/fmt/include/fmt/format.h	/^  enum Kind { NONE, INDEX, NAME };$/;"	e	enum:internal::arg_ref::Kind
INF_SIZE	ext/fmt/include/fmt/format.h	/^  enum {INF_SIZE = 3}; \/\/ This is an enum to workaround a bug in MSVC.$/;"	e	enum:basic_writer::__anon11
INIReader	ext/headers/INIReader.h	/^    INIReader() {};$/;"	f	class:INIReader
INIReader	ext/headers/INIReader.h	/^class INIReader$/;"	c
INIReader	ext/headers/INIReader.h	/^inline INIReader::INIReader(string filename)$/;"	f	class:INIReader
INI_ALLOW_BOM	ext/headers/INIReader.h	67;"	d
INI_ALLOW_INLINE_COMMENTS	ext/headers/INIReader.h	74;"	d
INI_ALLOW_MULTILINE	ext/headers/INIReader.h	61;"	d
INI_INLINE_COMMENT_PREFIXES	ext/headers/INIReader.h	77;"	d
INI_LIB_DIR	Makefile	/^INI_LIB_DIR=ext\/headers$/;"	m
INI_MAX_LINE	ext/headers/INIReader.h	92;"	d
INI_STOP_ON_FIRST_ERROR	ext/headers/INIReader.h	87;"	d
INI_USE_STACK	ext/headers/INIReader.h	82;"	d
INTERNAL_CATCH_CAPTURE	ext/headers/catch.hpp	2410;"	d
INTERNAL_CATCH_CATCH	ext/headers/catch.hpp	2316;"	d
INTERNAL_CATCH_DEF	ext/headers/catch.hpp	712;"	d
INTERNAL_CATCH_DYNAMIC_SECTION	ext/headers/catch.hpp	2559;"	d
INTERNAL_CATCH_ELSE	ext/headers/catch.hpp	2346;"	d
INTERNAL_CATCH_EXPAND1	ext/headers/catch.hpp	710;"	d
INTERNAL_CATCH_EXPAND2	ext/headers/catch.hpp	711;"	d
INTERNAL_CATCH_EXPAND_VARGS	ext/headers/catch.hpp	674;"	d
INTERNAL_CATCH_IF	ext/headers/catch.hpp	2341;"	d
INTERNAL_CATCH_INFO	ext/headers/catch.hpp	2415;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	ext/headers/catch.hpp	738;"	d
INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES	ext/headers/catch.hpp	740;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	ext/headers/catch.hpp	882;"	d
INTERNAL_CATCH_MSG	ext/headers/catch.hpp	2402;"	d
INTERNAL_CATCH_NOINTERNAL_CATCH_DEF	ext/headers/catch.hpp	713;"	d
INTERNAL_CATCH_NO_THROW	ext/headers/catch.hpp	2351;"	d
INTERNAL_CATCH_REACT	ext/headers/catch.hpp	2325;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	ext/headers/catch.hpp	902;"	d
INTERNAL_CATCH_REMOVE_PARENS	ext/headers/catch.hpp	725;"	d
INTERNAL_CATCH_SECTION	ext/headers/catch.hpp	2554;"	d
INTERNAL_CATCH_STRINGIZE	ext/headers/catch.hpp	714;"	d
INTERNAL_CATCH_STRINGIZE2	ext/headers/catch.hpp	716;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	ext/headers/catch.hpp	717;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	ext/headers/catch.hpp	976;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2	ext/headers/catch.hpp	948;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	ext/headers/catch.hpp	1044;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2	ext/headers/catch.hpp	1013;"	d
INTERNAL_CATCH_TEMPLATE_REGISTRY_INITIATE	ext/headers/catch.hpp	942;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	ext/headers/catch.hpp	935;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_2	ext/headers/catch.hpp	908;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	ext/headers/catch.hpp	1006;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2	ext/headers/catch.hpp	983;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	ext/headers/catch.hpp	860;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	ext/headers/catch.hpp	857;"	d
INTERNAL_CATCH_TEMPLATE_UNIQUE_NAME	ext/headers/catch.hpp	730;"	d
INTERNAL_CATCH_TEMPLATE_UNIQUE_NAME2	ext/headers/catch.hpp	727;"	d
INTERNAL_CATCH_TEMPLATE_UNIQUE_NAME3	ext/headers/catch.hpp	729;"	d
INTERNAL_CATCH_TEST	ext/headers/catch.hpp	2328;"	d
INTERNAL_CATCH_TESTCASE	ext/headers/catch.hpp	878;"	d
INTERNAL_CATCH_TESTCASE2	ext/headers/catch.hpp	872;"	d
INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION	ext/headers/catch.hpp	850;"	d
INTERNAL_CATCH_TESTCASE_NO_REGISTRATION	ext/headers/catch.hpp	848;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	ext/headers/catch.hpp	898;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	ext/headers/catch.hpp	888;"	d
INTERNAL_CATCH_THROWS	ext/headers/catch.hpp	2365;"	d
INTERNAL_CATCH_THROWS_AS	ext/headers/catch.hpp	2382;"	d
INTERNAL_CATCH_THROWS_MATCHES	ext/headers/catch.hpp	3416;"	d
INTERNAL_CATCH_THROWS_STR_MATCHES	ext/headers/catch.hpp	2424;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	ext/headers/catch.hpp	2729;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	ext/headers/catch.hpp	2722;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION_NO_REG	ext/headers/catch.hpp	2662;"	d
INTERNAL_CATCH_TRY	ext/headers/catch.hpp	2315;"	d
INTERNAL_CATCH_UNIQUE_NAME	ext/headers/catch.hpp	386;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	ext/headers/catch.hpp	384;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	ext/headers/catch.hpp	383;"	d
INTERNAL_CATCH_UNSCOPED_INFO	ext/headers/catch.hpp	2419;"	d
INTERNAL_CHECK_THAT	ext/headers/catch.hpp	3406;"	d
IStream	ext/headers/catch.hpp	/^    struct IStream {$/;"	s	namespace:Catch
ITestCaseRegistry	ext/headers/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestInvoker	ext/headers/catch.hpp	/^    struct ITestInvoker {$/;"	s	namespace:Catch
IdealDRAMSystem	src/dram_system.cc	/^IdealDRAMSystem::IdealDRAMSystem(Config &config, const std::string &output_dir,$/;"	f	class:dramsim3::IdealDRAMSystem
IdealDRAMSystem	src/dram_system.h	/^class IdealDRAMSystem : public BaseDRAMSystem {$/;"	c	namespace:dramsim3
InCopyFlagDown	src/command_queue.cc	/^void CommandQueue::InCopyFlagDown(){$/;"	f	class:dramsim3::CommandQueue
InCopyFlagDown	src/controller.cc	/^void Controller::InCopyFlagDown(){$/;"	f	class:dramsim3::Controller
Increment	src/simple_stats.h	/^    void Increment(const std::string name) { epoch_counters_[name] += 1; }$/;"	f	class:dramsim3::SimpleStats
IncrementVec	src/simple_stats.h	/^    void IncrementVec(const std::string name, int pos) {$/;"	f	class:dramsim3::SimpleStats
IncrementVecBy	src/simple_stats.h	/^    void IncrementVecBy(const std::string name, int pos, int num) {$/;"	f	class:dramsim3::SimpleStats
Info	ext/headers/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
InitDRAMParams	src/configuration.cc	/^void Config::InitDRAMParams() {$/;"	f	class:dramsim3::Config
InitHistoStat	src/simple_stats.cc	/^void SimpleStats::InitHistoStat(std::string name, std::string description,$/;"	f	class:dramsim3::SimpleStats
InitOtherParams	src/configuration.cc	/^void Config::InitOtherParams() {$/;"	f	class:dramsim3::Config
InitPowerM	src/thermal.cc	/^double ***ThermalCalculator::InitPowerM(int case_id, uint64_t clk) {$/;"	f	class:dramsim3::ThermalCalculator
InitPowerParams	src/configuration.cc	/^void Config::InitPowerParams() {$/;"	f	class:dramsim3::Config
InitStat	src/simple_stats.cc	/^void SimpleStats::InitStat(std::string name, std::string stat_type,$/;"	f	class:dramsim3::SimpleStats
InitSystemParams	src/configuration.cc	/^void Config::InitSystemParams() {$/;"	f	class:dramsim3::Config
InitThermalParams	src/configuration.cc	/^void Config::InitThermalParams() {$/;"	f	class:dramsim3::Config
InitTimingParams	src/configuration.cc	/^void Config::InitTimingParams() {$/;"	f	class:dramsim3::Config
InitVecStat	src/simple_stats.cc	/^void SimpleStats::InitVecStat(std::string name, std::string stat_type,$/;"	f	class:dramsim3::SimpleStats
InitialParameters	src/thermal.cc	/^void ThermalCalculator::InitialParameters() {$/;"	f	class:dramsim3::ThermalCalculator
InsertHMCReq	src/hmc.cc	/^bool HMCMemorySystem::InsertHMCReq(HMCRequest *req) {$/;"	f	class:dramsim3::HMCMemorySystem
InsertRefresh	src/refresh.cc	/^void Refresh::InsertRefresh() {$/;"	f	class:dramsim3::Refresh
InsertReqToDRAM	src/hmc.cc	/^void HMCMemorySystem::InsertReqToDRAM(HMCRequest *req) {$/;"	f	class:dramsim3::HMCMemorySystem
InsertReqToLink	src/hmc.cc	/^bool HMCMemorySystem::InsertReqToLink(HMCRequest *req, int link) {$/;"	f	class:dramsim3::HMCMemorySystem
InternalParseResult	ext/headers/catch.hpp	/^        virtual auto parse( std::string const& exeName, TokenStream const &tokens) const -> InternalParseResult  = 0;$/;"	m	namespace:Catch::Detail
Is32AWReady	src/channel_state.cc	/^bool ChannelState::Is32AWReady(int rank, uint64_t curr_time) const {$/;"	f	class:dramsim3::ChannelState
IsAllBankIdleInRank	src/channel_state.cc	/^bool ChannelState::IsAllBankIdleInRank(int rank) const {$/;"	f	class:dramsim3::ChannelState
IsDDR4	src/configuration.h	/^    bool IsDDR4() const { return (protocol == DRAMProtocol::DDR4); }$/;"	f	class:dramsim3::Config
IsFAWReady	src/channel_state.cc	/^bool ChannelState::IsFAWReady(int rank, uint64_t curr_time) const {$/;"	f	class:dramsim3::ChannelState
IsGDDR	src/configuration.h	/^    bool IsGDDR() const {$/;"	f	class:dramsim3::Config
IsHBM	src/configuration.h	/^    bool IsHBM() const {$/;"	f	class:dramsim3::Config
IsHMC	src/configuration.h	/^    bool IsHMC() const { return (protocol == DRAMProtocol::HMC); }$/;"	f	class:dramsim3::Config
IsRWPendingOnRef	src/channel_state.cc	/^bool ChannelState::IsRWPendingOnRef(const Command& cmd) const {$/;"	f	class:dramsim3::ChannelState
IsRankActive	src/thermal_replay.cc	/^bool ThermalReplay::IsRankActive(int channel, int rank) {$/;"	f	class:ThermalReplay
IsRankCMD	src/common.h	/^    bool IsRankCMD() const {$/;"	f	struct:dramsim3::Command
IsRankSelfRefreshing	src/channel_state.h	/^    bool IsRankSelfRefreshing(int rank) const { return rank_is_sref_[rank]; }$/;"	f	class:dramsim3::ChannelState
IsRead	src/common.h	/^    bool IsRead() const {$/;"	f	struct:dramsim3::Command
IsReadCopy	src/common.h	/^    bool IsReadCopy() const {$/;"	f	struct:dramsim3::Command
IsReadWrite	src/common.h	/^    bool IsReadWrite() const { return IsRead() || IsWrite(); }$/;"	f	struct:dramsim3::Command
IsRefresh	src/common.h	/^    bool IsRefresh() const {$/;"	f	struct:dramsim3::Command
IsRefreshWaiting	src/channel_state.h	/^    bool IsRefreshWaiting() const { return !refresh_q_.empty(); }$/;"	f	class:dramsim3::ChannelState
IsRowOpen	src/bankstate.h	/^    bool IsRowOpen() const { return state_ == State::OPEN; }$/;"	f	class:dramsim3::BankState
IsRowOpen	src/channel_state.h	/^    bool IsRowOpen(int rank, int bankgroup, int bank) const {$/;"	f	class:dramsim3::ChannelState
IsStreamInsertable	ext/headers/catch.hpp	/^        class IsStreamInsertable {$/;"	c	namespace:Catch::Detail
IsValid	src/common.h	/^    bool IsValid() const { return cmd_type != CommandType::SIZE; }$/;"	f	struct:dramsim3::Command
IsWrite	src/common.h	/^    bool IsWrite() const {$/;"	f	struct:dramsim3::Command
IsWriteCopy	src/common.h	/^    bool IsWriteCopy() const {$/;"	f	struct:dramsim3::Command
IssueCommand	src/controller.cc	/^void Controller::IssueCommand(const Command &cmd) {$/;"	f	class:dramsim3::Controller
IterateNext	src/refresh.cc	/^void Refresh::IterateNext() {$/;"	f	class:dramsim3::Refresh
IterateNextLink	src/hmc.cc	/^inline void HMCMemorySystem::IterateNextLink() {$/;"	f	class:dramsim3::HMCMemorySystem
JSON_CATCH	ext/headers/json.hpp	172;"	d
JSON_CATCH	ext/headers/json.hpp	191;"	d
JSON_CATCH	ext/headers/json.hpp	192;"	d
JSON_CATCH	ext/headers/json.hpp	20574;"	d
JSON_DEPRECATED	ext/headers/json.hpp	148;"	d
JSON_DEPRECATED	ext/headers/json.hpp	20579;"	d
JSON_HAS_CPP_14	ext/headers/json.hpp	20581;"	d
JSON_HAS_CPP_14	ext/headers/json.hpp	213;"	d
JSON_HAS_CPP_17	ext/headers/json.hpp	20582;"	d
JSON_HAS_CPP_17	ext/headers/json.hpp	212;"	d
JSON_INTERNAL_CATCH	ext/headers/json.hpp	173;"	d
JSON_INTERNAL_CATCH	ext/headers/json.hpp	193;"	d
JSON_INTERNAL_CATCH	ext/headers/json.hpp	194;"	d
JSON_INTERNAL_CATCH	ext/headers/json.hpp	197;"	d
JSON_INTERNAL_CATCH	ext/headers/json.hpp	198;"	d
JSON_INTERNAL_CATCH	ext/headers/json.hpp	20573;"	d
JSON_LIB_DIR	Makefile	/^JSON_LIB_DIR=ext\/headers$/;"	m
JSON_LIKELY	ext/headers/json.hpp	203;"	d
JSON_LIKELY	ext/headers/json.hpp	20577;"	d
JSON_NODISCARD	ext/headers/json.hpp	158;"	d
JSON_NODISCARD	ext/headers/json.hpp	20580;"	d
JSON_THROW	ext/headers/json.hpp	170;"	d
JSON_THROW	ext/headers/json.hpp	183;"	d
JSON_THROW	ext/headers/json.hpp	184;"	d
JSON_THROW	ext/headers/json.hpp	20575;"	d
JSON_TRY	ext/headers/json.hpp	171;"	d
JSON_TRY	ext/headers/json.hpp	187;"	d
JSON_TRY	ext/headers/json.hpp	188;"	d
JSON_TRY	ext/headers/json.hpp	20576;"	d
JSON_UNLIKELY	ext/headers/json.hpp	204;"	d
JSON_UNLIKELY	ext/headers/json.hpp	20578;"	d
JedecDRAMSystem	src/dram_system.cc	/^JedecDRAMSystem::JedecDRAMSystem(Config &config, const std::string &output_dir,$/;"	f	class:dramsim3::JedecDRAMSystem
JedecDRAMSystem	src/dram_system.h	/^class JedecDRAMSystem : public BaseDRAMSystem {$/;"	c	namespace:dramsim3
Kcu	src/thermal_config.h	/^const double Kcu = 401.0;  \/\/ Copper$/;"	v
Khs	src/thermal_config.h	/^const double Khs = 4.0;    \/\/ Heat sink$/;"	v
Kin	src/thermal_config.h	/^const double Kin = 1.5;    \/\/ insulator$/;"	v
Kind	ext/fmt/include/fmt/format.h	/^  enum Kind { NONE, INDEX, NAME };$/;"	g	struct:internal::arg_ref
Ksi	src/thermal_config.h	/^const double Ksi = 148.0;  \/\/ Silicon$/;"	v
LIB_NAME	Makefile	/^LIB_NAME=libdramsim3.so$/;"	m
LPDDR	src/configuration.h	/^    LPDDR,$/;"	m	class:dramsim3::DRAMProtocol
LPDDR3	src/configuration.h	/^    LPDDR3,$/;"	m	class:dramsim3::DRAMProtocol
LPDDR4	src/configuration.h	/^    LPDDR4,$/;"	m	class:dramsim3::DRAMProtocol
LPDDRValidtion	scripts/validation.py	/^class LPDDRValidtion(DRAMValidation):$/;"	c
LocationMappingANDaddEnergy	src/thermal.cc	/^void ThermalCalculator::LocationMappingANDaddEnergy(const int channel,$/;"	f	class:dramsim3::ThermalCalculator
LocationMappingANDaddEnergy_RF	src/thermal.cc	/^void ThermalCalculator::LocationMappingANDaddEnergy_RF(const int channel,$/;"	f	class:dramsim3::ThermalCalculator
LogBase2	src/common.cc	/^int LogBase2(int power_of_two) {$/;"	f	namespace:dramsim3
LongPrefix	ext/headers/args.hxx	/^            const std::string &LongPrefix() const$/;"	f	class:argstest::ArgumentParser
LongPrefix	ext/headers/args.hxx	/^            void LongPrefix(const std::string &longprefix_)$/;"	f	class:argstest::ArgumentParser
LongSeparator	ext/headers/args.hxx	/^            const std::string &LongSeparator() const$/;"	f	class:argstest::ArgumentParser
LongSeparator	ext/headers/args.hxx	/^            void LongSeparator(const std::string &longseparator_)$/;"	f	class:argstest::ArgumentParser
MAX_NAME	ext/headers/INIReader.h	121;"	d
MAX_SECTION	ext/headers/INIReader.h	120;"	d
MINUS_FLAG	ext/fmt/include/fmt/format.h	/^enum { SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8 };$/;"	e	enum:__anon6
M_PI	src/thermal_config.h	/^const double M_PI = 3.141592653;$/;"	v
MakeKey	ext/headers/INIReader.h	/^inline string INIReader::MakeKey(string section, string name)$/;"	f	class:INIReader
Map	ext/headers/args.hxx	/^        Map,$/;"	m	class:argstest::Error
MapError	ext/headers/args.hxx	/^            MapError(const std::string &problem) : ParseError(problem) {}$/;"	f	class:argstest::MapError
MapError	ext/headers/args.hxx	/^    class MapError : public ParseError$/;"	c	namespace:argstest
MapFlag	ext/headers/args.hxx	/^            MapFlag(Group &group_, const std::string &name_, const std::string &help_, Matcher &&matcher_, const Map<K, T> &map_, const T &defaultValue_ = T(), const bool extraError_ = false): ValueFlagBase(name_, help_, std::move(matcher_), extraError_), map(map_), value(defaultValue_)$/;"	f	class:argstest::MapFlag
MapFlag	ext/headers/args.hxx	/^    class MapFlag : public ValueFlagBase$/;"	c	namespace:argstest
MapFlagList	ext/headers/args.hxx	/^            MapFlagList(Group &group_, const std::string &name_, const std::string &help_, Matcher &&matcher_, const Map<K, T> &map_, const List<T> &defaultValues_ = List<T>()): ValueFlagBase(name_, help_, std::move(matcher_)), map(map_), values(defaultValues_)$/;"	f	class:argstest::MapFlagList
MapFlagList	ext/headers/args.hxx	/^    class MapFlagList : public ValueFlagBase$/;"	c	namespace:argstest
MapPositional	ext/headers/args.hxx	/^            MapPositional(Group &group_, const std::string &name_, const std::string &help_, const Map<K, T> &map_, const T &defaultValue_ = T()): PositionalBase(name_, help_), map(map_), value(defaultValue_)$/;"	f	class:argstest::MapPositional
MapPositional	ext/headers/args.hxx	/^    class MapPositional : public PositionalBase$/;"	c	namespace:argstest
MapPositionalList	ext/headers/args.hxx	/^            MapPositionalList(Group &group_, const std::string &name_, const std::string &help_, const Map<K, T> &map_, const List<T> &defaultValues_ = List<T>()): PositionalBase(name_, help_), map(map_), values(defaultValues_)$/;"	f	class:argstest::MapPositionalList
MapPositionalList	ext/headers/args.hxx	/^    class MapPositionalList : public PositionalBase$/;"	c	namespace:argstest
MapToBank	src/thermal.cc	/^std::pair<int, int> ThermalCalculator::MapToBank(int bankgroup_id,$/;"	f	class:dramsim3::ThermalCalculator
MapToVault	src/thermal.cc	/^std::pair<int, int> ThermalCalculator::MapToVault(int channel_id) {$/;"	f	class:dramsim3::ThermalCalculator
MapToXY	src/thermal.cc	/^std::pair<std::vector<int>, std::vector<int>> ThermalCalculator::MapToXY($/;"	f	class:dramsim3::ThermalCalculator
MapToZ	src/thermal.cc	/^int ThermalCalculator::MapToZ(int channel_id, int bank_id) {$/;"	f	class:dramsim3::ThermalCalculator
Match	ext/headers/args.hxx	/^            FlagBase *Match(const T &flag)$/;"	f	class:argstest::Group
Match	ext/headers/args.hxx	/^            bool Match(const char flag) const$/;"	f	class:argstest::Matcher
Match	ext/headers/args.hxx	/^            bool Match(const std::string &flag) const$/;"	f	class:argstest::Matcher
Match	ext/headers/args.hxx	/^            virtual FlagBase *Match(const char flag)$/;"	f	class:argstest::FlagBase
Match	ext/headers/args.hxx	/^            virtual FlagBase *Match(const std::string &flag)$/;"	f	class:argstest::FlagBase
MatchedChildren	ext/headers/args.hxx	/^            std::vector<Base *>::size_type MatchedChildren() const$/;"	f	class:argstest::Group
Matcher	ext/headers/args.hxx	/^            Matcher(Matcher &&other) : shortFlags(std::move(other.shortFlags)), longFlags(std::move(other.longFlags))$/;"	f	class:argstest::Matcher
Matcher	ext/headers/args.hxx	/^            Matcher(Short &&shortIn, Long &&longIn) :$/;"	f	class:argstest::Matcher
Matcher	ext/headers/args.hxx	/^            Matcher(ShortIt shortFlagsStart, ShortIt shortFlagsEnd, LongIt longFlagsStart, LongIt longFlagsEnd) :$/;"	f	class:argstest::Matcher
Matcher	ext/headers/args.hxx	/^            Matcher(std::initializer_list<EitherFlag> in) :$/;"	f	class:argstest::Matcher
Matcher	ext/headers/args.hxx	/^    class Matcher$/;"	c	namespace:argstest
MemorySystem	src/dramsim3.h	/^class MemorySystem {$/;"	c	namespace:dramsim3
MemorySystem	src/memory_system.cc	/^MemorySystem::MemorySystem(const std::string &config_file,$/;"	f	class:dramsim3::MemorySystem
MemorySystem	src/memory_system.h	/^class MemorySystem {$/;"	c	namespace:dramsim3
Midx	src/thermal.h	/^    double **Midx;          \/\/ Midx storing thermal conductance$/;"	m	class:dramsim3::ThermalCalculator
MidxSize	src/thermal.h	/^    int MidxSize, CapSize;  \/\/ first dimension size of Midx and Cap$/;"	m	class:dramsim3::ThermalCalculator
ModuloWidth	src/common.h	/^inline uint32_t ModuloWidth(AddressPair addr, uint32_t bit_width, uint32_t pos) {$/;"	f	namespace:dramsim3
NAME	ext/fmt/include/fmt/format.h	/^  enum Kind { NONE, INDEX, NAME };$/;"	e	enum:internal::arg_ref::Kind
NAND16	src/hmc.h	/^    NAND16,$/;"	m	class:dramsim3::HMCReqType
NLOHMANN_BASIC_JSON_TPL	ext/headers/json.hpp	20584;"	d
NLOHMANN_BASIC_JSON_TPL	ext/headers/json.hpp	260;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	ext/headers/json.hpp	20583;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	ext/headers/json.hpp	252;"	d
NLOHMANN_JSON_FWD_HPP	ext/headers/json.hpp	51;"	d
NLOHMANN_JSON_HPP	ext/headers/json.hpp	31;"	d
NLOHMANN_JSON_SERIALIZE_ENUM	ext/headers/json.hpp	223;"	d
NLOHMANN_JSON_VERSION_MAJOR	ext/headers/json.hpp	33;"	d
NLOHMANN_JSON_VERSION_MINOR	ext/headers/json.hpp	34;"	d
NLOHMANN_JSON_VERSION_PATCH	ext/headers/json.hpp	35;"	d
NOMINMAX	ext/fmt/include/fmt/format-inl.h	33;"	d
NOMINMAX	ext/fmt/include/fmt/format-inl.h	35;"	d
NOMINMAX	ext/headers/catch.hpp	6052;"	d
NOMINMAX	ext/headers/catch.hpp	6066;"	d
NONE	ext/fmt/include/fmt/format.h	/^  enum Kind { NONE, INDEX, NAME };$/;"	e	enum:internal::arg_ref::Kind
NONE	src/hmc.h	/^enum class HMCRespType { NONE, RD_RS, WR_RS, ERR, SIZE };$/;"	m	class:dramsim3::HMCRespType
NOR16	src/hmc.h	/^    NOR16,$/;"	m	class:dramsim3::HMCReqType
NUM_ARGS	ext/fmt/include/fmt/core.h	/^  static const size_t NUM_ARGS = sizeof...(Args);$/;"	m	class:format_arg_store
NUM_ARGS	ext/fmt/include/fmt/format.h	/^  enum { NUM_ARGS = sizeof...(Args) };$/;"	e	enum:internal::format_string_checker::__anon9
Name	ext/headers/args.hxx	/^            virtual std::string Name() const$/;"	f	class:argstest::NamedBase
NameAndTags	ext/headers/catch.hpp	/^struct NameAndTags {$/;"	s	namespace:Catch
NamedBase	ext/headers/args.hxx	/^            NamedBase(const std::string &name_, const std::string &help_) : Base(help_), name(name_), kickout(false) {}$/;"	f	class:argstest::NamedBase
NamedBase	ext/headers/args.hxx	/^    class NamedBase : public Base$/;"	c	namespace:argstest
No	ext/headers/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
NonCopyable	ext/headers/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
None	ext/headers/args.hxx	/^                static bool None(const Group &group)$/;"	f	struct:argstest::Group::Validators
None	ext/headers/args.hxx	/^        None,$/;"	m	class:argstest::Error
Normal	ext/headers/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
OBJECTS	Makefile	/^OBJECTS = $(addsuffix .o, $(basename $(SRCS)))$/;"	m
OC_MAKE_UNIQUE_NAME	ext/headers/catch.hpp	4437;"	d
OC_TEST_CASE	ext/headers/catch.hpp	4449;"	d
OC_TEST_CASE2	ext/headers/catch.hpp	4438;"	d
OPEN	src/bankstate.h	/^    enum class State { OPEN, CLOSED, SREF, PD, WAIT_WRITECOPY, SIZE };$/;"	m	class:dramsim3::BankState::State
OPEN_PAGE	src/controller.h	/^enum class RowBufPolicy { OPEN_PAGE, CLOSE_PAGE, SIZE };$/;"	m	class:dramsim3::RowBufPolicy
OR16	src/hmc.h	/^    OR16,$/;"	m	class:dramsim3::HMCReqType
OfType	ext/headers/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Ok	ext/headers/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
OpenRow	src/bankstate.h	/^    int OpenRow() const { return open_row_; }$/;"	f	class:dramsim3::BankState
OpenRow	src/channel_state.h	/^    int OpenRow(int rank, int bankgroup, int bank) const {$/;"	f	class:dramsim3::ChannelState
Opt	ext/headers/catch.hpp	/^        Opt( LambdaT const &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:Catch::Opt
Opt	ext/headers/catch.hpp	/^        Opt( T &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:Catch::Opt
Opt	ext/headers/catch.hpp	/^        explicit Opt( LambdaT const &ref ) : ParserRefImpl( std::make_shared<BoundFlagLambda<LambdaT>>( ref ) ) {}$/;"	f	class:Catch::Opt
Opt	ext/headers/catch.hpp	/^        explicit Opt( bool &ref ) : ParserRefImpl( std::make_shared<BoundFlagRef>( ref ) ) {}$/;"	f	class:Catch::Opt
Opt	ext/headers/catch.hpp	/^    class Opt : public ParserRefImpl<Opt> {$/;"	c	namespace:Catch
PD	src/bankstate.h	/^    enum class State { OPEN, CLOSED, SREF, PD, WAIT_WRITECOPY, SIZE };$/;"	m	class:dramsim3::BankState::State
PER_BANK	src/command_queue.h	/^enum class QueueStructure { PER_RANK, PER_BANK, SIZE };$/;"	m	class:dramsim3::QueueStructure
PER_RANK	src/command_queue.h	/^enum class QueueStructure { PER_RANK, PER_BANK, SIZE };$/;"	m	class:dramsim3::QueueStructure
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	398;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	401;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	383;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	386;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	388;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	391;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	394;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	397;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	400;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	403;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	388;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	398;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	410;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
PLUS_FLAG	ext/fmt/include/fmt/format.h	/^enum { SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8 };$/;"	e	enum:__anon6
POW10_EXPONENTS	ext/fmt/include/fmt/format-inl.h	/^const int16_t basic_data<T>::POW10_EXPONENTS[] = {$/;"	m	class:internal::basic_data
POW10_SIGNIFICANDS	ext/fmt/include/fmt/format-inl.h	/^const uint64_t basic_data<T>::POW10_SIGNIFICANDS[] = {$/;"	m	class:internal::basic_data
POWERS_OF_10_32	ext/fmt/include/fmt/format-inl.h	/^const uint32_t basic_data<T>::POWERS_OF_10_32[] = {$/;"	m	class:internal::basic_data
PRECHARGE	src/common.h	/^    PRECHARGE,$/;"	m	class:dramsim3::CommandType
PT_data	scripts/final_PowerTemperature_map.py	/^PT_data = PT_data[1:, :]$/;"	v
PT_data	scripts/final_PowerTemperature_map.py	/^PT_data = genfromtxt(PT_file, delimiter=',')$/;"	v
PT_file	scripts/final_PowerTemperature_map.py	/^PT_file = "..\/build\/" + args.mem_name + "-output-final_power_temperature.csv"$/;"	v
P_2ADD8	src/hmc.h	/^    P_2ADD8,  \/\/ 2 8Byte imm operands + 8 8Byte mem operands read then write$/;"	m	class:dramsim3::HMCReqType
P_ADD16	src/hmc.h	/^    P_ADD16,$/;"	m	class:dramsim3::HMCReqType
P_BWR	src/hmc.h	/^    P_BWR,  \/\/ bit write, 8B mask, 8B value, read update write$/;"	m	class:dramsim3::HMCReqType
P_INC8	src/hmc.h	/^    P_INC8, \/\/ read, return(the original), then posted write$/;"	m	class:dramsim3::HMCReqType
P_WR112	src/hmc.h	/^    P_WR112,$/;"	m	class:dramsim3::HMCReqType
P_WR128	src/hmc.h	/^    P_WR128,$/;"	m	class:dramsim3::HMCReqType
P_WR16	src/hmc.h	/^    P_WR16,$/;"	m	class:dramsim3::HMCReqType
P_WR256	src/hmc.h	/^    P_WR256,$/;"	m	class:dramsim3::HMCReqType
P_WR32	src/hmc.h	/^    P_WR32,$/;"	m	class:dramsim3::HMCReqType
P_WR48	src/hmc.h	/^    P_WR48,$/;"	m	class:dramsim3::HMCReqType
P_WR64	src/hmc.h	/^    P_WR64,$/;"	m	class:dramsim3::HMCReqType
P_WR80	src/hmc.h	/^    P_WR80,$/;"	m	class:dramsim3::HMCReqType
P_WR96	src/hmc.h	/^    P_WR96,$/;"	m	class:dramsim3::HMCReqType
Parse	ext/headers/args.hxx	/^        Parse,$/;"	m	class:argstest::Error
ParseArgs	ext/headers/args.hxx	/^            It ParseArgs(It begin, It end)$/;"	f	class:argstest::ArgumentParser
ParseCLI	ext/headers/args.hxx	/^            bool ParseCLI(const int argc, const char * const * argv)$/;"	f	class:argstest::ArgumentParser
ParseError	ext/headers/INIReader.h	/^inline int INIReader::ParseError() const$/;"	f	class:INIReader
ParseError	ext/headers/args.hxx	/^            ParseError(const std::string &problem) : Error(problem) {}$/;"	f	class:argstest::ParseError
ParseError	ext/headers/args.hxx	/^    class ParseError : public Error$/;"	c	namespace:argstest
ParseLine	src/thermal_replay.cc	/^void ThermalReplay::ParseLine(std::string line, uint64_t &clk, Command &cmd) {$/;"	f	class:ThermalReplay
Parser	ext/headers/catch.hpp	/^        auto operator+( T const &other ) const -> Parser;$/;"	m	class:Catch::ComposableParserImpl
Parser	ext/headers/catch.hpp	/^        auto operator|( T const &other ) const -> Parser;$/;"	m	class:Catch::ComposableParserImpl
Parser	ext/headers/catch.hpp	/^    struct Parser : ParserBase {$/;"	s	namespace:Catch
ParserRefImpl	ext/headers/catch.hpp	/^        ParserRefImpl( LambdaT const &ref, std::string const &hint )$/;"	f	class:Catch::ParserRefImpl
ParserRefImpl	ext/headers/catch.hpp	/^        ParserRefImpl( T &ref, std::string const &hint )$/;"	f	class:Catch::ParserRefImpl
ParserRefImpl	ext/headers/catch.hpp	/^        explicit ParserRefImpl( std::shared_ptr<BoundRef> const &ref ) : m_ref( ref ) {}$/;"	f	class:Catch::ParserRefImpl
ParserRefImpl	ext/headers/catch.hpp	/^    class ParserRefImpl : public ComposableParserImpl<DerivedT> {$/;"	c	namespace:Catch
PendingRefCommand	src/channel_state.h	/^    const Command& PendingRefCommand() const {return refresh_q_.front(); }$/;"	f	class:dramsim3::ChannelState
Positional	ext/headers/args.hxx	/^            Positional(Group &group_, const std::string &name_, const std::string &help_, const T &defaultValue_ = T()): PositionalBase(name_, help_), value(defaultValue_)$/;"	f	class:argstest::Positional
Positional	ext/headers/args.hxx	/^    class Positional : public PositionalBase$/;"	c	namespace:argstest
PositionalBase	ext/headers/args.hxx	/^            PositionalBase(const std::string &name_, const std::string &help_) : NamedBase(name_, help_), ready(true) {}$/;"	f	class:argstest::PositionalBase
PositionalBase	ext/headers/args.hxx	/^    class PositionalBase : public NamedBase$/;"	c	namespace:argstest
PositionalList	ext/headers/args.hxx	/^            PositionalList(Group &group_, const std::string &name_, const std::string &help_, const List<T> &defaultValues_ = List<T>()): PositionalBase(name_, help_), values(defaultValues_)$/;"	f	class:argstest::PositionalList
PositionalList	ext/headers/args.hxx	/^    class PositionalList : public PositionalBase$/;"	c	namespace:argstest
PrintCSVHeader_final	src/thermal.cc	/^void ThermalCalculator::PrintCSVHeader_final(std::ofstream &csvfile) {$/;"	f	class:dramsim3::ThermalCalculator
PrintCSV_bank	src/thermal.cc	/^void ThermalCalculator::PrintCSV_bank(std::ofstream &csvfile) {$/;"	f	class:dramsim3::ThermalCalculator
PrintCSV_final	src/thermal.cc	/^void ThermalCalculator::PrintCSV_final(std::ofstream &csvfile,$/;"	f	class:dramsim3::ThermalCalculator
PrintCSV_trans	src/thermal.cc	/^void ThermalCalculator::PrintCSV_trans(std::ofstream &csvfile,$/;"	f	class:dramsim3::ThermalCalculator
PrintEpochStats	src/controller.cc	/^void Controller::PrintEpochStats() {$/;"	f	class:dramsim3::Controller
PrintEpochStats	src/dram_system.cc	/^void BaseDRAMSystem::PrintEpochStats() {$/;"	f	class:dramsim3::BaseDRAMSystem
PrintEpochStats	src/simple_stats.cc	/^void SimpleStats::PrintEpochStats() {$/;"	f	class:dramsim3::SimpleStats
PrintFinalPT	src/thermal.cc	/^void ThermalCalculator::PrintFinalPT(uint64_t clk) {$/;"	f	class:dramsim3::ThermalCalculator
PrintFinalStats	src/controller.cc	/^void Controller::PrintFinalStats() {$/;"	f	class:dramsim3::Controller
PrintFinalStats	src/simple_stats.cc	/^void SimpleStats::PrintFinalStats() {$/;"	f	class:dramsim3::SimpleStats
PrintStatText	src/simple_stats.cc	/^void PrintStatText(std::ostream& where, std::string name, T value,$/;"	f	namespace:dramsim3
PrintStats	src/cpu.h	/^    void PrintStats() { memory_system_.PrintStats(); }$/;"	f	class:dramsim3::CPU
PrintStats	src/dram_system.cc	/^void BaseDRAMSystem::PrintStats() {$/;"	f	class:dramsim3::BaseDRAMSystem
PrintStats	src/memory_system.cc	/^void MemorySystem::PrintStats() const { dram_system_->PrintStats(); }$/;"	f	class:dramsim3::MemorySystem
PrintTransPT	src/thermal.cc	/^void ThermalCalculator::PrintTransPT(uint64_t clk) {$/;"	f	class:dramsim3::ThermalCalculator
ProcessCMD	src/thermal_replay.cc	/^void ThermalReplay::ProcessCMD(Command &cmd, uint64_t clk) {$/;"	f	class:ThermalReplay
Prog	ext/headers/args.hxx	/^            const std::string &Prog() const$/;"	f	class:argstest::ArgumentParser
Prog	ext/headers/args.hxx	/^            void Prog(const std::string &prog_)$/;"	f	class:argstest::ArgumentParser
ProglinePostfix	ext/headers/args.hxx	/^            const std::string &ProglinePostfix() const$/;"	f	class:argstest::ArgumentParser
ProglinePostfix	ext/headers/args.hxx	/^            void ProglinePostfix(const std::string &proglinePostfix_)$/;"	f	class:argstest::ArgumentParser
QueueEmpty	src/command_queue.cc	/^bool CommandQueue::QueueEmpty() const {$/;"	f	class:dramsim3::CommandQueue
QueueStructure	src/command_queue.h	/^enum class QueueStructure { PER_RANK, PER_BANK, SIZE };$/;"	c	namespace:dramsim3
QueueUsage	src/command_queue.cc	/^int CommandQueue::QueueUsage() const {$/;"	f	class:dramsim3::CommandQueue
QueueUsage	src/controller.cc	/^int Controller::QueueUsage() const { return cmd_queue_.QueueUsage(); }$/;"	f	class:dramsim3::Controller
RANK_LEVEL_SIMULTANEOUS	src/configuration.h	/^    RANK_LEVEL_SIMULTANEOUS,  \/\/ impractical due to high power requirement$/;"	m	class:dramsim3::RefreshPolicy
RANK_LEVEL_STAGGERED	src/configuration.h	/^    RANK_LEVEL_STAGGERED,$/;"	m	class:dramsim3::RefreshPolicy
RD0	src/hmc.h	/^    RD0,$/;"	m	class:dramsim3::HMCReqType
RD112	src/hmc.h	/^    RD112,$/;"	m	class:dramsim3::HMCReqType
RD128	src/hmc.h	/^    RD128,$/;"	m	class:dramsim3::HMCReqType
RD16	src/hmc.h	/^    RD16,$/;"	m	class:dramsim3::HMCReqType
RD256	src/hmc.h	/^    RD256,$/;"	m	class:dramsim3::HMCReqType
RD32	src/hmc.h	/^    RD32,$/;"	m	class:dramsim3::HMCReqType
RD48	src/hmc.h	/^    RD48,$/;"	m	class:dramsim3::HMCReqType
RD64	src/hmc.h	/^    RD64,$/;"	m	class:dramsim3::HMCReqType
RD80	src/hmc.h	/^    RD80,$/;"	m	class:dramsim3::HMCReqType
RD96	src/hmc.h	/^    RD96,$/;"	m	class:dramsim3::HMCReqType
RD_RS	src/hmc.h	/^enum class HMCRespType { NONE, RD_RS, WR_RS, ERR, SIZE };$/;"	m	class:dramsim3::HMCRespType
READ	src/common.h	/^    READ,$/;"	m	class:dramsim3::CommandType
READCOPY	src/common.h	/^    READCOPY,$/;"	m	class:dramsim3::CommandType
READCOPY_PRECHARGE	src/common.h	/^    READCOPY_PRECHARGE,$/;"	m	class:dramsim3::CommandType
READ_PRECHARGE	src/common.h	/^    READ_PRECHARGE,$/;"	m	class:dramsim3::CommandType
REFRESH	src/common.h	/^    REFRESH,$/;"	m	class:dramsim3::CommandType
REFRESH_BANK	src/common.h	/^    REFRESH_BANK,$/;"	m	class:dramsim3::CommandType
RESET_COLOR	ext/fmt/include/fmt/format-inl.h	/^template <typename T> const char basic_data<T>::RESET_COLOR[] = "\\x1b[0m";$/;"	m	class:internal::basic_data
RL	src/configuration.h	/^    int RL;$/;"	m	class:dramsim3::Config
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
R_TSV	src/thermal_config.h	/^const double R_TSV = 5e-6;  \/\/ [m]$/;"	v
RandomCPU	src/cpu.h	/^class RandomCPU : public CPU {$/;"	c	namespace:dramsim3
Rank	src/common.h	/^    int Rank() const { return addr.rank; }$/;"	f	struct:dramsim3::Command
RankNeedRefresh	src/channel_state.cc	/^void ChannelState::RankNeedRefresh(int rank, bool need) {$/;"	f	class:dramsim3::ChannelState
ReadCallBack	src/cpu.h	/^    void ReadCallBack(AddressPair addr) { return; }$/;"	f	class:dramsim3::CPU
Ready	ext/headers/args.hxx	/^            bool Ready()$/;"	f	class:argstest::PositionalBase
Refresh	src/refresh.cc	/^Refresh::Refresh(const Config &config, ChannelState &channel_state)$/;"	f	class:dramsim3::Refresh
Refresh	src/refresh.h	/^class Refresh {$/;"	c	namespace:dramsim3
RefreshPolicy	src/configuration.h	/^enum class RefreshPolicy {$/;"	c	namespace:dramsim3
RegisterCallbacks	src/dram_system.cc	/^void BaseDRAMSystem::RegisterCallbacks($/;"	f	class:dramsim3::BaseDRAMSystem
RegisterCallbacks	src/memory_system.cc	/^void MemorySystem::RegisterCallbacks($/;"	f	class:dramsim3::MemorySystem
RegistrarForTagAliases	ext/headers/catch.hpp	/^    struct RegistrarForTagAliases {$/;"	s	namespace:Catch
Reset	src/simple_stats.cc	/^void SimpleStats::Reset() {$/;"	f	class:dramsim3::SimpleStats
ResetStats	src/controller.h	/^    void ResetStats() { simple_stats_.Reset(); }$/;"	f	class:dramsim3::Controller
ResetStats	src/dram_system.cc	/^void BaseDRAMSystem::ResetStats() {$/;"	f	class:dramsim3::BaseDRAMSystem
ResetStats	src/memory_system.cc	/^void MemorySystem::ResetStats() { dram_system_->ResetStats(); }$/;"	f	class:dramsim3::MemorySystem
ResultDisposition	ext/headers/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultWas	ext/headers/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ReturnDoneTrans	src/controller.cc	/^std::pair<AddressPair, int> Controller::ReturnDoneTrans(uint64_t clk) {$/;"	f	class:dramsim3::Controller
ReusableStringStream	ext/headers/catch.hpp	/^    class ReusableStringStream {$/;"	c	namespace:Catch
Row	src/common.h	/^    int Row() const { return addr.row; }$/;"	f	struct:dramsim3::Command
RowBufPolicy	src/controller.h	/^enum class RowBufPolicy { OPEN_PAGE, CLOSE_PAGE, SIZE };$/;"	c	namespace:dramsim3
RowHitCount	src/bankstate.h	/^    int RowHitCount() const { return row_hit_count_; }$/;"	f	class:dramsim3::BankState
RowHitCount	src/channel_state.h	/^    int RowHitCount(int rank, int bankgroup, int bank) const {$/;"	f	class:dramsim3::ChannelState
Run	src/thermal_replay.cc	/^void ThermalReplay::Run() {$/;"	f	class:ThermalReplay
SEP_SIZE	ext/fmt/include/fmt/format.h	/^    enum { SEP_SIZE = 1 };$/;"	e	enum:basic_writer::int_writer::__anon10
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGN_FLAG	ext/fmt/include/fmt/format.h	/^enum { SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8 };$/;"	e	enum:__anon6
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	189;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SRCS	Makefile	/^SRCS = src\/bankstate.cc src\/channel_state.cc src\/command_queue.cc src\/common.cc \\$/;"	m
SREF	src/bankstate.h	/^    enum class State { OPEN, CLOSED, SREF, PD, WAIT_WRITECOPY, SIZE };$/;"	m	class:dramsim3::BankState::State
SREF_ENTER	src/common.h	/^    SREF_ENTER,$/;"	m	class:dramsim3::CommandType
SREF_EXIT	src/common.h	/^    SREF_EXIT,$/;"	m	class:dramsim3::CommandType
STRINGIFY	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	309;"	d	file:
STRINGIFY	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
STRINGIFY	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	333;"	d	file:
STRINGIFY	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	293;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SWAP16	src/hmc.h	/^    SWAP16,  \/\/ swap imm operand and mem operand, read then write$/;"	m	class:dramsim3::HMCReqType
ScheduleTransaction	src/controller.cc	/^void Controller::ScheduleTransaction() {$/;"	f	class:dramsim3::Controller
Sections	ext/headers/INIReader.h	/^inline const std::set<string>& INIReader::Sections() const$/;"	f	class:INIReader
SetAddressMapping	src/configuration.cc	/^void Config::SetAddressMapping() {$/;"	f	class:dramsim3::Config
SetArgumentSeparations	ext/headers/args.hxx	/^            void SetArgumentSeparations($/;"	f	class:argstest::ArgumentParser
SetClockRatio	src/hmc.cc	/^void HMCMemorySystem::SetClockRatio() {$/;"	f	class:dramsim3::HMCMemorySystem
SetLogicPower	src/thermal.cc	/^void ThermalCalculator::SetLogicPower(double logic_power) {$/;"	f	class:dramsim3::ThermalCalculator
SetPhyAddressMapping	src/thermal.cc	/^void ThermalCalculator::SetPhyAddressMapping() {$/;"	f	class:dramsim3::ThermalCalculator
ShortPrefix	ext/headers/args.hxx	/^            const std::string &ShortPrefix() const$/;"	f	class:argstest::ArgumentParser
ShortPrefix	ext/headers/args.hxx	/^            void ShortPrefix(const std::string &shortprefix_)$/;"	f	class:argstest::ArgumentParser
SimpleStats	src/simple_stats.cc	/^SimpleStats::SimpleStats(const Config& config, int channel_id)$/;"	f	class:dramsim3::SimpleStats
SimpleStats	src/simple_stats.h	/^class SimpleStats {$/;"	c	namespace:dramsim3
SourceLineInfo	ext/headers/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
StartWaitWriteCopy	src/bankstate.cc	/^void BankState::StartWaitWriteCopy(const Command& cmd) {$/;"	f	class:dramsim3::BankState
State	src/bankstate.h	/^    enum class State { OPEN, CLOSED, SREF, PD, WAIT_WRITECOPY, SIZE };$/;"	c	class:dramsim3::BankState
StreamCPU	src/cpu.h	/^class StreamCPU : public CPU {$/;"	c	namespace:dramsim3
StreamEndStop	ext/headers/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<NSObject*> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<NSString*> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<T^> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<bool> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<char *> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<char const *> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<char> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<char[SZ]> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<double> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<float> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<int> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<long long> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<long> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<signed char> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<signed char[SZ]> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<std::nullptr_t> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<std::optional<T> > {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<std::pair<T1, T2> > {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<std::string> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<std::string_view> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<std::wstring> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<std::wstring_view> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<unsigned char> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<unsigned char[SZ]> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<unsigned int> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<unsigned long long> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<unsigned long> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<wchar_t *> {$/;"	s	namespace:Catch
StringMaker	ext/headers/catch.hpp	/^    struct StringMaker<wchar_t const *> {$/;"	s	namespace:Catch
StringRef	ext/headers/catch.hpp	/^        :   StringRef( s_empty, 0 )$/;"	f	class:Catch::StringRef
StringRef	ext/headers/catch.hpp	/^    class StringRef {$/;"	c	namespace:Catch
StringSplit	src/common.cc	/^std::vector<std::string> StringSplit(const std::string& s, char delim) {$/;"	f	namespace:dramsim3
StringSplit	src/common.cc	/^void StringSplit(const std::string& s, char delim, Out result) {$/;"	f	namespace:dramsim3
SuppressFail	ext/headers/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
T0	src/thermal_config.h	/^const double T0 = 273.15;  \/\/ [C]$/;"	v
THERMALCONFIG_H	src/thermal_config.h	2;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	ext/headers/catch.hpp	12;"	d
T_final	src/thermal.h	/^    double **T_trans, **T_final;$/;"	m	class:dramsim3::ThermalCalculator
T_size	src/thermal.h	/^    int T_size;$/;"	m	class:dramsim3::ThermalCalculator
T_trans	src/thermal.h	/^    double **T_trans, **T_final;$/;"	m	class:dramsim3::ThermalCalculator
Tamb	src/thermal.h	/^    double Tamb;  \/\/ The ambient temperature in Kelvin$/;"	m	class:dramsim3::ThermalCalculator
Terminator	ext/headers/args.hxx	/^            const std::string &Terminator() const$/;"	f	class:argstest::ArgumentParser
Terminator	ext/headers/args.hxx	/^            void Terminator(const std::string &terminator_)$/;"	f	class:argstest::ArgumentParser
TestInvokerAsMethod	ext/headers/catch.hpp	/^class TestInvokerAsMethod : public ITestInvoker {$/;"	c	namespace:Catch
ThermalCalculator	src/thermal.cc	/^ThermalCalculator::ThermalCalculator(const Config &config)$/;"	f	class:dramsim3::ThermalCalculator
ThermalCalculator	src/thermal.h	/^class ThermalCalculator {$/;"	c	namespace:dramsim3
ThermalReplay	src/thermal_replay.cc	/^ThermalReplay::ThermalReplay(std::string trace_name, std::string config_file,$/;"	f	class:ThermalReplay
ThermalReplay	src/thermal_replay.h	/^class ThermalReplay {$/;"	c	namespace:dramsim3
ThrewException	ext/headers/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
Timing	src/timing.cc	/^Timing::Timing(const Config& config)$/;"	f	class:dramsim3::Timing
Timing	src/timing.h	/^class Timing {$/;"	c	namespace:dramsim3
TraceBasedCPU	src/cpu.cc	/^TraceBasedCPU::TraceBasedCPU(const std::string& config_file,$/;"	f	class:dramsim3::TraceBasedCPU
TraceBasedCPU	src/cpu.h	/^class TraceBasedCPU : public CPU {$/;"	c	namespace:dramsim3
TransToCommand	src/controller.cc	/^Command Controller::TransToCommand(const Transaction &trans) {$/;"	f	class:dramsim3::Controller
Transaction	src/common.h	/^    Transaction() {}$/;"	f	struct:dramsim3::Transaction
Transaction	src/common.h	/^    Transaction(AddressPair addr, bool is_write)$/;"	f	struct:dramsim3::Transaction
Transaction	src/common.h	/^    Transaction(const Transaction& tran)$/;"	f	struct:dramsim3::Transaction
Transaction	src/common.h	/^struct Transaction {$/;"	s	namespace:dramsim3
TypeList	ext/headers/catch.hpp	/^struct TypeList {};$/;"	s	namespace:Catch
UTF8_ACCEPT	ext/headers/json.hpp	/^    static constexpr uint8_t UTF8_ACCEPT = 0;$/;"	m	class:nlohmann::detail::serializer
UTF8_REJECT	ext/headers/json.hpp	/^    static constexpr uint8_t UTF8_REJECT = 1;$/;"	m	class:nlohmann::detail::serializer
Unknown	ext/headers/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
UpdateActivationTimes	src/channel_state.cc	/^void ChannelState::UpdateActivationTimes(int rank, uint64_t curr_time) {$/;"	f	class:dramsim3::ChannelState
UpdateBackgroundEnergy	src/thermal.cc	/^void ThermalCalculator::UpdateBackgroundEnergy(const int channel,$/;"	f	class:dramsim3::ThermalCalculator
UpdateCMDPower	src/thermal.cc	/^void ThermalCalculator::UpdateCMDPower(const int channel, const Command &cmd,$/;"	f	class:dramsim3::ThermalCalculator
UpdateCommandStats	src/controller.cc	/^void Controller::UpdateCommandStats(const Command &cmd) {$/;"	f	class:dramsim3::Controller
UpdateCounters	src/simple_stats.cc	/^void SimpleStats::UpdateCounters() {$/;"	f	class:dramsim3::SimpleStats
UpdateEpoch	src/thermal.cc	/^void ThermalCalculator::UpdateEpoch(uint64_t clk) {$/;"	f	class:dramsim3::ThermalCalculator
UpdateEpochStats	src/simple_stats.cc	/^void SimpleStats::UpdateEpochStats() {$/;"	f	class:dramsim3::SimpleStats
UpdateFinalStats	src/simple_stats.cc	/^void SimpleStats::UpdateFinalStats() {$/;"	f	class:dramsim3::SimpleStats
UpdateHistoBins	src/simple_stats.cc	/^void SimpleStats::UpdateHistoBins() {$/;"	f	class:dramsim3::SimpleStats
UpdateOtherBankgroupsSameRankTiming	src/channel_state.cc	/^void ChannelState::UpdateOtherBankgroupsSameRankTiming($/;"	f	class:dramsim3::ChannelState
UpdateOtherBanksSameBankgroupTiming	src/channel_state.cc	/^void ChannelState::UpdateOtherBanksSameBankgroupTiming($/;"	f	class:dramsim3::ChannelState
UpdateOtherRanksTiming	src/channel_state.cc	/^void ChannelState::UpdateOtherRanksTiming($/;"	f	class:dramsim3::ChannelState
UpdatePowerMaps	src/thermal.cc	/^void ThermalCalculator::UpdatePowerMaps(double add_energy, bool trans,$/;"	f	class:dramsim3::ThermalCalculator
UpdatePrints	src/simple_stats.cc	/^void SimpleStats::UpdatePrints(bool epoch) {$/;"	f	class:dramsim3::SimpleStats
UpdateSameBankTiming	src/channel_state.cc	/^void ChannelState::UpdateSameBankTiming($/;"	f	class:dramsim3::ChannelState
UpdateSameRankTiming	src/channel_state.cc	/^void ChannelState::UpdateSameRankTiming($/;"	f	class:dramsim3::ChannelState
UpdateState	src/bankstate.cc	/^void BankState::UpdateState(const Command& cmd) {$/;"	f	class:dramsim3::BankState
UpdateState	src/channel_state.cc	/^void ChannelState::UpdateState(const Command& cmd) {$/;"	f	class:dramsim3::ChannelState
UpdateTiming	src/bankstate.cc	/^void BankState::UpdateTiming(CommandType cmd_type, uint64_t time) {$/;"	f	class:dramsim3::BankState
UpdateTiming	src/channel_state.cc	/^void ChannelState::UpdateTiming(const Command& cmd, uint64_t clk) {$/;"	f	class:dramsim3::ChannelState
UpdateTimingAndStates	src/channel_state.cc	/^void ChannelState::UpdateTimingAndStates(const Command& cmd, uint64_t clk) {$/;"	f	class:dramsim3::ChannelState
Usage	ext/headers/args.hxx	/^        Usage,$/;"	m	class:argstest::Error
UsageError	ext/headers/args.hxx	/^            UsageError(const std::string &problem) : Error(problem) {}$/;"	f	class:argstest::UsageError
UsageError	ext/headers/args.hxx	/^    class UsageError : public Error$/;"	c	namespace:argstest
Validation	ext/headers/args.hxx	/^        Validation,$/;"	m	class:argstest::Error
ValidationError	ext/headers/args.hxx	/^            ValidationError(const std::string &problem) : Error(problem) {}$/;"	f	class:argstest::ValidationError
ValidationError	ext/headers/args.hxx	/^    class ValidationError : public Error$/;"	c	namespace:argstest
Validators	ext/headers/args.hxx	/^            struct Validators$/;"	s	class:argstest::Group
ValueFlag	ext/headers/args.hxx	/^            ValueFlag(Group &group_, const std::string &name_, const std::string &help_, Matcher &&matcher_, const T &defaultValue_ = T(), const bool extraError_ = false): ValueFlagBase(name_, help_, std::move(matcher_), extraError_), value(defaultValue_)$/;"	f	class:argstest::ValueFlag
ValueFlag	ext/headers/args.hxx	/^    class ValueFlag : public ValueFlagBase$/;"	c	namespace:argstest
ValueFlagBase	ext/headers/args.hxx	/^            ValueFlagBase(const std::string &name_, const std::string &help_, Matcher &&matcher_, const bool extraError_ = false) : FlagBase(name_, help_, std::move(matcher_), extraError_) {}$/;"	f	class:argstest::ValueFlagBase
ValueFlagBase	ext/headers/args.hxx	/^    class ValueFlagBase : public FlagBase$/;"	c	namespace:argstest
ValueFlagList	ext/headers/args.hxx	/^            ValueFlagList(Group &group_, const std::string &name_, const std::string &help_, Matcher &&matcher_, const List<T> &defaultValues_ = List<T>()): ValueFlagBase(name_, help_, std::move(matcher_)), values(defaultValues_)$/;"	f	class:argstest::ValueFlagList
ValueFlagList	ext/headers/args.hxx	/^    class ValueFlagList : public ValueFlagBase$/;"	c	namespace:argstest
ValueHandler	ext/headers/INIReader.h	/^inline int INIReader::ValueHandler(void* user, const char* section, const char* name,$/;"	f	class:INIReader
ValueReader	ext/headers/args.hxx	/^    struct ValueReader$/;"	s	namespace:argstest
ValueReader	ext/headers/args.hxx	/^    struct ValueReader<std::string>$/;"	s	namespace:argstest
VaultCallback	src/hmc.cc	/^void HMCMemorySystem::VaultCallback(uint64_t req_id) {$/;"	f	class:dramsim3::HMCMemorySystem
WAIT_WRITECOPY	src/bankstate.h	/^    enum class State { OPEN, CLOSED, SREF, PD, WAIT_WRITECOPY, SIZE };$/;"	m	class:dramsim3::BankState::State
WIN32_LEAN_AND_MEAN	ext/fmt/include/fmt/format-inl.h	28;"	d
WIN32_LEAN_AND_MEAN	ext/headers/catch.hpp	6056;"	d
WIN32_LEAN_AND_MEAN	ext/headers/catch.hpp	6069;"	d
WL	src/configuration.h	/^    int WL;$/;"	m	class:dramsim3::Config
WR0	src/hmc.h	/^    WR0,$/;"	m	class:dramsim3::HMCReqType
WR112	src/hmc.h	/^    WR112,$/;"	m	class:dramsim3::HMCReqType
WR128	src/hmc.h	/^    WR128,$/;"	m	class:dramsim3::HMCReqType
WR16	src/hmc.h	/^    WR16,$/;"	m	class:dramsim3::HMCReqType
WR256	src/hmc.h	/^    WR256,$/;"	m	class:dramsim3::HMCReqType
WR32	src/hmc.h	/^    WR32,$/;"	m	class:dramsim3::HMCReqType
WR48	src/hmc.h	/^    WR48,$/;"	m	class:dramsim3::HMCReqType
WR64	src/hmc.h	/^    WR64,$/;"	m	class:dramsim3::HMCReqType
WR80	src/hmc.h	/^    WR80,$/;"	m	class:dramsim3::HMCReqType
WR96	src/hmc.h	/^    WR96,$/;"	m	class:dramsim3::HMCReqType
WRESET_COLOR	ext/fmt/include/fmt/format-inl.h	/^template <typename T> const wchar_t basic_data<T>::WRESET_COLOR[] = L"\\x1b[0m";$/;"	m	class:internal::basic_data
WRITE	src/common.h	/^    WRITE,$/;"	m	class:dramsim3::CommandType
WRITECOPY	src/common.h	/^    WRITECOPY,$/;"	m	class:dramsim3::CommandType
WRITECOPY_PRECHARGE	src/common.h	/^    WRITECOPY_PRECHARGE,$/;"	m	class:dramsim3::CommandType
WRITE_PRECHARGE	src/common.h	/^    WRITE_PRECHARGE,$/;"	m	class:dramsim3::CommandType
WR_RS	src/hmc.h	/^enum class HMCRespType { NONE, RD_RS, WR_RS, ERR, SIZE };$/;"	m	class:dramsim3::HMCRespType
Warning	ext/headers/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
WillAcceptCommand	src/command_queue.cc	/^bool CommandQueue::WillAcceptCommand(int rank, int bankgroup, int bank, bool additional) const {$/;"	f	class:dramsim3::CommandQueue
WillAcceptTransaction	src/controller.cc	/^bool Controller::WillAcceptTransaction(AddressPair hex_addr, bool is_write) const {$/;"	f	class:dramsim3::Controller
WillAcceptTransaction	src/dram_system.cc	/^bool JedecDRAMSystem::WillAcceptTransaction(AddressPair hex_addr,$/;"	f	class:dramsim3::JedecDRAMSystem
WillAcceptTransaction	src/hmc.cc	/^bool HMCMemorySystem::WillAcceptTransaction(AddressPair hex_addr,$/;"	f	class:dramsim3::HMCMemorySystem
WillAcceptTransaction	src/memory_system.cc	/^bool MemorySystem::WillAcceptTransaction(AddressPair hex_addr,$/;"	f	class:dramsim3::MemorySystem
Wrap	ext/headers/args.hxx	/^    std::vector<std::string> Wrap(const std::string &in, const std::string::size_type width, std::string::size_type firstlinewidth = 0)$/;"	f	namespace:argstest
WriteCallBack	src/cpu.h	/^    void WriteCallBack(AddressPair addr) { return; }$/;"	f	class:dramsim3::CPU
X	scripts/final_PowerTemperature_map.py	/^X = int(amax(PT_data[:, 1]))$/;"	v
XOR16	src/hmc.h	/^    XOR16,  $/;"	m	class:dramsim3::HMCReqType
Xor	ext/headers/args.hxx	/^                static bool Xor(const Group &group)$/;"	f	struct:argstest::Group::Validators
Y	scripts/final_PowerTemperature_map.py	/^Y = int(amax(PT_data[:, 2]))$/;"	v
Yes	ext/headers/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Z	scripts/final_PowerTemperature_map.py	/^Z = int(amax(PT_data[:, 3]))$/;"	v
ZERO_OR_POWERS_OF_10_32	ext/fmt/include/fmt/format-inl.h	/^const uint32_t basic_data<T>::ZERO_OR_POWERS_OF_10_32[] = {$/;"	m	class:internal::basic_data
ZERO_OR_POWERS_OF_10_64	ext/fmt/include/fmt/format-inl.h	/^const uint64_t basic_data<T>::ZERO_OR_POWERS_OF_10_64[] = {$/;"	m	class:internal::basic_data
_BSD_SOURCE	ext/headers/catch.hpp	203;"	d
_CRT_SECURE_NO_WARNINGS	ext/headers/INIReader.h	109;"	d
_Unchecked_type	ext/fmt/include/fmt/format.h	/^  typedef counting_iterator _Unchecked_type;  \/\/ Mark iterator as checked.$/;"	t	class:internal::counting_iterator
_Unchecked_type	ext/fmt/include/fmt/format.h	/^  typedef truncating_iterator_base _Unchecked_type; \/\/ Mark iterator as checked.$/;"	t	class:internal::truncating_iterator_base
__BANKSTATE_H	src/bankstate.h	2;"	d
__CHANNEL_STATE_H	src/channel_state.h	2;"	d
__COMMAND_QUEUE_H	src/command_queue.h	2;"	d
__COMMON_H	src/common.h	2;"	d
__CONFIG_H	src/configuration.h	2;"	d
__CONTROLLER_H	src/controller.h	2;"	d
__CPU_H	src/cpu.h	2;"	d
__DRAM_SYSTEM_H	src/dram_system.h	2;"	d
__HMC_H	src/hmc.h	2;"	d
__INIREADER_H__	ext/headers/INIReader.h	304;"	d
__INIREADER__	ext/headers/INIReader.h	360;"	d
__INI_H__	ext/headers/INIReader.h	17;"	d
__MEMORY_SYSTEM__H	src/dramsim3.h	2;"	d
__MEMORY_SYSTEM__H	src/memory_system.h	2;"	d
__REFRESH_H	src/refresh.h	2;"	d
__SIMPLE_STATS_	src/simple_stats.h	2;"	d
__THERMAL_H	src/thermal.h	2;"	d
__THERMAL_REPLAY_H	src/thermal_replay.h	2;"	d
__TIMING_H	src/timing.h	2;"	d
__init__	scripts/trace_gen.py	/^    def __init__(self, stream_type, interarrival, ratio, gb):$/;"	m	class:Generator
__init__	scripts/validation.py	/^    def __init__(self, config_file_name, trace_file_name, script_name="", verilog_output=""):$/;"	m	class:DRAMValidation
__init__	scripts/validation.py	/^    def __init__(self, line):$/;"	m	class:Command
_a	ext/fmt/include/fmt/format.h	/^operator"" _a(const char *s, std::size_t) { return {s}; }$/;"	f	namespace:literals
_a	ext/fmt/include/fmt/format.h	/^operator"" _a(const wchar_t *s, std::size_t) { return {s}; }$/;"	f	namespace:literals
_error	ext/headers/INIReader.h	/^    int _error;$/;"	m	class:INIReader
_finite	ext/fmt/include/fmt/format.h	/^inline dummy_int _finite(...) { return dummy_int(); }$/;"	f	namespace:internal
_format	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR internal::udl_formatter<Char, CHARS...> operator""_format() {$/;"	f	namespace:literals
_get_op	scripts/trace_gen.py	/^    def _get_op(self):$/;"	m	class:Generator
_isnan	ext/fmt/include/fmt/format.h	/^inline dummy_int _isnan(...) { return dummy_int(); }$/;"	f	namespace:internal
_json	ext/headers/json.hpp	/^inline nlohmann::json operator "" _json(const char* s, std::size_t n)$/;"	f
_json_pointer	ext/headers/json.hpp	/^inline nlohmann::json::json_pointer operator "" _json_pointer(const char* s, std::size_t n)$/;"	f
_mix_gen	scripts/trace_gen.py	/^    def _mix_gen(self):$/;"	m	class:Generator
_rand_gen	scripts/trace_gen.py	/^    def _rand_gen(self):$/;"	m	class:Generator
_sections	ext/headers/INIReader.h	/^    std::set<std::string> _sections;$/;"	m	class:INIReader
_stream_gen	scripts/trace_gen.py	/^    def _stream_gen(self):$/;"	m	class:Generator
_u	ext/fmt/include/fmt/format.h	/^inline u8string_view operator"" _u(const char *s, std::size_t n) {$/;"	f	namespace:literals
_values	ext/headers/INIReader.h	/^    std::map<std::string, std::string> _values;$/;"	m	class:INIReader
abs_value	ext/fmt/include/fmt/format.h	/^      unsigned_type abs_value;$/;"	m	struct:basic_writer::int_writer::bin_writer
abs_value	ext/fmt/include/fmt/format.h	/^      unsigned_type abs_value;$/;"	m	struct:basic_writer::int_writer::dec_writer
abs_value	ext/fmt/include/fmt/format.h	/^      unsigned_type abs_value;$/;"	m	struct:basic_writer::int_writer::num_writer
abs_value	ext/fmt/include/fmt/format.h	/^    unsigned_type abs_value;$/;"	m	struct:basic_writer::int_writer
accept	ext/headers/json.hpp	/^    bool accept(const bool strict = true)$/;"	f	class:nlohmann::detail::parser
accept	ext/headers/json.hpp	/^    static bool accept(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::basic_json
accept	ext/headers/json.hpp	/^    static bool accept(detail::input_adapter&& i)$/;"	f	class:nlohmann::basic_json
accu_Pmap	src/thermal.h	/^    std::vector<std::vector<double>> accu_Pmap;  \/\/ accumulative power map$/;"	m	class:dramsim3::ThermalCalculator
act_energy_inc	src/configuration.h	/^    double act_energy_inc;$/;"	m	class:dramsim3::Config
act_stb_energy_inc	src/configuration.h	/^    double act_stb_energy_inc;$/;"	m	class:dramsim3::Config
add	ext/headers/json.hpp	/^    void add(int c)$/;"	f	class:nlohmann::detail::lexer
add_thousands_sep	ext/fmt/include/fmt/format.h	/^  explicit add_thousands_sep(basic_string_view<Char> sep)$/;"	f	class:internal::add_thousands_sep
add_thousands_sep	ext/fmt/include/fmt/format.h	/^class add_thousands_sep {$/;"	c	namespace:internal
added_cycle	src/common.h	/^    uint64_t added_cycle;$/;"	m	struct:dramsim3::Transaction
addr	src/common.h	/^    Address addr;$/;"	m	struct:dramsim3::Command
addr	src/common.h	/^    AddressPair addr;$/;"	m	struct:dramsim3::Transaction
addr_a_	src/cpu.h	/^    AddressPair addr_a_, addr_b_, addr_c_, offset_ = 0;$/;"	m	class:dramsim3::StreamCPU
addr_b_	src/cpu.h	/^    AddressPair addr_a_, addr_b_, addr_c_, offset_ = 0;$/;"	m	class:dramsim3::StreamCPU
addr_c_	src/cpu.h	/^    AddressPair addr_a_, addr_b_, addr_c_, offset_ = 0;$/;"	m	class:dramsim3::StreamCPU
address_mapping	src/configuration.h	/^    std::string address_mapping;$/;"	m	class:dramsim3::Config
address_trace_	src/dram_system.h	/^    std::ofstream address_trace_;$/;"	m	class:dramsim3::BaseDRAMSystem
adl_serializer	ext/headers/json.hpp	/^struct adl_serializer$/;"	s	namespace:nlohmann
advance_to	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR void advance_to(iterator it) {$/;"	f	class:basic_parse_context
advance_to	ext/fmt/include/fmt/core.h	/^  void advance_to(iterator it) { out_ = it; }$/;"	f	class:internal::context_base
aggressive_precharging_enabled	src/configuration.h	/^    bool aggressive_precharging_enabled;$/;"	m	class:dramsim3::Config
align	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR alignment align() const { return align_; }$/;"	f	struct:align_spec
align_	ext/fmt/include/fmt/format.h	/^  alignment align_;$/;"	m	struct:align_spec
align_spec	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR align_spec() : width_(0), fill_(' '), align_(ALIGN_DEFAULT) {}$/;"	f	struct:align_spec
align_spec	ext/fmt/include/fmt/format.h	/^struct align_spec {$/;"	s
alignment	ext/fmt/include/fmt/format.h	/^enum alignment {$/;"	g
allocate	ext/fmt/include/fmt/format.h	/^typename Allocator::value_type *allocate(Allocator& alloc, std::size_t n) {$/;"	f	namespace:internal
allowJoinedLongValue	ext/headers/args.hxx	/^            bool allowJoinedLongValue;$/;"	m	class:argstest::ArgumentParser
allowJoinedShortValue	ext/headers/args.hxx	/^            bool allowJoinedShortValue;$/;"	m	class:argstest::ArgumentParser
allowSeparateLongValue	ext/headers/args.hxx	/^            bool allowSeparateLongValue;$/;"	m	class:argstest::ArgumentParser
allowSeparateShortValue	ext/headers/args.hxx	/^            bool allowSeparateShortValue;$/;"	m	class:argstest::ArgumentParser
allow_exceptions	ext/headers/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
allow_exceptions	ext/headers/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::json_sax_dom_parser
allow_exceptions	ext/headers/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::parser
always_false	ext/headers/catch.hpp	/^struct always_false : std::false_type {};$/;"	s	namespace:Catch
amb_temp	src/configuration.h	/^    double amb_temp;         \/\/ the ambient temperature in [C]$/;"	m	class:dramsim3::Config
anchor	ext/headers/json.hpp	/^    IteratorType anchor;$/;"	m	class:nlohmann::detail::iteration_proxy_value
anchor	ext/headers/json.hpp	/^    explicit iteration_proxy_value(IteratorType it) noexcept : anchor(it) {}$/;"	f	class:nlohmann::detail::iteration_proxy_value
append	ext/fmt/include/fmt/format-inl.h	/^  void append(char c) { data[size++] = c; }$/;"	f	struct:internal::prettify_handler
append	ext/fmt/include/fmt/format-inl.h	/^  void append(char) { ++size; }$/;"	f	struct:internal::char_counter
append	ext/fmt/include/fmt/format-inl.h	/^  void append(size_t n, char c) {$/;"	f	struct:internal::prettify_handler
append	ext/fmt/include/fmt/format-inl.h	/^  void append(size_t n, char) { size += n; }$/;"	f	struct:internal::char_counter
append	ext/fmt/include/fmt/format.h	/^void basic_buffer<T>::append(const U *begin, const U *end) {$/;"	f	class:internal::basic_buffer
append	ext/headers/catch.hpp	/^struct append< L1<E1...>, L2<E2...> > {$/;"	s	namespace:Catch
append	ext/headers/catch.hpp	/^struct append< L1<E1...>, L2<E2...>, Rest...> {$/;"	s	namespace:Catch
append_exponent	ext/headers/json.hpp	/^inline char* append_exponent(char* buf, int e)$/;"	f	namespace:nlohmann::detail::dtoa_impl
arcSafeRelease	ext/headers/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	ext/headers/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arg	ext/fmt/include/fmt/core.h	/^    basic_format_arg<Context> arg;$/;"	m	struct:internal::arg_map::entry
arg	ext/fmt/include/fmt/format.h	/^  basic_format_arg<Context> arg;$/;"	m	struct:format_handler
arg_formatter	ext/fmt/include/fmt/format.h	/^  arg_formatter(context_type &ctx, format_specs &spec)$/;"	f	class:arg_formatter
arg_formatter	ext/fmt/include/fmt/format.h	/^  explicit arg_formatter(context_type &ctx, format_specs *spec = FMT_NULL)$/;"	f	class:arg_formatter
arg_formatter	ext/fmt/include/fmt/format.h	/^class arg_formatter:$/;"	c
arg_formatter_base	ext/fmt/include/fmt/format.h	/^  arg_formatter_base(Range r, format_specs *s, locale_ref loc)$/;"	f	class:internal::arg_formatter_base
arg_formatter_base	ext/fmt/include/fmt/format.h	/^class arg_formatter_base {$/;"	c	namespace:internal
arg_id_	ext/fmt/include/fmt/format.h	/^  int arg_id_;$/;"	m	class:internal::format_string_checker
arg_join	ext/fmt/include/fmt/format.h	/^  arg_join(It begin, It end, basic_string_view<Char> sep)$/;"	f	struct:arg_join
arg_join	ext/fmt/include/fmt/format.h	/^struct arg_join {$/;"	s
arg_map	ext/fmt/include/fmt/core.h	/^  arg_map() : map_(FMT_NULL), size_(0) {}$/;"	f	class:internal::arg_map
arg_map	ext/fmt/include/fmt/core.h	/^class arg_map {$/;"	c	namespace:internal
arg_ref	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR arg_ref() : kind(NONE), index(0) {}$/;"	f	struct:internal::arg_ref
arg_ref	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR explicit arg_ref(unsigned index) : kind(INDEX), index(index) {}$/;"	f	struct:internal::arg_ref
arg_ref	ext/fmt/include/fmt/format.h	/^  explicit arg_ref(basic_string_view<Char> nm) : kind(NAME) {$/;"	f	struct:internal::arg_ref
arg_ref	ext/fmt/include/fmt/format.h	/^struct arg_ref {$/;"	s	namespace:internal
arg_ref_type	ext/fmt/include/fmt/format.h	/^  typedef arg_ref<char_type> arg_ref_type;$/;"	t	class:internal::dynamic_specs_handler
arg_type_	ext/fmt/include/fmt/format.h	/^  internal::type arg_type_;$/;"	m	class:internal::specs_checker
args	ext/fmt/include/fmt/core.h	/^  basic_format_args<Context> args() const { return args_; }$/;"	f	class:internal::context_base
args	scripts/batch_run.py	/^    args = parser.parse_args()$/;"	v
args	scripts/final_PowerTemperature_map.py	/^args = parser.parse_args()$/;"	v
args	scripts/heatmap.py	/^    args = parser.parse_args()$/;"	v
args	scripts/plot_stats.py	/^    args = parser.parse_args()$/;"	v
args	scripts/trace_gen.py	/^    args = parser.parse_args()$/;"	v
args_	ext/fmt/include/fmt/core.h	/^  basic_format_args<Context> args_;$/;"	m	class:internal::context_base
argstest	ext/headers/args.hxx	/^namespace argstest$/;"	n
array	ext/headers/json.hpp	/^        array_t* array;$/;"	m	union:nlohmann::basic_json::json_value
array	ext/headers/json.hpp	/^    array,            \/\/\/< array (ordered collection of values)$/;"	m	class:nlohmann::detail::value_t
array	ext/headers/json.hpp	/^    static basic_json array(initializer_list_t init = {})$/;"	f	class:nlohmann::basic_json
array_end	ext/headers/json.hpp	/^        array_end,$/;"	m	class:nlohmann::detail::parser::parse_event_t
array_index	ext/headers/json.hpp	/^    static int array_index(const std::string& s)$/;"	f	class:nlohmann::json_pointer
array_index	ext/headers/json.hpp	/^    std::size_t array_index = 0;$/;"	m	class:nlohmann::detail::iteration_proxy_value
array_index_last	ext/headers/json.hpp	/^    mutable std::size_t array_index_last = 0;$/;"	m	class:nlohmann::detail::iteration_proxy_value
array_index_str	ext/headers/json.hpp	/^    mutable std::string array_index_str = "0";$/;"	m	class:nlohmann::detail::iteration_proxy_value
array_size_	src/cpu.h	/^    const uint64_t array_size_ = 2 << 20;  \/\/ elements in array$/;"	m	class:dramsim3::StreamCPU
array_start	ext/headers/json.hpp	/^        array_start,$/;"	m	class:nlohmann::detail::parser::parse_event_t
as_named_arg	ext/fmt/include/fmt/core.h	/^  const named_arg_base<char_type> &as_named_arg() {$/;"	f	class:internal::value
at	ext/headers/json.hpp	/^    const_reference at(const json_pointer& ptr) const$/;"	f	class:nlohmann::basic_json
at	ext/headers/json.hpp	/^    const_reference at(const typename object_t::key_type& key) const$/;"	f	class:nlohmann::basic_json
at	ext/headers/json.hpp	/^    const_reference at(size_type idx) const$/;"	f	class:nlohmann::basic_json
at	ext/headers/json.hpp	/^    reference at(const json_pointer& ptr)$/;"	f	class:nlohmann::basic_json
at	ext/headers/json.hpp	/^    reference at(const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json
at	ext/headers/json.hpp	/^    reference at(size_type idx)$/;"	f	class:nlohmann::basic_json
auto_id	ext/fmt/include/fmt/format.h	/^struct auto_id {};$/;"	s	namespace:internal
avg_logic_power_	src/thermal.h	/^    double avg_logic_power_;$/;"	m	class:dramsim3::ThermalCalculator
ba_mask	src/configuration.h	/^    uint64_t ch_mask, ra_mask, bg_mask, ba_mask, ro_mask, co_mask;$/;"	m	class:dramsim3::Config
ba_pos	src/configuration.h	/^    int ch_pos, ra_pos, bg_pos, ba_pos, ro_pos, co_pos;$/;"	m	class:dramsim3::Config
back	ext/headers/json.hpp	/^    const_reference back() const$/;"	f	class:nlohmann::basic_json
back	ext/headers/json.hpp	/^    reference back()$/;"	f	class:nlohmann::basic_json
back_insert_range	ext/fmt/include/fmt/format.h	/^  back_insert_range(Container &c): base(std::back_inserter(c)) {}$/;"	f	class:back_insert_range
back_insert_range	ext/fmt/include/fmt/format.h	/^  back_insert_range(typename base::iterator it): base(it) {}$/;"	f	class:back_insert_range
back_insert_range	ext/fmt/include/fmt/format.h	/^class back_insert_range:$/;"	c
background_energy_	src/thermal.h	/^    std::vector<std::vector<double>> background_energy_;$/;"	m	class:dramsim3::ThermalCalculator
bank	src/common.h	/^    int bank;$/;"	m	struct:dramsim3::Address
bank_active_	src/thermal_replay.h	/^    std::vector<std::vector<std::vector<std::vector<bool>>>> bank_active_;$/;"	m	class:dramsim3::ThermalReplay
bank_asr	src/configuration.h	/^    double bank_asr;  \/\/ the aspect ratio of a bank: #row_bits \/ #col_bits$/;"	m	class:dramsim3::Config
bank_layer_order	src/configuration.h	/^    int bank_layer_order;$/;"	m	class:dramsim3::Config
bank_order	src/configuration.h	/^    int bank_order;$/;"	m	class:dramsim3::Config
bank_pos_file	scripts/heatmap.py	/^            bank_pos_file = args.bank_csv$/;"	v
bank_pos_file	scripts/heatmap.py	/^        bank_pos_file = prefix + "bank_position.csv"$/;"	v
bank_position_csv_	src/thermal.h	/^    std::ofstream bank_position_csv_;$/;"	m	class:dramsim3::ThermalCalculator
bank_states_	src/channel_state.h	/^    std::vector<std::vector<std::vector<BankState> > > bank_states_;$/;"	m	class:dramsim3::ChannelState
bank_x	src/thermal.h	/^    int vault_x, vault_y, bank_x, bank_y;$/;"	m	class:dramsim3::ThermalCalculator
bank_y	src/thermal.h	/^    int vault_x, vault_y, bank_x, bank_y;$/;"	m	class:dramsim3::ThermalCalculator
bankgroup	src/common.h	/^    int bankgroup;$/;"	m	struct:dramsim3::Address
bankgroups	src/configuration.h	/^    int bankgroups;$/;"	m	class:dramsim3::Config
banks	src/configuration.h	/^    int banks;$/;"	m	class:dramsim3::Config
banks_per_group	src/configuration.h	/^    int banks_per_group;$/;"	m	class:dramsim3::Config
base	ext/fmt/include/fmt/core.h	/^  typedef internal::context_base<OutputIt, basic_format_context, Char> base;$/;"	t	class:basic_format_context
base	ext/fmt/include/fmt/format.h	/^  OutputIt base() const { return out_; }$/;"	f	class:internal::truncating_iterator_base
base	ext/fmt/include/fmt/format.h	/^  typedef internal::arg_formatter_base<Range> base;$/;"	t	class:arg_formatter
base	ext/fmt/include/fmt/format.h	/^  typedef output_range<std::back_insert_iterator<Container>> base;$/;"	t	class:back_insert_range
base_iterator	ext/headers/json.hpp	/^        : base_iterator(it) {}$/;"	f	class:nlohmann::detail::json_reverse_iterator
base_iterator	ext/headers/json.hpp	/^    explicit json_reverse_iterator(const base_iterator& it) noexcept : base_iterator(it) {}$/;"	f	class:nlohmann::detail::json_reverse_iterator
basic_buffer	ext/fmt/include/fmt/core.h	/^class basic_buffer {$/;"	c	namespace:internal
basic_format_arg	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR basic_format_arg() : type_(internal::none_type) {}$/;"	f	class:basic_format_arg
basic_format_arg	ext/fmt/include/fmt/core.h	/^class basic_format_arg {$/;"	c
basic_format_context	ext/fmt/include/fmt/core.h	/^  basic_format_context(OutputIt out, basic_string_view<char_type> format_str,$/;"	f	class:basic_format_context
basic_format_context	ext/fmt/include/fmt/core.h	/^class basic_format_context :$/;"	c
basic_format_specs	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR basic_format_specs() {}$/;"	f	struct:basic_format_specs
basic_format_specs	ext/fmt/include/fmt/format.h	/^struct basic_format_specs : align_spec, core_format_specs {$/;"	s
basic_json	ext/headers/json.hpp	/^        : basic_json(value_t::null)$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^    basic_json(InputIT first, InputIT last)$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^    basic_json(const BasicJsonType& val)$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^    basic_json(const basic_json& other)$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^    basic_json(const detail::json_ref<basic_json>& ref)$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^    basic_json(const value_t v)$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^    basic_json(initializer_list_t init,$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^    basic_json(size_type cnt, const basic_json& val)$/;"	f	class:nlohmann::basic_json
basic_json	ext/headers/json.hpp	/^class basic_json$/;"	c	namespace:nlohmann
basic_memory_buffer	ext/fmt/include/fmt/format.h	/^  basic_memory_buffer(basic_memory_buffer &&other) {$/;"	f	class:basic_memory_buffer
basic_memory_buffer	ext/fmt/include/fmt/format.h	/^  explicit basic_memory_buffer(const Allocator &alloc = Allocator())$/;"	f	class:basic_memory_buffer
basic_memory_buffer	ext/fmt/include/fmt/format.h	/^class basic_memory_buffer: private Allocator, public internal::basic_buffer<T> {$/;"	c
basic_parse_context	ext/fmt/include/fmt/core.h	/^  explicit FMT_CONSTEXPR basic_parse_context($/;"	f	class:basic_parse_context
basic_parse_context	ext/fmt/include/fmt/core.h	/^class basic_parse_context : private ErrorHandler {$/;"	c
basic_string_view	ext/fmt/include/fmt/core.h	/^  basic_string_view(const Char *s)$/;"	f	class:basic_string_view
basic_string_view	ext/fmt/include/fmt/core.h	/^class basic_string_view {$/;"	c
basic_writer	ext/fmt/include/fmt/format.h	/^  explicit basic_writer($/;"	f	class:basic_writer
basic_writer	ext/fmt/include/fmt/format.h	/^class basic_writer {$/;"	c
begin	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR iterator begin() const { return data_; }$/;"	f	class:basic_string_view
begin	ext/fmt/include/fmt/core.h	/^  iterator begin() { return out_; }  \/\/ deprecated$/;"	f	class:internal::context_base
begin	ext/fmt/include/fmt/format.h	/^  It begin;$/;"	m	struct:arg_join
begin	ext/fmt/include/fmt/format.h	/^  OutputIt begin() const { return it_; }$/;"	f	class:output_range
begin	ext/headers/args.hxx	/^            auto ParseArgs(const T &args) -> decltype(std::begin(args))$/;"	f	class:argstest::ArgumentParser
begin_array	ext/headers/json.hpp	/^        begin_array,      \/\/\/< the character for array begin `[`$/;"	m	class:nlohmann::detail::lexer::token_type
begin_object	ext/headers/json.hpp	/^        begin_object,     \/\/\/< the character for object begin `{`$/;"	m	class:nlohmann::detail::lexer::token_type
begin_value	ext/headers/json.hpp	/^    static constexpr difference_type begin_value = 0;$/;"	m	class:nlohmann::detail::primitive_iterator_t
bg_mask	src/configuration.h	/^    uint64_t ch_mask, ra_mask, bg_mask, ba_mask, ro_mask, co_mask;$/;"	m	class:dramsim3::Config
bg_pos	src/configuration.h	/^    int ch_pos, ra_pos, bg_pos, ba_pos, ro_pos, co_pos;$/;"	m	class:dramsim3::Config
bin_widths_	src/simple_stats.h	/^    std::unordered_map<std::string, int> bin_widths_;$/;"	m	class:dramsim3::SimpleStats
bin_writer	ext/fmt/include/fmt/format.h	/^    struct bin_writer {$/;"	s	struct:basic_writer::int_writer
binary_reader	ext/headers/json.hpp	/^    explicit binary_reader(input_adapter_t adapter) : ia(std::move(adapter))$/;"	f	class:nlohmann::detail::binary_reader
binary_reader	ext/headers/json.hpp	/^class binary_reader$/;"	c	namespace:nlohmann::detail
binary_writer	ext/headers/json.hpp	/^    explicit binary_writer(output_adapter_t<CharType> adapter) : oa(adapter)$/;"	f	class:nlohmann::detail::binary_writer
binary_writer	ext/headers/json.hpp	/^class binary_writer$/;"	c	namespace:nlohmann::detail
bit_cast	ext/fmt/include/fmt/format.h	/^inline Dest bit_cast(const Source& source) {$/;"	f	namespace:internal
blackhole_	ext/fmt/include/fmt/format.h	/^  mutable T blackhole_;$/;"	m	class:internal::counting_iterator
blackhole_	ext/fmt/include/fmt/format.h	/^  mutable typename traits::value_type blackhole_;$/;"	m	class:internal::truncating_iterator
block_size	src/configuration.h	/^    int block_size;  \/\/ block size in bytes$/;"	m	class:dramsim3::Config
bool_type	ext/fmt/include/fmt/core.h	/^  int_type, uint_type, long_long_type, ulong_long_type, bool_type, char_type,$/;"	e	enum:internal::type
boolean	ext/headers/json.hpp	/^        boolean_t boolean;$/;"	m	union:nlohmann::basic_json::json_value
boolean	ext/headers/json.hpp	/^        json_value(boolean_t v) noexcept : boolean(v) {}$/;"	f	union:nlohmann::basic_json::json_value
boolean	ext/headers/json.hpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor
boolean	ext/headers/json.hpp	/^    bool boolean(bool val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
boolean	ext/headers/json.hpp	/^    bool boolean(bool val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
boolean	ext/headers/json.hpp	/^    boolean,          \/\/\/< boolean value$/;"	m	class:nlohmann::detail::value_t
boundaries	ext/headers/json.hpp	/^struct boundaries$/;"	s	namespace:nlohmann::detail::dtoa_impl
buf	ext/fmt/include/fmt/format-inl.h	/^  buffer &buf;$/;"	m	struct:internal::prettify_handler
buffer	ext/fmt/include/fmt/core.h	/^typedef basic_buffer<char> buffer;$/;"	t	namespace:internal
buffer	ext/fmt/include/fmt/format.h	/^    internal::buffer &buffer;$/;"	m	struct:basic_writer::double_writer
buffer_	ext/fmt/include/fmt/format.h	/^  char *buffer_;$/;"	m	class:internal::decimal_formatter
buffer_	ext/fmt/include/fmt/format.h	/^  memory_buffer buffer_;$/;"	m	class:internal::utf16_to_utf8
buffer_	ext/fmt/include/fmt/format.h	/^  mutable char buffer_[BUFFER_SIZE];$/;"	m	class:format_int
buffer_	ext/fmt/include/fmt/format.h	/^  wmemory_buffer buffer_;$/;"	m	class:internal::utf8_to_utf16
buffer_context	ext/fmt/include/fmt/core.h	/^struct buffer_context {$/;"	s
build_summary	scripts/batch_run.py	/^def build_summary(config_files, stats_csvs, summary_name):$/;"	f
burst_cycle	src/configuration.h	/^    int burst_cycle;  \/\/ seperate BL with timing since for GDDRx it's not BL\/2$/;"	m	class:dramsim3::Config
bus_width	src/configuration.h	/^    int bus_width;$/;"	m	class:dramsim3::Config
byte	ext/headers/json.hpp	/^    const std::size_t byte;$/;"	m	class:nlohmann::detail::parse_error
c_str	ext/fmt/include/fmt/format.h	/^  const char *c_str() const { return &buffer_[0]; }$/;"	f	class:internal::utf16_to_utf8
c_str	ext/fmt/include/fmt/format.h	/^  const char *c_str() const {$/;"	f	class:format_int
c_str	ext/fmt/include/fmt/format.h	/^  const wchar_t *c_str() const { return &buffer_[0]; }$/;"	f	class:internal::utf8_to_utf16
ca	scripts/final_PowerTemperature_map.py	/^	ca = plt.gca()$/;"	v
cached_power	ext/headers/json.hpp	/^struct cached_power \/\/ c = f * 2^e ~= 10^k$/;"	s	namespace:nlohmann::detail::dtoa_impl
calc_bson_array_size	ext/headers/json.hpp	/^    static std::size_t calc_bson_array_size(const typename BasicJsonType::array_t& value)$/;"	f	class:nlohmann::detail::binary_writer
calc_bson_element_size	ext/headers/json.hpp	/^    static std::size_t calc_bson_element_size(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
calc_bson_entry_header_size	ext/headers/json.hpp	/^    static std::size_t calc_bson_entry_header_size(const string_t& name)$/;"	f	class:nlohmann::detail::binary_writer
calc_bson_integer_size	ext/headers/json.hpp	/^    static std::size_t calc_bson_integer_size(const std::int64_t value)$/;"	f	class:nlohmann::detail::binary_writer
calc_bson_object_size	ext/headers/json.hpp	/^    static std::size_t calc_bson_object_size(const typename BasicJsonType::object_t& value)$/;"	f	class:nlohmann::detail::binary_writer
calc_bson_string_size	ext/headers/json.hpp	/^    static std::size_t calc_bson_string_size(const string_t& value)$/;"	f	class:nlohmann::detail::binary_writer
calculate_Cap_array	src/thermal_solver.c	/^double *calculate_Cap_array(double W, double Lc, int numP, int dimX, int dimZ,$/;"	f
calculate_Midx_array	src/thermal_solver.c	/^double **calculate_Midx_array(double W, double Lc, int numP, int dimX, int dimZ,$/;"	f
calculate_megs_per_device	scripts/validation.py	/^def calculate_megs_per_device(config):$/;"	f
calculate_time_step	src/thermal.cc	/^void ThermalCalculator::calculate_time_step() {$/;"	f	class:dramsim3::ThermalCalculator
calculated_	src/simple_stats.h	/^    std::unordered_map<std::string, double> calculated_;$/;"	m	class:dramsim3::SimpleStats
call_back_called	tests/test_dramsys.cc	/^bool call_back_called = false;$/;"	v
callback	ext/headers/json.hpp	/^    const parser_callback_t callback = nullptr;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
callback	ext/headers/json.hpp	/^    const parser_callback_t callback = nullptr;$/;"	m	class:nlohmann::detail::parser
capacity_	ext/fmt/include/fmt/core.h	/^    FMT_NOEXCEPT: ptr_(p), size_(sz), capacity_(cap) {}$/;"	f	class:internal::basic_buffer
capacity_	ext/fmt/include/fmt/core.h	/^  basic_buffer(std::size_t sz) FMT_NOEXCEPT: size_(sz), capacity_(sz) {}$/;"	f	class:internal::basic_buffer
capacity_	ext/fmt/include/fmt/core.h	/^  std::size_t capacity_;$/;"	m	class:internal::basic_buffer
capturedExpression	ext/headers/catch.hpp	/^        StringRef capturedExpression;$/;"	m	struct:Catch::AssertionInfo
cbor	ext/headers/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	m	class:nlohmann::detail::input_format_t
ch_mask	src/configuration.h	/^    uint64_t ch_mask, ra_mask, bg_mask, ba_mask, ro_mask, co_mask;$/;"	m	class:dramsim3::Config
ch_pos	src/configuration.h	/^    int ch_pos, ra_pos, bg_pos, ba_pos, ro_pos, co_pos;$/;"	m	class:dramsim3::Config
channel	src/common.h	/^    int channel;$/;"	m	struct:dramsim3::Address
channel_id_	src/controller.h	/^    int channel_id_;$/;"	m	class:dramsim3::Controller
channel_id_	src/simple_stats.h	/^    int channel_id_;$/;"	m	class:dramsim3::SimpleStats
channel_size	src/configuration.h	/^    int channel_size;$/;"	m	class:dramsim3::Config
channel_state_	src/command_queue.h	/^    const ChannelState& channel_state_;$/;"	m	class:dramsim3::CommandQueue
channel_state_	src/controller.h	/^    ChannelState channel_state_;$/;"	m	class:dramsim3::Controller
channel_state_	src/refresh.h	/^    ChannelState& channel_state_;$/;"	m	class:dramsim3::Refresh
channel_stats_	src/thermal_replay.h	/^    std::vector<SimpleStats> channel_stats_;$/;"	m	class:dramsim3::ThermalReplay
channels	src/configuration.h	/^    int channels;$/;"	m	class:dramsim3::Config
char_counter	ext/fmt/include/fmt/format-inl.h	/^struct char_counter {$/;"	s	namespace:internal
char_size	ext/fmt/include/fmt/format-inl.h	/^  static FMT_CONSTEXPR_DECL const int char_size =$/;"	m	class:internal::fp
char_spec_handler	ext/fmt/include/fmt/format.h	/^    char_spec_handler(arg_formatter_base& f, char_type val)$/;"	f	struct:internal::arg_formatter_base::char_spec_handler
char_spec_handler	ext/fmt/include/fmt/format.h	/^  struct char_spec_handler : internal::error_handler {$/;"	s	class:internal::arg_formatter_base
char_specs_checker	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR char_specs_checker(char type, ErrorHandler eh)$/;"	f	class:internal::char_specs_checker
char_specs_checker	ext/fmt/include/fmt/format.h	/^class char_specs_checker : public ErrorHandler {$/;"	c	namespace:internal
char_t	ext/fmt/include/fmt/core.h	/^struct char_t {$/;"	s	namespace:internal
char_traits	ext/fmt/include/fmt/format.h	/^struct char_traits<char> {$/;"	s	namespace:internal
char_traits	ext/fmt/include/fmt/format.h	/^struct char_traits<wchar_t> {$/;"	s	namespace:internal
char_type	ext/fmt/include/fmt/core.h	/^  int_type, uint_type, long_long_type, ulong_long_type, bool_type, char_type,$/;"	e	enum:internal::type
char_type	ext/fmt/include/fmt/core.h	/^  typedef Char char_type;$/;"	t	class:basic_format_context
char_type	ext/fmt/include/fmt/core.h	/^  typedef Char char_type;$/;"	t	class:basic_parse_context
char_type	ext/fmt/include/fmt/core.h	/^  typedef Char char_type;$/;"	t	class:basic_string_view
char_type	ext/fmt/include/fmt/core.h	/^  typedef Char char_type;$/;"	t	class:internal::context_base
char_type	ext/fmt/include/fmt/core.h	/^  typedef typename Context::char_type char_type;$/;"	t	class:basic_format_arg
char_type	ext/fmt/include/fmt/core.h	/^  typedef typename Context::char_type char_type;$/;"	t	class:internal::arg_map
char_type	ext/fmt/include/fmt/core.h	/^  typedef typename Context::char_type char_type;$/;"	t	class:internal::value
char_type	ext/fmt/include/fmt/core.h	/^struct dummy_string_view { typedef void char_type; };$/;"	t	struct:internal::dummy_string_view
char_type	ext/fmt/include/fmt/format.h	/^  typedef Char char_type;$/;"	t	class:internal::add_thousands_sep
char_type	ext/fmt/include/fmt/format.h	/^  typedef char char_type;$/;"	t	struct:internal::no_thousands_sep
char_type	ext/fmt/include/fmt/format.h	/^  typedef char8_t char_type;$/;"	t	class:u8string_view
char_type	ext/fmt/include/fmt/format.h	/^  typedef typename Context::char_type char_type;$/;"	t	class:internal::specs_handler
char_type	ext/fmt/include/fmt/format.h	/^  typedef typename ParseContext::char_type char_type;$/;"	t	class:internal::dynamic_specs_handler
char_type	ext/fmt/include/fmt/format.h	/^  typedef typename Range::value_type char_type;$/;"	t	class:arg_formatter
char_type	ext/fmt/include/fmt/format.h	/^  typedef typename Range::value_type char_type;$/;"	t	class:basic_writer
char_type	ext/fmt/include/fmt/format.h	/^  typedef typename Range::value_type char_type;$/;"	t	class:internal::arg_formatter_base
char_writer	ext/fmt/include/fmt/format.h	/^  struct char_writer {$/;"	s	class:internal::arg_formatter_base
chars_read	ext/headers/json.hpp	/^    std::size_t chars_read = 0;$/;"	m	class:nlohmann::detail::binary_reader
chars_read_current_line	ext/headers/json.hpp	/^    std::size_t chars_read_current_line = 0;$/;"	m	struct:nlohmann::detail::position_t
chars_read_total	ext/headers/json.hpp	/^    std::size_t chars_read_total = 0;$/;"	m	struct:nlohmann::detail::position_t
check_arg_id	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR bool check_arg_id(unsigned) {$/;"	f	class:basic_parse_context
check_arg_id	ext/fmt/include/fmt/core.h	/^  void check_arg_id(basic_string_view<Char>) {}$/;"	f	class:basic_parse_context
check_arg_id	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void check_arg_id() {$/;"	f	class:internal::format_string_checker
check_format_string	ext/fmt/include/fmt/format.h	/^    check_format_string(S format_str) {$/;"	f	namespace:internal
check_pointer_type_spec	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void check_pointer_type_spec(Char spec, ErrorHandler &&eh) {$/;"	f	namespace:internal
check_sign	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void check_sign() {$/;"	f	class:internal::specs_checker
check_string_type_spec	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void check_string_type_spec(Char spec, ErrorHandler &&eh) {$/;"	f	namespace:internal
checked	ext/fmt/include/fmt/format.h	/^struct checked { typedef stdext::checked_array_iterator<T*> type; };$/;"	s	namespace:internal
children	ext/headers/args.hxx	/^            std::vector<Base*> children;$/;"	m	class:argstest::Group
chip_dim_x	src/configuration.h	/^    double chip_dim_x;$/;"	m	class:dramsim3::Config
chip_dim_y	src/configuration.h	/^    double chip_dim_y;$/;"	m	class:dramsim3::Config
clear	ext/fmt/include/fmt/core.h	/^  void clear() { size_ = 0; }$/;"	f	class:internal::basic_buffer
clk_	src/command_queue.h	/^    uint64_t clk_;$/;"	m	class:dramsim3::CommandQueue
clk_	src/controller.h	/^    uint64_t clk_;$/;"	m	class:dramsim3::Controller
clk_	src/cpu.h	/^    uint64_t clk_;$/;"	m	class:dramsim3::CPU
clk_	src/dram_system.h	/^    uint64_t clk_;$/;"	m	class:dramsim3::BaseDRAMSystem
clk_	src/refresh.h	/^    uint64_t clk_;$/;"	m	class:dramsim3::Refresh
clz	ext/fmt/include/fmt/format.h	/^inline uint32_t clz(uint32_t x) {$/;"	f	namespace:internal
clzll	ext/fmt/include/fmt/format.h	/^inline uint32_t clzll(uint64_t x) {$/;"	f	namespace:internal
cmd_queue_	src/controller.h	/^    CommandQueue cmd_queue_;$/;"	m	class:dramsim3::Controller
cmd_queue_size	src/configuration.h	/^    int cmd_queue_size;$/;"	m	class:dramsim3::Config
cmd_timing_	src/bankstate.h	/^    std::vector<uint64_t> cmd_timing_;$/;"	m	class:dramsim3::BankState
cmd_trace_	src/controller.h	/^    std::ofstream cmd_trace_;$/;"	m	class:dramsim3::Controller
cmd_trace_file	scripts/validation.py	/^    cmd_trace_file = sys.argv[2]$/;"	v	class:LPDDRValidtion
cmd_type	src/common.h	/^    CommandType cmd_type;$/;"	m	struct:dramsim3::Command
co_mask	src/configuration.h	/^    uint64_t ch_mask, ra_mask, bg_mask, ba_mask, ro_mask, co_mask;$/;"	m	class:dramsim3::Config
co_pos	src/configuration.h	/^    int ch_pos, ra_pos, bg_pos, ba_pos, ro_pos, co_pos;$/;"	m	class:dramsim3::Config
column	src/common.h	/^    int column;$/;"	m	struct:dramsim3::Address
columns	src/configuration.h	/^    int columns;$/;"	m	class:dramsim3::Config
combine	ext/headers/catch.hpp	/^struct combine {$/;"	s	namespace:Catch
compare	ext/fmt/include/fmt/core.h	/^  int compare(basic_string_view other) const {$/;"	f	class:basic_string_view
compile_string	ext/fmt/include/fmt/core.h	/^struct compile_string {};$/;"	s
complete_cycle	src/common.h	/^    uint64_t complete_cycle;$/;"	m	struct:dramsim3::Transaction
compute_boundaries	ext/fmt/include/fmt/format-inl.h	/^  void compute_boundaries(fp &lower, fp &upper) const {$/;"	f	class:internal::fp
compute_boundaries	ext/headers/json.hpp	/^boundaries compute_boundaries(FloatType value)$/;"	f	namespace:nlohmann::detail::dtoa_impl
conditional	ext/fmt/include/fmt/format.h	/^  typedef typename std::conditional<$/;"	t	class:internal::int_traits::std
conf_	src/cpu.h	/^    const Config* conf_;$/;"	m	class:dramsim3::CPU
config_	src/channel_state.h	/^    const Config& config_;$/;"	m	class:dramsim3::ChannelState
config_	src/command_queue.h	/^    const Config& config_;$/;"	m	class:dramsim3::CommandQueue
config_	src/controller.h	/^    const Config &config_;$/;"	m	class:dramsim3::Controller
config_	src/dram_system.h	/^    Config &config_;$/;"	m	class:dramsim3::BaseDRAMSystem
config_	src/memory_system.h	/^    Config *config_;$/;"	m	class:dramsim3::MemorySystem
config_	src/refresh.h	/^    const Config& config_;$/;"	m	class:dramsim3::Refresh
config_	src/simple_stats.h	/^    const Config& config_;$/;"	m	class:dramsim3::SimpleStats
config_	src/thermal.h	/^    const Config &config_;$/;"	m	class:dramsim3::ThermalCalculator
config_	src/thermal_replay.h	/^    Config config_;$/;"	m	class:dramsim3::ThermalReplay
config_file	scripts/batch_run.py	/^        config_file = c$/;"	v
configs	scripts/batch_run.py	/^    configs = process_configs(args)   $/;"	v
configs	scripts/validation.py	/^    configs = parse_config.get_dict(ini_file)$/;"	v	class:LPDDRValidtion
const	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const_check	ext/fmt/include/fmt/format.h	/^inline T const_check(T value) { return value; }$/;"	f	namespace:internal
const_logic_power	src/configuration.h	/^    double const_logic_power;$/;"	m	class:dramsim3::Config
const_reference	ext/fmt/include/fmt/core.h	/^  typedef const T &const_reference;$/;"	t	class:internal::basic_buffer
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleStringType& str)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const std::vector<bool>& arr)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::array_t& arr)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::object_t& obj)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::string_t& s)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	struct:nlohmann::detail::external_constructor
construct	ext/headers/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	struct:nlohmann::detail::external_constructor
construct_mesh	scripts/heatmap.py	/^def construct_mesh(df, val_key, xkey="x", ykey="y"):$/;"	f
container	ext/headers/json.hpp	/^        : container(cont) {}$/;"	f	class:nlohmann::detail::iteration_proxy
container	ext/headers/json.hpp	/^    typename IteratorType::reference container;$/;"	m	class:nlohmann::detail::iteration_proxy
container_	ext/fmt/include/fmt/core.h	/^  Container &container_;$/;"	m	class:internal::container_buffer
container_buffer	ext/fmt/include/fmt/core.h	/^  explicit container_buffer(Container &c)$/;"	f	class:internal::container_buffer
container_buffer	ext/fmt/include/fmt/core.h	/^class container_buffer : public basic_buffer<typename Container::value_type> {$/;"	c	namespace:internal
contains	ext/headers/json.hpp	/^    bool contains(KeyT&& key) const$/;"	f	class:nlohmann::basic_json
context	ext/fmt/include/fmt/format.h	/^  Context context;$/;"	m	struct:format_handler
context_	ext/fmt/include/fmt/format.h	/^  Context &context_;$/;"	m	class:internal::specs_handler
context_	ext/fmt/include/fmt/format.h	/^  ParseContext &context_;$/;"	m	class:internal::dynamic_specs_handler
context_	ext/fmt/include/fmt/format.h	/^  parse_context_type context_;$/;"	m	class:internal::format_string_checker
context_base	ext/fmt/include/fmt/core.h	/^  context_base(OutputIt out, basic_string_view<char_type> format_str,$/;"	f	class:internal::context_base
context_base	ext/fmt/include/fmt/core.h	/^class context_base {$/;"	c	namespace:internal
context_type	ext/fmt/include/fmt/format.h	/^  typedef basic_format_context<typename base::iterator, char_type> context_type;$/;"	t	class:arg_formatter
convert	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC int internal::utf16_to_utf8::convert(wstring_view s) {$/;"	f	class:internal::utf16_to_utf8
convert	ext/headers/catch.hpp	/^            convert( const Fake& value ) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^            convert(const Fake& value) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(NSObject* nsObject) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(NSString * nsstring) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(R C::* p) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(U* p) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(char const* str) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(const std::optional<T>& optional) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(const std::pair<T1, T2>& pair) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(signed char const* str) {$/;"	f	struct:Catch::StringMaker
convert	ext/headers/catch.hpp	/^        static std::string convert(unsigned char const* str) {$/;"	f	struct:Catch::StringMaker
convertUnknownEnumToString	ext/headers/catch.hpp	/^        std::string convertUnknownEnumToString( E e ) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	ext/headers/catch.hpp	/^         std::string>::type convertUnstreamable(T const& ex) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	ext/headers/catch.hpp	/^        , std::string>::type convertUnstreamable( T const& value ) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	ext/headers/catch.hpp	/^        std::string>::type convertUnstreamable( T const& ) {$/;"	f	namespace:Catch::Detail
convert_to_int	ext/fmt/include/fmt/core.h	/^struct convert_to_int: std::integral_constant<$/;"	s
copy_address_pair_	src/command_queue.h	/^    AddressPair copy_address_pair_;         \/\/ Stores src, dest address of issued READCOPY. Use to find pair WRITECOPY of READCOPY$/;"	m	class:dramsim3::CommandQueue
copy_queue_	src/controller.h	/^    std::vector<Transaction> copy_queue_;$/;"	m	class:dramsim3::Controller
copy_str	ext/fmt/include/fmt/format.h	/^    copy_str(InputIt begin, InputIt end, OutputIt it) {$/;"	f	namespace:internal
core_format_specs	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR core_format_specs() : precision(-1), flags(0), type(0) {}$/;"	f	struct:core_format_specs
core_format_specs	ext/fmt/include/fmt/format.h	/^struct core_format_specs {$/;"	s
count	ext/fmt/include/fmt/format.h	/^  std::size_t count() const { return count_; }$/;"	f	class:internal::counting_iterator
count	ext/fmt/include/fmt/format.h	/^  std::size_t count() const { return count_; }$/;"	f	class:internal::truncating_iterator_base
count	ext/headers/args.hxx	/^            int count;$/;"	m	class:argstest::CounterFlag
count	ext/headers/json.hpp	/^    size_type count(KeyT&& key) const$/;"	f	class:nlohmann::basic_json
count_	ext/fmt/include/fmt/format.h	/^  std::size_t count_;$/;"	m	class:internal::counting_iterator
count_	ext/fmt/include/fmt/format.h	/^  std::size_t count_;$/;"	m	class:internal::truncating_iterator_base
count_code_points	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC size_t internal::count_code_points(basic_string_view<char8_t> s) {$/;"	f	class:internal
count_code_points	ext/fmt/include/fmt/format.h	/^inline size_t count_code_points(basic_string_view<Char> s) { return s.size(); }$/;"	f	namespace:internal
count_digits	ext/fmt/include/fmt/format.h	/^    unsigned count_digits() const {$/;"	f	struct:basic_writer::int_writer
count_digits	ext/fmt/include/fmt/format.h	/^inline unsigned count_digits(uint32_t n) {$/;"	f	namespace:internal
counters_	src/simple_stats.h	/^    std::unordered_map<std::string, uint64_t> counters_;$/;"	m	class:dramsim3::SimpleStats
counting_iterator	ext/fmt/include/fmt/format.h	/^  counting_iterator(): count_(0) {}$/;"	f	class:internal::counting_iterator
counting_iterator	ext/fmt/include/fmt/format.h	/^class counting_iterator {$/;"	c	namespace:internal
create	ext/headers/json.hpp	/^    static T* create(Args&& ... args)$/;"	f	class:nlohmann::basic_json
create	ext/headers/json.hpp	/^    static invalid_iterator create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::invalid_iterator
create	ext/headers/json.hpp	/^    static other_error create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::other_error
create	ext/headers/json.hpp	/^    static out_of_range create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::out_of_range
create	ext/headers/json.hpp	/^    static parse_error create(int id_, const position_t& pos, const std::string& what_arg)$/;"	f	class:nlohmann::detail::parse_error
create	ext/headers/json.hpp	/^    static parse_error create(int id_, std::size_t byte_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::parse_error
create	ext/headers/json.hpp	/^    static type_error create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::type_error
cstring_spec_handler	ext/fmt/include/fmt/format.h	/^    cstring_spec_handler(arg_formatter_base &f, const char_type *val)$/;"	f	struct:internal::arg_formatter_base::cstring_spec_handler
cstring_spec_handler	ext/fmt/include/fmt/format.h	/^  struct cstring_spec_handler : internal::error_handler {$/;"	s	class:internal::arg_formatter_base
cstring_type	ext/fmt/include/fmt/core.h	/^  cstring_type, string_type, pointer_type, custom_type$/;"	e	enum:internal::type
cstring_type_checker	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR explicit cstring_type_checker(ErrorHandler eh)$/;"	f	class:internal::cstring_type_checker
cstring_type_checker	ext/fmt/include/fmt/format.h	/^class cstring_type_checker : public ErrorHandler {$/;"	c	namespace:internal
csv_file	scripts/heatmap.py	/^            csv_file = args.stats_csv$/;"	v
csv_file	scripts/heatmap.py	/^        csv_file = prefix + "final_power_temperature.csv"$/;"	v
ctrls_	src/dram_system.h	/^    std::vector<Controller*> ctrls_;$/;"	m	class:dramsim3::BaseDRAMSystem
ctx_	ext/fmt/include/fmt/format.h	/^  Context &ctx_;$/;"	m	class:internal::custom_formatter
ctx_	ext/fmt/include/fmt/format.h	/^  context_type &ctx_;$/;"	m	class:arg_formatter
cur_Pmap	src/thermal.h	/^    std::vector<std::vector<double>> cur_Pmap;   \/\/ current power map$/;"	m	class:dramsim3::ThermalCalculator
current	ext/headers/json.hpp	/^    int current = std::char_traits<char>::eof();$/;"	m	class:nlohmann::detail::binary_reader
current	ext/headers/json.hpp	/^    std::char_traits<char>::int_type current = std::char_traits<char>::eof();$/;"	m	class:nlohmann::detail::lexer
current_wchar	ext/headers/json.hpp	/^    std::size_t current_wchar = 0;$/;"	m	class:nlohmann::detail::wide_string_input_adapter
cursor	ext/headers/json.hpp	/^    const char* cursor;$/;"	m	class:nlohmann::detail::input_buffer_adapter
custom	ext/fmt/include/fmt/core.h	/^    custom_value<Context> custom;$/;"	m	union:internal::value::__anon14
custom_	ext/fmt/include/fmt/core.h	/^    internal::custom_value<Context> custom_;$/;"	m	class:basic_format_arg::handle
custom_formatter	ext/fmt/include/fmt/format.h	/^  explicit custom_formatter(Context &ctx): ctx_(ctx) {}$/;"	f	class:internal::custom_formatter
custom_formatter	ext/fmt/include/fmt/format.h	/^class custom_formatter: public function<bool> {$/;"	c	namespace:internal
custom_type	ext/fmt/include/fmt/core.h	/^  cstring_type, string_type, pointer_type, custom_type$/;"	e	enum:internal::type
custom_value	ext/fmt/include/fmt/core.h	/^struct custom_value {$/;"	s	namespace:internal
data	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR const Char *data() const { return data_; }$/;"	f	class:basic_string_view
data	ext/fmt/include/fmt/format-inl.h	/^  char *data;$/;"	m	struct:internal::prettify_handler
data	ext/fmt/include/fmt/format.h	/^  const char *data() const { return str_; }$/;"	f	class:format_int
data	ext/fmt/include/fmt/format.h	/^  int data[2];$/;"	m	struct:internal::dummy_int
data_	ext/fmt/include/fmt/core.h	/^  const Char *data_;$/;"	m	class:basic_string_view
data_units	scripts/plot_stats.py	/^        data_units = {'average_bandwidth': 'GB\/s',$/;"	v
data_units	scripts/plot_stats.py	/^        data_units = {'read_latency': 'cycles',$/;"	v
deallocate	ext/fmt/include/fmt/format.h	/^  void deallocate() {$/;"	f	class:basic_memory_buffer
dec_writer	ext/fmt/include/fmt/format.h	/^    struct dec_writer {$/;"	s	struct:basic_writer::int_writer
decimal_formatter	ext/fmt/include/fmt/format.h	/^  explicit decimal_formatter(char *buf) : buffer_(buf) {}$/;"	f	class:internal::decimal_formatter
decimal_formatter	ext/fmt/include/fmt/format.h	/^class decimal_formatter {$/;"	c	namespace:internal
decimal_formatter_null	ext/fmt/include/fmt/format.h	/^  explicit decimal_formatter_null(char *buf) : decimal_formatter(buf) {}$/;"	f	class:internal::decimal_formatter_null
decimal_formatter_null	ext/fmt/include/fmt/format.h	/^class decimal_formatter_null : public decimal_formatter {$/;"	c	namespace:internal
decimal_point	ext/headers/json.hpp	/^    const char decimal_point = '\\0';$/;"	m	class:nlohmann::detail::serializer
decimal_point_char	ext/headers/json.hpp	/^    const char decimal_point_char = '.';$/;"	m	class:nlohmann::detail::lexer
decltype	ext/fmt/include/fmt/format.h	/^      -> decltype(ctx.out()) {$/;"	f	struct:formatter
decltype	ext/fmt/include/fmt/format.h	/^  auto format(const T &val, FormatContext &ctx) -> decltype(ctx.out()) {$/;"	f	class:dynamic_formatter
decltype	ext/fmt/include/fmt/format.h	/^  auto format(const T &val, FormatContext &ctx) -> decltype(ctx.out()) {$/;"	f	struct:formatter
decltype	ext/fmt/include/fmt/format.h	/^  auto parse(ParseContext &ctx) -> decltype(ctx.begin()) {$/;"	f	class:dynamic_formatter
decltype	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR auto begin(const C &c) -> decltype(c.begin()) {$/;"	f	namespace:internal
decltype	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR auto end(const C &c) -> decltype(c.end()) { return c.end(); }$/;"	f	namespace:internal
decltype	ext/headers/args.hxx	/^    auto get(Option &option_) -> decltype(option_.Get())$/;"	f	namespace:argstest
decltype	ext/headers/json.hpp	/^-> decltype($/;"	f	namespace:nlohmann::detail
decltype	ext/headers/json.hpp	/^-> decltype(j.template get<T>(), void())$/;"	f	namespace:nlohmann::detail
decltype	ext/headers/json.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.key())$/;"	f	namespace:nlohmann::detail
decltype	ext/headers/json.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.value())$/;"	f	namespace:nlohmann::detail
declval	ext/headers/json.hpp	/^    auto get_ptr() noexcept -> decltype(std::declval<basic_json_t&>().get_impl_ptr(std::declval<PointerType>()))$/;"	f	class:nlohmann::basic_json
declval	ext/headers/json.hpp	/^    constexpr auto get_ptr() const noexcept -> decltype(std::declval<const basic_json_t&>().get_impl_ptr(std::declval<PointerType>()))$/;"	f	class:nlohmann::basic_json
default	scripts/heatmap.py	/^                        default = "")$/;"	v
default	scripts/plot_stats.py	/^                        default='dramsim')$/;"	v
description	ext/headers/args.hxx	/^            std::string description;$/;"	m	class:argstest::ArgumentParser
description	scripts/trace_gen.py	/^        description="Trace Generator for Various DRAM Simulators",$/;"	v
descriptionindent	ext/headers/args.hxx	/^                unsigned int descriptionindent = 4;$/;"	m	struct:argstest::ArgumentParser::HelpParams
dest_addr	src/common.h	/^        uint64_t src_addr, dest_addr;$/;"	m	class:dramsim3::AddressPair
detail	ext/headers/json.hpp	/^namespace detail$/;"	n	namespace:nlohmann
detector	ext/headers/json.hpp	/^struct detector$/;"	s	namespace:nlohmann::detail
detector	ext/headers/json.hpp	/^struct detector<Default, void_t<Op<Args...>>, Op, Args...>$/;"	s	namespace:nlohmann::detail
determineXY	src/thermal.cc	/^int ThermalCalculator::determineXY(double xd, double yd, int total_grids_) {$/;"	f	class:dramsim3::ThermalCalculator
device_width	src/configuration.h	/^    int device_width;$/;"	m	class:dramsim3::Config
devices_per_rank	src/configuration.h	/^    int devices_per_rank;$/;"	m	class:dramsim3::Config
diff	ext/headers/json.hpp	/^    static basic_json diff(const basic_json& source, const basic_json& target,$/;"	f	class:nlohmann::basic_json
difference_type	ext/fmt/include/fmt/format.h	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:internal::counting_iterator
difference_type	ext/fmt/include/fmt/format.h	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:internal::null_terminating_iterator
difference_type	ext/fmt/include/fmt/format.h	/^  typedef void difference_type;$/;"	t	class:internal::truncating_iterator_base
digit_index_	ext/fmt/include/fmt/format.h	/^  unsigned digit_index_;$/;"	m	class:internal::add_thousands_sep
dimX	src/thermal.h	/^    int dimX, dimY, numP;   \/\/ Dimension of the memory$/;"	m	class:dramsim3::ThermalCalculator
dimY	src/thermal.h	/^    int dimX, dimY, numP;   \/\/ Dimension of the memory$/;"	m	class:dramsim3::ThermalCalculator
discarded	ext/headers/json.hpp	/^    BasicJsonType discarded = BasicJsonType::value_t::discarded;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
diyfp	ext/headers/json.hpp	/^struct diyfp \/\/ f * 2^e$/;"	s	namespace:nlohmann::detail::dtoa_impl
do_check_format_string	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR bool do_check_format_string($/;"	f	namespace:internal
do_get_arg	ext/fmt/include/fmt/core.h	/^  format_arg do_get_arg(unsigned arg_id) {$/;"	f	class:internal::context_base
do_throw	ext/fmt/include/fmt/format.h	/^inline void do_throw(const Exception &x) {$/;"	f	namespace:internal
double_significand_size	ext/fmt/include/fmt/format-inl.h	/^  static FMT_CONSTEXPR_DECL const int double_significand_size =$/;"	m	class:internal::fp
double_type	ext/fmt/include/fmt/core.h	/^  double_type, long_double_type, last_numeric_type = long_double_type,$/;"	e	enum:internal::type
double_value	ext/fmt/include/fmt/core.h	/^    double double_value;$/;"	m	union:internal::value::__anon14
double_writer	ext/fmt/include/fmt/format.h	/^  struct double_writer {$/;"	s	class:basic_writer
doubles_	src/simple_stats.h	/^    std::unordered_map<std::string, double> doubles_;$/;"	m	class:dramsim3::SimpleStats
dram_ps_	src/hmc.h	/^    uint64_t logic_clk_, ps_per_dram_, ps_per_logic_, logic_ps_, dram_ps_;$/;"	m	class:dramsim3::HMCMemorySystem
dram_system_	src/memory_system.h	/^    BaseDRAMSystem *dram_system_;$/;"	m	class:dramsim3::MemorySystem
dramsim3	src/bankstate.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/bankstate.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/channel_state.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/channel_state.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/command_queue.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/command_queue.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/common.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/common.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/configuration.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/configuration.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/controller.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/controller.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/cpu.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/cpu.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/dram_system.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/dram_system.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/dramsim3.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/hmc.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/hmc.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/memory_system.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/memory_system.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/refresh.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/refresh.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/simple_stats.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/simple_stats.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/thermal.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/thermal.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/thermal_replay.h	/^namespace dramsim3 {$/;"	n
dramsim3	src/timing.cc	/^namespace dramsim3 {$/;"	n	file:
dramsim3	src/timing.h	/^namespace dramsim3 {$/;"	n
dtoa_impl	ext/headers/json.hpp	/^namespace dtoa_impl$/;"	n	namespace:nlohmann::detail
dummy_call_back	tests/test_dramsys.cc	/^void dummy_call_back(uint64_t addr) {$/;"	f
dummy_int	ext/fmt/include/fmt/format.h	/^struct dummy_int {$/;"	s	namespace:internal
dummy_string_view	ext/fmt/include/fmt/core.h	/^struct dummy_string_view { typedef void char_type; };$/;"	s	namespace:internal
dump	ext/headers/json.hpp	/^    string_t dump(const int indent = -1,$/;"	f	class:nlohmann::basic_json
dump	ext/headers/json.hpp	/^    void dump(const BasicJsonType& val, const bool pretty_print,$/;"	f	class:nlohmann::detail::serializer
dump_escaped	ext/headers/json.hpp	/^    void dump_escaped(const string_t& s, const bool ensure_ascii)$/;"	f	class:nlohmann::detail::serializer
dump_float	ext/headers/json.hpp	/^    void dump_float(number_float_t x)$/;"	f	class:nlohmann::detail::serializer
dump_float	ext/headers/json.hpp	/^    void dump_float(number_float_t x, std::false_type \/*is_ieee_single_or_double*\/)$/;"	f	class:nlohmann::detail::serializer
dump_float	ext/headers/json.hpp	/^    void dump_float(number_float_t x, std::true_type \/*is_ieee_single_or_double*\/)$/;"	f	class:nlohmann::detail::serializer
dump_integer	ext/headers/json.hpp	/^    void dump_integer(NumberType x)$/;"	f	class:nlohmann::detail::serializer
dynamic_format_specs	ext/fmt/include/fmt/format.h	/^struct dynamic_format_specs : basic_format_specs<Char> {$/;"	s	namespace:internal
dynamic_formatter	ext/fmt/include/fmt/format.h	/^class dynamic_formatter {$/;"	c
dynamic_specs_handler	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR dynamic_specs_handler($/;"	f	class:internal::dynamic_specs_handler
dynamic_specs_handler	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR dynamic_specs_handler(const dynamic_specs_handler &other)$/;"	f	class:internal::dynamic_specs_handler
dynamic_specs_handler	ext/fmt/include/fmt/format.h	/^class dynamic_specs_handler :$/;"	c	namespace:internal
e	ext/fmt/include/fmt/format-inl.h	/^  int e;$/;"	m	class:internal::fp
e	ext/headers/json.hpp	/^    constexpr diyfp(uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp
e	ext/headers/json.hpp	/^    int e = 0;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp
e	ext/headers/json.hpp	/^    int e;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power
eachgroupindent	ext/headers/args.hxx	/^                unsigned int eachgroupindent = 2;$/;"	m	struct:argstest::ArgumentParser::HelpParams
emplace	ext/headers/json.hpp	/^    std::pair<iterator, bool> emplace(Args&& ... args)$/;"	f	class:nlohmann::basic_json
emplace_back	ext/headers/json.hpp	/^    void emplace_back(Args&& ... args)$/;"	f	class:nlohmann::basic_json
empty_str	ext/headers/json.hpp	/^    const std::string empty_str = "";$/;"	m	class:nlohmann::detail::iteration_proxy_value
enable_hbm_dual_cmd	src/configuration.h	/^    bool enable_hbm_dual_cmd;$/;"	m	class:dramsim3::Config
enable_self_refresh	src/configuration.h	/^    bool enable_self_refresh;$/;"	m	class:dramsim3::Config
end	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR iterator end() const { return data_ + size_; }$/;"	f	class:basic_string_view
end	ext/fmt/include/fmt/format.h	/^  It end;$/;"	m	struct:arg_join
end	ext/headers/json.hpp	/^        : input_adapter(std::begin(array), std::end(array)) {}$/;"	f	class:nlohmann::detail::input_adapter::std
end_	ext/fmt/include/fmt/format.h	/^  const Char *end_;$/;"	m	class:internal::null_terminating_iterator
end_array	ext/headers/json.hpp	/^        end_array,        \/\/\/< the character for array end `]`$/;"	m	class:nlohmann::detail::lexer::token_type
end_array	ext/headers/json.hpp	/^    bool end_array()$/;"	f	class:nlohmann::detail::json_sax_acceptor
end_array	ext/headers/json.hpp	/^    bool end_array()$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
end_array	ext/headers/json.hpp	/^    bool end_array()$/;"	f	class:nlohmann::detail::json_sax_dom_parser
end_object	ext/headers/json.hpp	/^        end_object,       \/\/\/< the character for object end `}`$/;"	m	class:nlohmann::detail::lexer::token_type
end_object	ext/headers/json.hpp	/^    bool end_object()$/;"	f	class:nlohmann::detail::json_sax_acceptor
end_object	ext/headers/json.hpp	/^    bool end_object()$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
end_object	ext/headers/json.hpp	/^    bool end_object()$/;"	f	class:nlohmann::detail::json_sax_dom_parser
end_of_input	ext/headers/json.hpp	/^        end_of_input,     \/\/\/< indicating the end of the input buffer$/;"	m	class:nlohmann::detail::lexer::token_type
end_precision	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void end_precision() {$/;"	f	class:internal::specs_checker
end_precision	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void end_precision() {}$/;"	f	class:internal::specs_setter
end_value	ext/headers/json.hpp	/^    static constexpr difference_type end_value = begin_value + 1;$/;"	m	class:nlohmann::detail::primitive_iterator_t
entry	ext/fmt/include/fmt/core.h	/^  struct entry {$/;"	s	class:internal::arg_map
epilog	ext/headers/args.hxx	/^            std::string epilog;$/;"	m	class:argstest::ArgumentParser
epoch_counters_	src/simple_stats.h	/^    std::unordered_map<std::string, uint64_t> epoch_counters_;$/;"	m	class:dramsim3::SimpleStats
epoch_histo_bins_	src/simple_stats.h	/^    VecStat epoch_histo_bins_;$/;"	m	class:dramsim3::SimpleStats
epoch_histo_counts_	src/simple_stats.h	/^    std::unordered_map<std::string, HistoCount> epoch_histo_counts_;$/;"	m	class:dramsim3::SimpleStats
epoch_max_temp_file_csv_	src/thermal.h	/^    std::ofstream epoch_max_temp_file_csv_;$/;"	m	class:dramsim3::ThermalCalculator
epoch_period	src/configuration.h	/^    int epoch_period;$/;"	m	class:dramsim3::Config
epoch_temperature_file_csv_	src/thermal.h	/^    std::ofstream epoch_temperature_file_csv_;$/;"	m	class:dramsim3::ThermalCalculator
epoch_vec_counters_	src/simple_stats.h	/^    VecStat epoch_vec_counters_;$/;"	m	class:dramsim3::SimpleStats
erase	ext/headers/json.hpp	/^    IteratorType erase(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::basic_json
erase	ext/headers/json.hpp	/^    IteratorType erase(IteratorType pos)$/;"	f	class:nlohmann::basic_json
erase	ext/headers/json.hpp	/^    size_type erase(const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json
erase	ext/headers/json.hpp	/^    void erase(const size_type idx)$/;"	f	class:nlohmann::basic_json
error	ext/headers/args.hxx	/^            Error error;$/;"	m	class:argstest::Base
error_code	ext/fmt/include/fmt/format.h	/^  int error_code() const { return error_code_; }$/;"	f	class:system_error
error_code_	ext/fmt/include/fmt/format.h	/^  int error_code_;$/;"	m	class:system_error
error_handler	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR ErrorHandler error_handler() const { return *this; }$/;"	f	class:basic_parse_context
error_handler	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR error_handler() {}$/;"	f	struct:internal::error_handler
error_handler	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR error_handler(const error_handler &) {}$/;"	f	struct:internal::error_handler
error_handler	ext/fmt/include/fmt/core.h	/^  internal::error_handler error_handler() {$/;"	f	class:internal::context_base
error_handler	ext/fmt/include/fmt/core.h	/^struct error_handler {$/;"	s	namespace:internal
error_handler	ext/headers/json.hpp	/^    const error_handler_t error_handler;$/;"	m	class:nlohmann::detail::serializer
error_handler_t	ext/headers/json.hpp	/^enum class error_handler_t$/;"	c	namespace:nlohmann::detail
error_message	ext/headers/json.hpp	/^    const char* error_message = "";$/;"	m	class:nlohmann::detail::lexer
errored	ext/headers/json.hpp	/^    bool errored = false;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
errored	ext/headers/json.hpp	/^    bool errored = false;$/;"	m	class:nlohmann::detail::json_sax_dom_parser
escape	ext/headers/json.hpp	/^    static std::string escape(std::string s)$/;"	f	class:nlohmann::json_pointer
exception	ext/headers/json.hpp	/^    exception(int id_, const char* what_arg) : id(id_), m(what_arg) {}$/;"	f	class:nlohmann::detail::exception
exception	ext/headers/json.hpp	/^class exception : public std::exception$/;"	c	namespace:nlohmann::detail
exception_message	ext/headers/json.hpp	/^    std::string exception_message(const input_format_t format,$/;"	f	class:nlohmann::detail::binary_reader
exception_message	ext/headers/json.hpp	/^    std::string exception_message(const token_type expected, const std::string& context)$/;"	f	class:nlohmann::detail::parser
exit_time	src/hmc.h	/^    uint64_t exit_time;$/;"	m	class:dramsim3::HMCRequest
exit_time	src/hmc.h	/^    uint64_t exit_time;$/;"	m	class:dramsim3::HMCResponse
external_constructor	ext/headers/json.hpp	/^struct external_constructor<value_t::array>$/;"	s	namespace:nlohmann::detail
external_constructor	ext/headers/json.hpp	/^struct external_constructor<value_t::boolean>$/;"	s	namespace:nlohmann::detail
external_constructor	ext/headers/json.hpp	/^struct external_constructor<value_t::number_float>$/;"	s	namespace:nlohmann::detail
external_constructor	ext/headers/json.hpp	/^struct external_constructor<value_t::number_integer>$/;"	s	namespace:nlohmann::detail
external_constructor	ext/headers/json.hpp	/^struct external_constructor<value_t::number_unsigned>$/;"	s	namespace:nlohmann::detail
external_constructor	ext/headers/json.hpp	/^struct external_constructor<value_t::object>$/;"	s	namespace:nlohmann::detail
external_constructor	ext/headers/json.hpp	/^struct external_constructor<value_t::string>$/;"	s	namespace:nlohmann::detail
extraError	ext/headers/args.hxx	/^            const bool extraError;$/;"	m	class:argstest::FlagBase
extract_epoch_data	scripts/plot_stats.py	/^def extract_epoch_data(json_data, label, merge_channel=True):$/;"	f
extract_histo_data	scripts/plot_stats.py	/^def extract_histo_data(data, label):$/;"	f
f	ext/fmt/include/fmt/format-inl.h	/^  significand_type f;$/;"	m	class:internal::fp
f	ext/fmt/include/fmt/format.h	/^    F f;$/;"	m	struct:basic_writer::padded_int_writer
f	ext/headers/json.hpp	/^    uint64_t f = 0;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp
f	ext/headers/json.hpp	/^    uint64_t f;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power
false_type	ext/headers/catch.hpp	/^            static auto test(...)->std::false_type;$/;"	m	class:Catch::Detail::IsStreamInsertable::std
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
file	ext/headers/catch.hpp	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo
file_input_adapter	ext/headers/json.hpp	/^class file_input_adapter : public input_adapter_protocol$/;"	c	namespace:nlohmann::detail
file_name	scripts/trace_gen.py	/^            file_name = 'mase_' + file_name$/;"	v
file_name	scripts/trace_gen.py	/^        file_name = '{}_{}_i{}_n{}_rw{}.trace'.format($/;"	v
files	scripts/trace_gen.py	/^    files = {}$/;"	v
fill	ext/fmt/include/fmt/format-inl.h	/^struct fill {$/;"	s	namespace:internal
fill	ext/fmt/include/fmt/format.h	/^    char_type fill;$/;"	m	struct:basic_writer::padded_int_writer
fill	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR wchar_t fill() const { return fill_; }$/;"	f	struct:align_spec
fill_	ext/fmt/include/fmt/format.h	/^  wchar_t fill_;$/;"	m	struct:align_spec
fill_buffer	ext/headers/json.hpp	/^    static void fill_buffer(const WideStringType& str, size_t& current_wchar, std::array<std::char_traits<char>::int_type, 4>& utf8_bytes, size_t& utf8_bytes_index, size_t& utf8_bytes_filled)$/;"	f	struct:nlohmann::detail::wide_string_input_helper
fill_buffer	ext/headers/json.hpp	/^    void fill_buffer()$/;"	f	class:nlohmann::detail::wide_string_input_adapter
final_temperature_file_csv_	src/thermal.h	/^    std::ofstream final_temperature_file_csv_;$/;"	m	class:dramsim3::ThermalCalculator
find	ext/fmt/include/fmt/core.h	/^  basic_format_arg<Context> find(basic_string_view<char_type> name) const {$/;"	f	class:internal::arg_map
find	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR bool find(Ptr first, Ptr last, T value, Ptr &out) {$/;"	f	namespace:internal
find	ext/fmt/include/fmt/format.h	/^inline bool find<false, char>($/;"	f	namespace:internal
find	ext/headers/json.hpp	/^    const_iterator find(KeyT&& key) const$/;"	f	class:nlohmann::basic_json
find	ext/headers/json.hpp	/^    iterator find(KeyT&& key)$/;"	f	class:nlohmann::basic_json
find_chars_or_comment	ext/headers/INIReader.h	/^inline static char* find_chars_or_comment(const char* s, const char* chars)$/;"	f
find_largest_pow10	ext/headers/json.hpp	/^inline int find_largest_pow10(const uint32_t n, uint32_t& pow10)$/;"	f	namespace:nlohmann::detail::dtoa_impl
fixed	ext/fmt/include/fmt/format-inl.h	/^  bool fixed;$/;"	m	struct:internal::gen_digits_params
flagindent	ext/headers/args.hxx	/^                unsigned int flagindent = 6;$/;"	m	struct:argstest::ArgumentParser::HelpParams
flags	ext/fmt/include/fmt/format.h	/^  uint_least8_t flags;$/;"	m	struct:core_format_specs
flatten	ext/headers/json.hpp	/^    basic_json flatten() const$/;"	f	class:nlohmann::basic_json
flatten	ext/headers/json.hpp	/^    static void flatten(const std::string& reference_string,$/;"	f	class:nlohmann::json_pointer
flits	src/hmc.h	/^    int flits;$/;"	m	class:dramsim3::HMCRequest
flits	src/hmc.h	/^    int flits;$/;"	m	class:dramsim3::HMCResponse
float_spec_handler	ext/fmt/include/fmt/format.h	/^  explicit float_spec_handler(char t) : type(t), upper(false) {}$/;"	f	struct:float_spec_handler
float_spec_handler	ext/fmt/include/fmt/format.h	/^struct float_spec_handler {$/;"	s
float_type_checker	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR explicit float_type_checker(ErrorHandler eh)$/;"	f	class:internal::float_type_checker
float_type_checker	ext/fmt/include/fmt/format.h	/^class float_type_checker : private ErrorHandler {$/;"	c	namespace:internal
fmt	ext/fmt/include/fmt/format.h	3690;"	d
format	ext/fmt/include/fmt/core.h	/^    void format(Context &ctx) const { custom_.format(custom_.value, ctx); }$/;"	f	class:basic_format_arg::handle
format	ext/fmt/include/fmt/core.h	/^  void (*format)(const void *arg, Context &ctx);$/;"	m	struct:internal::custom_value
format_arg	ext/fmt/include/fmt/core.h	/^  typedef basic_format_arg<Context> format_arg;$/;"	t	class:internal::context_base
format_arg	ext/fmt/include/fmt/core.h	/^  typedef typename base::format_arg format_arg;$/;"	t	class:basic_format_context
format_arg_store	ext/fmt/include/fmt/core.h	/^class format_arg_store {$/;"	c
format_args_t	ext/fmt/include/fmt/format.h	/^struct format_args_t {$/;"	s
format_buffer	ext/headers/json.hpp	/^inline char* format_buffer(char* buf, int len, int decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl
format_context	ext/fmt/include/fmt/core.h	/^typedef buffer_context<char>::type format_context;$/;"	t
format_context_t	ext/fmt/include/fmt/format.h	/^struct format_context_t { typedef basic_format_context<OutputIt, Char> type; };$/;"	s
format_custom_arg	ext/fmt/include/fmt/core.h	/^  static void format_custom_arg(const void *arg, Context &ctx) {$/;"	f	class:internal::value
format_decimal	ext/fmt/include/fmt/format.h	/^  char *format_decimal(unsigned long long value) {$/;"	f	class:format_int
format_decimal	ext/fmt/include/fmt/format.h	/^inline Char *format_decimal(Char *buffer, UInt value, unsigned num_digits,$/;"	f	namespace:internal
format_decimal	ext/fmt/include/fmt/format.h	/^inline It format_decimal(It out, UInt value, unsigned num_digits) {$/;"	f	namespace:internal
format_decimal	ext/fmt/include/fmt/format.h	/^inline Iterator format_decimal($/;"	f	namespace:internal
format_decimal	ext/fmt/include/fmt/format.h	/^inline void format_decimal(char *&buffer, T value) {$/;"	f
format_error	ext/fmt/include/fmt/format.h	/^  explicit format_error(const char *message)$/;"	f	class:format_error
format_error	ext/fmt/include/fmt/format.h	/^  explicit format_error(const std::string &message)$/;"	f	class:format_error
format_error	ext/fmt/include/fmt/format.h	/^class format_error : public std::runtime_error {$/;"	c
format_float	ext/fmt/include/fmt/format-inl.h	/^int char_traits<char>::format_float($/;"	f	class:internal::char_traits
format_float	ext/fmt/include/fmt/format-inl.h	/^int char_traits<wchar_t>::format_float($/;"	f	class:internal::char_traits
format_handler	ext/fmt/include/fmt/format.h	/^  format_handler(range r, basic_string_view<Char> str,$/;"	f	struct:format_handler
format_handler	ext/fmt/include/fmt/format.h	/^struct format_handler : internal::error_handler {$/;"	s
format_int	ext/fmt/include/fmt/format.h	/^  explicit format_int(int value) { format_signed(value); }$/;"	f	class:format_int
format_int	ext/fmt/include/fmt/format.h	/^  explicit format_int(long long value) { format_signed(value); }$/;"	f	class:format_int
format_int	ext/fmt/include/fmt/format.h	/^  explicit format_int(long value) { format_signed(value); }$/;"	f	class:format_int
format_int	ext/fmt/include/fmt/format.h	/^  explicit format_int(unsigned long long value) : str_(format_decimal(value)) {}$/;"	f	class:format_int
format_int	ext/fmt/include/fmt/format.h	/^  explicit format_int(unsigned long value) : str_(format_decimal(value)) {}$/;"	f	class:format_int
format_int	ext/fmt/include/fmt/format.h	/^  explicit format_int(unsigned value) : str_(format_decimal(value)) {}$/;"	f	class:format_int
format_int	ext/fmt/include/fmt/format.h	/^class format_int {$/;"	c
format_signed	ext/fmt/include/fmt/format.h	/^  void format_signed(long long value) {$/;"	f	class:format_int
format_specs	ext/fmt/include/fmt/format.h	/^  typedef basic_format_specs<char_type> format_specs;$/;"	t	class:basic_writer
format_specs	ext/fmt/include/fmt/format.h	/^  typedef basic_format_specs<char_type> format_specs;$/;"	t	class:internal::arg_formatter_base
format_specs	ext/fmt/include/fmt/format.h	/^  typedef typename base::format_specs format_specs;$/;"	t	class:arg_formatter
format_specs	ext/fmt/include/fmt/format.h	/^typedef basic_format_specs<char> format_specs;$/;"	t
format_str_	ext/fmt/include/fmt/core.h	/^  basic_string_view<Char> format_str_;$/;"	m	class:basic_parse_context
format_string_checker	ext/fmt/include/fmt/format.h	/^  explicit FMT_CONSTEXPR format_string_checker($/;"	f	class:internal::format_string_checker
format_string_checker	ext/fmt/include/fmt/format.h	/^class format_string_checker {$/;"	c	namespace:internal
format_to	ext/fmt/include/fmt/format.h	/^    format_to(OutputIt out, const S &format_str, const Args &... args) {$/;"	f
format_to	ext/fmt/include/fmt/format.h	/^inline typename buffer_context<Char>::type::iterator format_to($/;"	f
format_to_n	ext/fmt/include/fmt/format.h	/^    format_to_n(OutputIt out, std::size_t n, const S &format_str,$/;"	f
format_to_n_args	ext/fmt/include/fmt/format.h	/^struct format_to_n_args {$/;"	s
format_to_n_context	ext/fmt/include/fmt/format.h	/^struct format_to_n_context :$/;"	s
format_to_n_result	ext/fmt/include/fmt/format.h	/^struct format_to_n_result {$/;"	s
format_type	ext/fmt/include/fmt/format.h	/^struct format_type :$/;"	s	namespace:internal
format_uint	ext/fmt/include/fmt/format.h	/^inline Char *format_uint(Char *buffer, UInt value, unsigned num_digits,$/;"	f	namespace:internal
format_uint	ext/fmt/include/fmt/format.h	/^inline It format_uint(It out, UInt value, unsigned num_digits,$/;"	f	namespace:internal
formats	scripts/trace_gen.py	/^        formats = [args.format]$/;"	v
formats	scripts/trace_gen.py	/^    formats = ['dramsim2', 'dramsim3', 'ramulator', 'usimm', 'drsim']$/;"	v
formatted_size	ext/fmt/include/fmt/format.h	/^inline std::size_t formatted_size(string_view format_str,$/;"	f
formatter	ext/fmt/include/fmt/core.h	/^struct formatter {$/;"	s
formatter	ext/fmt/include/fmt/format.h	/^    arg_formatter_base &formatter;$/;"	m	struct:internal::arg_formatter_base::char_spec_handler
formatter	ext/fmt/include/fmt/format.h	/^    arg_formatter_base &formatter;$/;"	m	struct:internal::arg_formatter_base::cstring_spec_handler
formatter	ext/fmt/include/fmt/format.h	/^struct formatter<$/;"	s
formatter	ext/fmt/include/fmt/format.h	/^struct formatter<arg_join<It, Char>, Char>:$/;"	s
formatter_class	scripts/trace_gen.py	/^        formatter_class=argparse.ArgumentDefaultsHelpFormatter)$/;"	v
formatter_type	ext/fmt/include/fmt/core.h	/^  struct formatter_type { typedef formatter<T, char_type> type; };$/;"	s	class:basic_format_context
four_aw_	src/channel_state.h	/^    std::vector<std::vector<uint64_t> > four_aw_;$/;"	m	class:dramsim3::ChannelState
fp	ext/fmt/include/fmt/format-inl.h	/^  explicit fp(Double d) {$/;"	f	class:internal::fp
fp	ext/fmt/include/fmt/format-inl.h	/^  fp(): f(0), e(0) {}$/;"	f	class:internal::fp
fp	ext/fmt/include/fmt/format-inl.h	/^  fp(uint64_t f, int e): f(f), e(e) {}$/;"	f	class:internal::fp
fp	ext/fmt/include/fmt/format-inl.h	/^class fp {$/;"	c	namespace:internal
fp	scripts/trace_gen.py	/^        fp = open(name, 'w')$/;"	v
fputil	ext/fmt/include/fmt/format.h	/^typedef std::numeric_limits<internal::dummy_int> fputil;$/;"	t	namespace:internal
from_bson	ext/headers/json.hpp	/^    static basic_json from_bson(A1 && a1, A2 && a2,$/;"	f	class:nlohmann::basic_json
from_bson	ext/headers/json.hpp	/^    static basic_json from_bson(detail::input_adapter&& i,$/;"	f	class:nlohmann::basic_json
from_cbor	ext/headers/json.hpp	/^    static basic_json from_cbor(A1 && a1, A2 && a2,$/;"	f	class:nlohmann::basic_json
from_cbor	ext/headers/json.hpp	/^    static basic_json from_cbor(detail::input_adapter&& i,$/;"	f	class:nlohmann::basic_json
from_json	ext/headers/json.hpp	/^constexpr const auto& from_json = detail::static_const<detail::from_json_fn>::value;$/;"	m	namespace:nlohmann::__anon1
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, ConstructibleObjectType& obj)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, ConstructibleStringType& s)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, EnumType& e)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, std::forward_list<T, Allocator>& l)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, std::map<Key, Value, Compare, Allocator>& m)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, std::pair<A1, A2>& p)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, std::tuple<Args...>& t)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, std::unordered_map<Key, Value, Hash, KeyEqual, Allocator>& m)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, std::valarray<T>& l)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::boolean_t& b)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_float_t& val)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_integer_t& val)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_unsigned_t& val)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s)$/;"	f	namespace:nlohmann::detail
from_json	ext/headers/json.hpp	/^void from_json(const BasicJsonType& j, typename std::nullptr_t& n)$/;"	f	namespace:nlohmann::detail
from_json_array_impl	ext/headers/json.hpp	/^void from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr,$/;"	f	namespace:nlohmann::detail
from_json_array_impl	ext/headers/json.hpp	/^void from_json_array_impl(const BasicJsonType& j, typename BasicJsonType::array_t& arr, priority_tag<3> \/*unused*\/)$/;"	f	namespace:nlohmann::detail
from_json_fn	ext/headers/json.hpp	/^struct from_json_fn$/;"	s	namespace:nlohmann::detail
from_json_tuple_impl	ext/headers/json.hpp	/^void from_json_tuple_impl(const BasicJsonType& j, Tuple& t, index_sequence<Idx...> \/*unused*\/)$/;"	f	namespace:nlohmann::detail
from_msgpack	ext/headers/json.hpp	/^    static basic_json from_msgpack(A1 && a1, A2 && a2,$/;"	f	class:nlohmann::basic_json
from_msgpack	ext/headers/json.hpp	/^    static basic_json from_msgpack(detail::input_adapter&& i,$/;"	f	class:nlohmann::basic_json
from_ubjson	ext/headers/json.hpp	/^    static basic_json from_ubjson(A1 && a1, A2 && a2,$/;"	f	class:nlohmann::basic_json
from_ubjson	ext/headers/json.hpp	/^    static basic_json from_ubjson(detail::input_adapter&& i,$/;"	f	class:nlohmann::basic_json
front	ext/headers/json.hpp	/^    const_reference front() const$/;"	f	class:nlohmann::basic_json
front	ext/headers/json.hpp	/^    reference front()$/;"	f	class:nlohmann::basic_json
function	ext/fmt/include/fmt/format.h	/^struct function {$/;"	s	namespace:internal
g	scripts/trace_gen.py	/^    g = Generator(stream_type, args.interarrival, args.ratio, args.gb)$/;"	v
gen	scripts/trace_gen.py	/^    def gen(self):$/;"	m	class:Generator
gen	src/cpu.h	/^    std::mt19937_64 gen;$/;"	m	class:dramsim3::RandomCPU
gen	src/cpu.h	/^    std::mt19937_64 gen;$/;"	m	class:dramsim3::StreamCPU
gen_digits_params	ext/fmt/include/fmt/format-inl.h	/^struct gen_digits_params {$/;"	s	namespace:internal
generate_drampower_trace	scripts/validation.py	/^    def generate_drampower_trace(self):$/;"	m	class:DRAMValidation
generate_modelsim_script	scripts/validation.py	/^    def generate_modelsim_script(self, script_name=""):$/;"	m	class:DDR3Validation
generate_modelsim_script	scripts/validation.py	/^    def generate_modelsim_script(self, script_name=""):$/;"	m	class:DDR4Validation
generate_modelsim_script	scripts/validation.py	/^    def generate_modelsim_script(self, script_name=""):$/;"	m	class:DRAMValidation
generate_modelsim_script	scripts/validation.py	/^    def generate_modelsim_script(self, script_name=""):$/;"	m	class:LPDDRValidtion
generate_verilog_bench	scripts/validation.py	/^    def generate_verilog_bench(self, bench_name=""):$/;"	m	class:DDR3Validation
generate_verilog_bench	scripts/validation.py	/^    def generate_verilog_bench(self, bench_name=""):$/;"	m	class:DDR4Validation
generate_verilog_bench	scripts/validation.py	/^    def generate_verilog_bench(self, bench_name=""):$/;"	m	class:DRAMValidation
generate_verilog_bench	scripts/validation.py	/^    def generate_verilog_bench(self, bench_name=""):$/;"	m	class:LPDDRValidtion
get	ext/fmt/include/fmt/format-inl.h	/^Locale locale_ref::get() const {$/;"	f	class:internal::locale_ref
get	ext/headers/json.hpp	/^    BasicJsonType get() const$/;"	f	class:nlohmann::basic_json
get	ext/headers/json.hpp	/^    basic_json get() const$/;"	f	class:nlohmann::basic_json
get	ext/headers/json.hpp	/^    int get()$/;"	f	class:nlohmann::detail::binary_reader
get	ext/headers/json.hpp	/^    std::char_traits<char>::int_type get()$/;"	f	class:nlohmann::detail::lexer
getConfig	src/controller.cc	/^const Config* Controller::getConfig(){$/;"	f	class:dramsim3::Controller
getConfig	src/dram_system.cc	/^const Config* BaseDRAMSystem::getConfig(){$/;"	f	class:dramsim3::BaseDRAMSystem
getConfig	src/memory_system.cc	/^const Config* MemorySystem::getConfig(){$/;"	f	class:dramsim3::MemorySystem
getRandomAddress	src/cpu.cc	/^AddressPair RandomCPU::getRandomAddress(){$/;"	f	class:dramsim3::RandomCPU
get_allocator	ext/fmt/include/fmt/format.h	/^  Allocator get_allocator() const { return *this; }$/;"	f	class:basic_memory_buffer
get_allocator	ext/headers/json.hpp	/^    static allocator_type get_allocator()$/;"	f	class:nlohmann::basic_json
get_and_create	ext/headers/json.hpp	/^    BasicJsonType& get_and_create(BasicJsonType& j) const$/;"	f	class:nlohmann::json_pointer
get_arg	ext/fmt/include/fmt/core.h	/^  format_arg get_arg(unsigned arg_id) { return this->do_get_arg(arg_id); }$/;"	f	class:basic_format_context
get_arg	ext/fmt/include/fmt/core.h	/^  format_arg get_arg(unsigned arg_id) {$/;"	f	class:internal::context_base
get_arg	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR basic_format_arg<Context> get_arg(Id arg_id) {$/;"	f	class:internal::specs_handler
get_arg	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR basic_format_arg<Context> get_arg(auto_id) {$/;"	f	class:internal::specs_handler
get_arg	ext/fmt/include/fmt/format.h	/^  basic_format_context<Range, Char>::get_arg($/;"	f	class:basic_format_context
get_arithmetic_value	ext/headers/json.hpp	/^void get_arithmetic_value(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:nlohmann::detail
get_bson_cstr	ext/headers/json.hpp	/^    bool get_bson_cstr(string_t& result)$/;"	f	class:nlohmann::detail::binary_reader
get_bson_string	ext/headers/json.hpp	/^    bool get_bson_string(const NumberType len, string_t& result)$/;"	f	class:nlohmann::detail::binary_reader
get_cached_power	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC fp get_cached_power(int min_exponent, int &pow10_exponent) {$/;"	f	namespace:internal
get_cached_power_for_binary_exponent	ext/headers/json.hpp	/^inline cached_power get_cached_power_for_binary_exponent(int e)$/;"	f	namespace:nlohmann::detail::dtoa_impl
get_cbor_array	ext/headers/json.hpp	/^    bool get_cbor_array(const std::size_t len)$/;"	f	class:nlohmann::detail::binary_reader
get_cbor_float_prefix	ext/headers/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(double \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer
get_cbor_float_prefix	ext/headers/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(float \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer
get_cbor_object	ext/headers/json.hpp	/^    bool get_cbor_object(const std::size_t len)$/;"	f	class:nlohmann::detail::binary_reader
get_cbor_string	ext/headers/json.hpp	/^    bool get_cbor_string(string_t& result)$/;"	f	class:nlohmann::detail::binary_reader
get_checked	ext/headers/json.hpp	/^    BasicJsonType& get_checked(BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer
get_checked	ext/headers/json.hpp	/^    const BasicJsonType& get_checked(const BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer
get_codepoint	ext/headers/json.hpp	/^    int get_codepoint()$/;"	f	class:nlohmann::detail::lexer
get_container	ext/fmt/include/fmt/core.h	/^inline Container &get_container(std::back_insert_iterator<Container> it) {$/;"	f	namespace:internal
get_ddr3_str	scripts/validation.py	/^    def get_ddr3_str(self):$/;"	m	class:Command
get_ddr4_str	scripts/validation.py	/^    def get_ddr4_str(self):$/;"	m	class:Command
get_ddr_speed	scripts/parse_config.py	/^def get_ddr_speed(config_file):$/;"	f
get_density	scripts/parse_config.py	/^def get_density(config_file):$/;"	f
get_dict	scripts/parse_config.py	/^def get_dict(config_file):$/;"	f
get_drampower_str	scripts/validation.py	/^    def get_drampower_str(self, config):$/;"	m	class:Command
get_ignore_noop	ext/headers/json.hpp	/^    int get_ignore_noop()$/;"	f	class:nlohmann::detail::binary_reader
get_impl	ext/headers/json.hpp	/^    boolean_t get_impl(boolean_t* \/*unused*\/) const$/;"	f	class:nlohmann::basic_json
get_maxT	src/thermal_solver.c	/^double get_maxT(double *T, int Tsize) {$/;"	f
get_msgpack_array	ext/headers/json.hpp	/^    bool get_msgpack_array(const std::size_t len)$/;"	f	class:nlohmann::detail::binary_reader
get_msgpack_float_prefix	ext/headers/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(double \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer
get_msgpack_float_prefix	ext/headers/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(float \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer
get_msgpack_object	ext/headers/json.hpp	/^    bool get_msgpack_object(const std::size_t len)$/;"	f	class:nlohmann::detail::binary_reader
get_msgpack_string	ext/headers/json.hpp	/^    bool get_msgpack_string(string_t& result)$/;"	f	class:nlohmann::detail::binary_reader
get_next_	src/cpu.h	/^    bool get_next_ = true;$/;"	m	class:dramsim3::RandomCPU
get_next_	src/cpu.h	/^    bool get_next_ = true;$/;"	m	class:dramsim3::TraceBasedCPU
get_number	ext/headers/json.hpp	/^    bool get_number(const input_format_t format, NumberType& result)$/;"	f	class:nlohmann::detail::binary_reader
get_page_size	scripts/parse_config.py	/^def get_page_size(config_file):$/;"	f
get_postfix_str	scripts/validation.py	/^    def get_postfix_str(self):$/;"	m	class:DRAMValidation
get_prefix	ext/fmt/include/fmt/format.h	/^    string_view get_prefix() const { return string_view(prefix, prefix_size); }$/;"	f	struct:basic_writer::int_writer
get_prefix_str	scripts/validation.py	/^    def get_prefix_str(self):$/;"	m	class:DDR3Validation
get_prefix_str	scripts/validation.py	/^    def get_prefix_str(self):$/;"	m	class:DDR4Validation
get_prefix_str	scripts/validation.py	/^    def get_prefix_str(self):$/;"	m	class:DRAMValidation
get_prefix_str	scripts/validation.py	/^    def get_prefix_str(self):$/;"	m	class:LPDDRValidtion
get_protocol	scripts/parse_config.py	/^def get_protocol(config_file):$/;"	f
get_ptr	ext/headers/json.hpp	/^    auto get() noexcept -> decltype(std::declval<basic_json_t&>().template get_ptr<PointerType>())$/;"	f	class:nlohmann::basic_json
get_ptr	ext/headers/json.hpp	/^    constexpr auto get() const noexcept -> decltype(std::declval<const basic_json_t&>().template get_ptr<PointerType>())$/;"	f	class:nlohmann::basic_json
get_rank_size_mb	scripts/parse_config.py	/^def get_rank_size_mb(config_file):$/;"	f
get_ref	ext/headers/json.hpp	/^    ReferenceType get_ref() const$/;"	f	class:nlohmann::basic_json
get_ref	ext/headers/json.hpp	/^    ReferenceType get_ref()$/;"	f	class:nlohmann::basic_json
get_ref_impl	ext/headers/json.hpp	/^    static ReferenceType get_ref_impl(ThisType& obj)$/;"	f	class:nlohmann::basic_json
get_string	ext/headers/json.hpp	/^    bool get_string(const input_format_t format,$/;"	f	class:nlohmann::detail::binary_reader
get_string	ext/headers/json.hpp	/^    string_t& get_string()$/;"	f	class:nlohmann::detail::lexer
get_string	scripts/trace_gen.py	/^def get_string(op, addr, clk, trace_format, interarrival):$/;"	f
get_token	ext/headers/json.hpp	/^    token_type get_token()$/;"	f	class:nlohmann::detail::parser
get_token_string	ext/headers/json.hpp	/^    std::string get_token_string() const$/;"	f	class:nlohmann::detail::binary_reader
get_token_string	ext/headers/json.hpp	/^    std::string get_token_string() const$/;"	f	class:nlohmann::detail::lexer
get_type	ext/fmt/include/fmt/core.h	/^struct get_type {$/;"	s	namespace:internal
get_types	ext/fmt/include/fmt/core.h	/^FMT_CONSTEXPR11 unsigned long long get_types() { return 0; }$/;"	f	namespace:internal
get_types	ext/fmt/include/fmt/core.h	/^FMT_CONSTEXPR11 unsigned long long get_types() {$/;"	f	namespace:internal
get_ubjson_array	ext/headers/json.hpp	/^    bool get_ubjson_array()$/;"	f	class:nlohmann::detail::binary_reader
get_ubjson_float_prefix	ext/headers/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(double \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer
get_ubjson_float_prefix	ext/headers/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(float \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer
get_ubjson_object	ext/headers/json.hpp	/^    bool get_ubjson_object()$/;"	f	class:nlohmann::detail::binary_reader
get_ubjson_size_type	ext/headers/json.hpp	/^    bool get_ubjson_size_type(std::pair<std::size_t, int>& result)$/;"	f	class:nlohmann::detail::binary_reader
get_ubjson_size_value	ext/headers/json.hpp	/^    bool get_ubjson_size_value(std::size_t& result)$/;"	f	class:nlohmann::detail::binary_reader
get_ubjson_string	ext/headers/json.hpp	/^    bool get_ubjson_string(string_t& result, const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader
get_ubjson_value	ext/headers/json.hpp	/^    bool get_ubjson_value(const int prefix)$/;"	f	class:nlohmann::detail::binary_reader
get_unchecked	ext/headers/json.hpp	/^    BasicJsonType& get_unchecked(BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer
get_unchecked	ext/headers/json.hpp	/^    const BasicJsonType& get_unchecked(const BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer
get_val	scripts/parse_config.py	/^def get_val(config, sec, opt):$/;"	f
get_val_from_file	scripts/parse_config.py	/^def get_val_from_file(config_file, sec, opt):$/;"	f
grisu2	ext/headers/json.hpp	/^inline void grisu2(char* buf, int& len, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl
grisu2	ext/headers/json.hpp	/^void grisu2(char* buf, int& len, int& decimal_exponent, FloatType value)$/;"	f	namespace:nlohmann::detail::dtoa_impl
grisu2_digit_gen	ext/headers/json.hpp	/^inline void grisu2_digit_gen(char* buffer, int& length, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl
grisu2_format	ext/fmt/include/fmt/format-inl.h	/^    grisu2_format(Double value, buffer &buf, core_format_specs specs) {$/;"	f	namespace:internal
grisu2_format	ext/fmt/include/fmt/format.h	/^  grisu2_format(Double, buffer &, core_format_specs) { return false; }$/;"	f	namespace:internal
grisu2_gen_digits	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC bool grisu2_gen_digits($/;"	f	namespace:internal
grisu2_prettify	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void grisu2_prettify(const gen_digits_params &params,$/;"	f	namespace:internal
grisu2_round	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC bool grisu2_round($/;"	f	namespace:internal
grisu2_round	ext/headers/json.hpp	/^inline void grisu2_round(char* buf, int len, uint64_t dist, uint64_t delta,$/;"	f	namespace:nlohmann::detail::dtoa_impl
grow	ext/fmt/include/fmt/format.h	/^void basic_memory_buffer<T, SIZE, Allocator>::grow(std::size_t size) {$/;"	f	class:basic_memory_buffer
gutter	ext/headers/args.hxx	/^                unsigned int gutter = 1;$/;"	m	struct:argstest::ArgumentParser::HelpParams
handle	ext/fmt/include/fmt/core.h	/^    explicit handle(internal::custom_value<Context> custom): custom_(custom) {}$/;"	f	class:basic_format_arg::handle
handle	ext/fmt/include/fmt/core.h	/^  class handle {$/;"	c	class:basic_format_arg
handle_char_specs	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void handle_char_specs($/;"	f	namespace:internal
handle_cstring_type_spec	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void handle_cstring_type_spec(Char spec, Handler &&handler) {$/;"	f	namespace:internal
handle_dynamic_spec	ext/fmt/include/fmt/format.h	/^void handle_dynamic_spec($/;"	f	namespace:internal
handle_float_type_spec	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void handle_float_type_spec(char spec, Handler &&handler) {$/;"	f	namespace:internal
handle_int_type_spec	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void handle_int_type_spec(char spec, Handler &&handler) {$/;"	f	namespace:internal
handle_specs	ext/fmt/include/fmt/format.h	/^  void handle_specs(Context &ctx) {$/;"	f	class:dynamic_formatter
handle_value	ext/headers/json.hpp	/^    BasicJsonType* handle_value(Value&& v)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
handle_value	ext/headers/json.hpp	/^    std::pair<bool, BasicJsonType*> handle_value(Value&& v, const bool skip_callback = false)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
handler	ext/fmt/include/fmt/format.h	/^  Handler &handler;$/;"	m	struct:internal::id_adapter
handler	ext/fmt/include/fmt/format.h	/^  SpecHandler &handler;$/;"	m	struct:internal::precision_adapter
handler	ext/fmt/include/fmt/format.h	/^  SpecHandler &handler;$/;"	m	struct:internal::width_adapter
handler_	ext/fmt/include/fmt/format.h	/^  ErrorHandler &handler_;$/;"	m	class:internal::precision_checker
handler_	ext/fmt/include/fmt/format.h	/^  ErrorHandler &handler_;$/;"	m	class:internal::width_checker
has	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR bool has(unsigned f) const { return (flags & f) != 0; }$/;"	f	struct:core_format_specs
has_from_json	ext/headers/json.hpp	/^struct has_from_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
has_from_json	ext/headers/json.hpp	/^struct has_from_json<BasicJsonType, T,$/;"	s	namespace:nlohmann::detail
has_non_default_from_json	ext/headers/json.hpp	/^struct has_non_default_from_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
has_non_default_from_json	ext/headers/json.hpp	/^struct has_non_default_from_json<BasicJsonType, T, enable_if_t<not is_basic_json<T>::value>>$/;"	s	namespace:nlohmann::detail
has_to_json	ext/headers/json.hpp	/^struct has_to_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
has_to_json	ext/headers/json.hpp	/^struct has_to_json<BasicJsonType, T, enable_if_t<not is_basic_json<T>::value>>$/;"	s	namespace:nlohmann::detail
hash	ext/headers/json.hpp	/^struct hash<nlohmann::json>$/;"	s	namespace:std
header_descs_	src/simple_stats.h	/^    std::unordered_map<std::string, std::string> header_descs_;$/;"	m	class:dramsim3::SimpleStats
help	ext/headers/args.hxx	/^            const std::string help;$/;"	m	class:argstest::Base
help	scripts/batch_run.py	/^                        help="cpu type")$/;"	v
help	scripts/plot_stats.py	/^                        help='output name (withouth extension name)',$/;"	v
help	scripts/plot_stats.py	/^                        help='plot a specific key name in epoch stats, '$/;"	v
help	scripts/trace_gen.py	/^                        help='Address stream type, (r)andom, (s)tream, (m)ix')$/;"	v
help	scripts/trace_gen.py	/^                        help='GBs of address space')$/;"	v
help	scripts/trace_gen.py	/^                        help='Inter-arrival time in cycles',$/;"	v
help	scripts/trace_gen.py	/^                        help='Read to write(1) ratio')$/;"	v
help	scripts/trace_gen.py	/^                        help='Total number of requests.')$/;"	v
help	scripts/trace_gen.py	/^                        help='Trace format, dramsim2, dramsim3,'$/;"	v
helpParams	ext/headers/args.hxx	/^            } helpParams;$/;"	m	class:argstest::ArgumentParser	typeref:struct:argstest::ArgumentParser::HelpParams
helpindent	ext/headers/args.hxx	/^                unsigned int helpindent = 40;$/;"	m	struct:argstest::ArgumentParser::HelpParams
hex_addr	src/common.h	/^    AddressPair hex_addr;$/;"	m	struct:dramsim3::Command
hex_writer	ext/fmt/include/fmt/format.h	/^    struct hex_writer {$/;"	s	struct:basic_writer::int_writer
histo_bins_	src/simple_stats.h	/^    VecStat histo_bins_;$/;"	m	class:dramsim3::SimpleStats
histo_bounds_	src/simple_stats.h	/^    std::unordered_map<std::string, std::pair<int, int> > histo_bounds_;$/;"	m	class:dramsim3::SimpleStats
histo_counts_	src/simple_stats.h	/^    std::unordered_map<std::string, HistoCount> histo_counts_;$/;"	m	class:dramsim3::SimpleStats
histo_headers_	src/simple_stats.h	/^    std::unordered_map<std::string, std::vector<std::string> > histo_headers_;$/;"	m	class:dramsim3::SimpleStats
hmc_callback	tests/test_hmcsys.cc	/^void hmc_callback(uint64_t addr) {$/;"	f
hmc_called	tests/test_hmcsys.cc	/^bool hmc_called = false;$/;"	v
ia	ext/headers/json.hpp	/^    detail::input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::lexer
ia	ext/headers/json.hpp	/^    input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::binary_reader
ia	ext/headers/json.hpp	/^    input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::input_adapter
id	ext/headers/json.hpp	/^    const int id;$/;"	m	class:nlohmann::detail::exception
id_	src/dram_system.h	/^    uint64_t id_;$/;"	m	class:dramsim3::BaseDRAMSystem
id_adapter	ext/fmt/include/fmt/format.h	/^struct id_adapter {$/;"	s	namespace:internal
ideal_memory_latency	src/configuration.h	/^    int ideal_memory_latency;$/;"	m	class:dramsim3::Config
implicit_bit	ext/fmt/include/fmt/format-inl.h	/^  static FMT_CONSTEXPR_DECL const uint64_t implicit_bit =$/;"	m	class:internal::fp
indent_char	ext/headers/json.hpp	/^    const char indent_char;$/;"	m	class:nlohmann::detail::serializer
indent_string	ext/headers/json.hpp	/^    string_t indent_string;$/;"	m	class:nlohmann::detail::serializer
index	ext/fmt/include/fmt/format.h	/^    unsigned index;$/;"	m	union:internal::arg_ref::__anon8
index_sequence	ext/headers/json.hpp	/^struct index_sequence$/;"	s	namespace:nlohmann::detail
inf_or_nan_writer	ext/fmt/include/fmt/format.h	/^  struct inf_or_nan_writer {$/;"	s	class:basic_writer
infinite_buffer_q_	src/dram_system.h	/^    std::vector<Transaction> infinite_buffer_q_;$/;"	m	class:dramsim3::IdealDRAMSystem
info_arch	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
ini_file	scripts/validation.py	/^    ini_file = sys.argv[1]$/;"	v	class:LPDDRValidtion
ini_handler	ext/headers/INIReader.h	/^typedef int (*ini_handler)(void* user, const char* section,$/;"	t
ini_parse	ext/headers/INIReader.h	/^inline int ini_parse(const char* filename, ini_handler handler, void* user)$/;"	f
ini_parse_file	ext/headers/INIReader.h	/^inline int ini_parse_file(FILE* file, ini_handler handler, void* user)$/;"	f
ini_parse_stream	ext/headers/INIReader.h	/^inline int ini_parse_stream(ini_reader reader, void* stream, ini_handler handler,$/;"	f
ini_reader	ext/headers/INIReader.h	/^typedef char* (*ini_reader)(char* str, int num, void* stream);$/;"	t
init	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR init(const T &v) : val(v) {}$/;"	f	struct:internal::init
init	ext/fmt/include/fmt/core.h	/^struct init {$/;"	s	namespace:internal
init	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void system_error::init($/;"	f	class:system_error
init	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void windows_error::init($/;"	f	class:windows_error
init	ext/fmt/include/fmt/format.h	/^void arg_map<Context>::init(const basic_format_args<Context> &args) {$/;"	f	class:internal::arg_map
initialize_Temperature	src/thermal_solver.c	/^double *initialize_Temperature(double W, double Lc, int numP, int dimX,$/;"	f
inline_buffer_size	ext/fmt/include/fmt/format.h	/^enum { inline_buffer_size = 500 };$/;"	e	enum:__anon3
input_adapter	ext/headers/json.hpp	/^    input_adapter(CharT b)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(CharT b, std::size_t l)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(const ContiguousContainer& c)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(const std::u16string& ws)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(const std::u32string& ws)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(const std::wstring& ws)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(std::FILE* file)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(std::istream& i)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^    input_adapter(std::istream&& i)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	ext/headers/json.hpp	/^class input_adapter$/;"	c	namespace:nlohmann::detail
input_adapter_protocol	ext/headers/json.hpp	/^struct input_adapter_protocol$/;"	s	namespace:nlohmann::detail
input_buffer_adapter	ext/headers/json.hpp	/^class input_buffer_adapter : public input_adapter_protocol$/;"	c	namespace:nlohmann::detail
input_format_t	ext/headers/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	c	namespace:nlohmann::detail
input_stream_adapter	ext/headers/json.hpp	/^    explicit input_stream_adapter(std::istream& i)$/;"	f	class:nlohmann::detail::input_stream_adapter
input_stream_adapter	ext/headers/json.hpp	/^class input_stream_adapter : public input_adapter_protocol$/;"	c	namespace:nlohmann::detail
insert	ext/fmt/include/fmt/format-inl.h	/^  void insert(size_t pos, char c) {$/;"	f	struct:internal::prettify_handler
insert	ext/fmt/include/fmt/format-inl.h	/^  void insert(size_t pos, size_t n, F f) {$/;"	f	struct:internal::prettify_handler
insert	ext/fmt/include/fmt/format-inl.h	/^  void insert(size_t, char) { ++size; }$/;"	f	struct:internal::char_counter
insert	ext/fmt/include/fmt/format-inl.h	/^  void insert(size_t, size_t n, F) { size += n; }$/;"	f	struct:internal::char_counter
insert	ext/headers/json.hpp	/^    iterator insert(const_iterator pos, basic_json&& val)$/;"	f	class:nlohmann::basic_json
insert	ext/headers/json.hpp	/^    iterator insert(const_iterator pos, const basic_json& val)$/;"	f	class:nlohmann::basic_json
insert	ext/headers/json.hpp	/^    iterator insert(const_iterator pos, const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json
insert	ext/headers/json.hpp	/^    iterator insert(const_iterator pos, initializer_list_t ilist)$/;"	f	class:nlohmann::basic_json
insert	ext/headers/json.hpp	/^    iterator insert(const_iterator pos, size_type cnt, const basic_json& val)$/;"	f	class:nlohmann::basic_json
insert	ext/headers/json.hpp	/^    void insert(const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json
insert_iterator	ext/headers/json.hpp	/^    iterator insert_iterator(const_iterator pos, Args&& ... args)$/;"	f	class:nlohmann::basic_json
inserted_a_	src/cpu.h	/^    bool inserted_a_ = false;$/;"	m	class:dramsim3::StreamCPU
inserted_b_	src/cpu.h	/^    bool inserted_b_ = false;$/;"	m	class:dramsim3::StreamCPU
inserted_c_	src/cpu.h	/^    bool inserted_c_ = false;$/;"	m	class:dramsim3::StreamCPU
int_traits	ext/fmt/include/fmt/format.h	/^struct int_traits {$/;"	s	namespace:internal
int_type	ext/fmt/include/fmt/core.h	/^  int_type, uint_type, long_long_type, ulong_long_type, bool_type, char_type,$/;"	e	enum:internal::type
int_type_checker	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR explicit int_type_checker(ErrorHandler eh) : ErrorHandler(eh) {}$/;"	f	class:internal::int_type_checker
int_type_checker	ext/fmt/include/fmt/format.h	/^class int_type_checker : private ErrorHandler {$/;"	c	namespace:internal
int_value	ext/fmt/include/fmt/core.h	/^    int int_value;$/;"	m	union:internal::value::__anon14
int_writer	ext/fmt/include/fmt/format.h	/^    int_writer(basic_writer<Range> &w, Int value, const Spec &s)$/;"	f	struct:basic_writer::int_writer
int_writer	ext/fmt/include/fmt/format.h	/^  struct int_writer {$/;"	s	class:basic_writer
internal	ext/fmt/include/fmt/core.h	/^namespace internal {$/;"	n
internal	ext/fmt/include/fmt/format-inl.h	/^namespace internal {$/;"	n
internal	ext/fmt/include/fmt/format.h	/^namespace internal {$/;"	n
internal_iterator	ext/headers/json.hpp	/^template<typename BasicJsonType> struct internal_iterator$/;"	s	namespace:nlohmann::detail
into	ext/headers/catch.hpp	/^        struct into {$/;"	s	struct:Catch::combine::with_types
invalid_iterator	ext/headers/json.hpp	/^    invalid_iterator(int id_, const char* what_arg)$/;"	f	class:nlohmann::detail::invalid_iterator
invalid_iterator	ext/headers/json.hpp	/^class invalid_iterator : public exception$/;"	c	namespace:nlohmann::detail
is	ext/headers/json.hpp	/^    std::istream& is;$/;"	m	class:nlohmann::detail::input_stream_adapter
isFPM	src/common.h	/^    bool isFPM;$/;"	m	struct:dramsim3::Command
isFalseTest	ext/headers/catch.hpp	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isRightCommand	src/bankstate.cc	/^bool BankState::isRightCommand(const Command& cmd) const{$/;"	f	class:dramsim3::BankState
isShort	ext/headers/args.hxx	/^        const bool isShort;$/;"	m	struct:argstest::EitherFlag
is_arithmetic	ext/fmt/include/fmt/core.h	/^  bool is_arithmetic() const { return internal::is_arithmetic(type_); }$/;"	f	class:basic_format_arg
is_arithmetic	ext/fmt/include/fmt/core.h	/^FMT_CONSTEXPR bool is_arithmetic(type t) {$/;"	f	namespace:internal
is_basic_json	ext/headers/json.hpp	/^struct is_basic_json<NLOHMANN_BASIC_JSON_TPL> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_basic_json	ext/headers/json.hpp	/^template<typename> struct is_basic_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_array_type	ext/headers/json.hpp	/^struct is_compatible_array_type$/;"	s	namespace:nlohmann::detail
is_compatible_array_type_impl	ext/headers/json.hpp	/^struct is_compatible_array_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_array_type_impl	ext/headers/json.hpp	/^struct is_compatible_array_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type	ext/headers/json.hpp	/^struct is_compatible_integer_type$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	ext/headers/json.hpp	/^struct is_compatible_integer_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	ext/headers/json.hpp	/^struct is_compatible_integer_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_object_type	ext/headers/json.hpp	/^struct is_compatible_object_type$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	ext/headers/json.hpp	/^struct is_compatible_object_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	ext/headers/json.hpp	/^struct is_compatible_object_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_string_type	ext/headers/json.hpp	/^struct is_compatible_string_type$/;"	s	namespace:nlohmann::detail
is_compatible_string_type_impl	ext/headers/json.hpp	/^struct is_compatible_string_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_string_type_impl	ext/headers/json.hpp	/^struct is_compatible_string_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_type	ext/headers/json.hpp	/^struct is_compatible_type$/;"	s	namespace:nlohmann::detail
is_compatible_type_impl	ext/headers/json.hpp	/^struct is_compatible_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_type_impl	ext/headers/json.hpp	/^struct is_compatible_type_impl: std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compile_string	ext/fmt/include/fmt/core.h	/^struct is_compile_string : std::is_base_of<compile_string, S> {};$/;"	s
is_complete_type	ext/headers/json.hpp	/^struct is_complete_type : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_complete_type	ext/headers/json.hpp	/^struct is_complete_type<T, decltype(void(sizeof(T)))> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_constructible	ext/fmt/include/fmt/core.h	/^struct is_constructible: std::false_type {};$/;"	s
is_constructible_array_type	ext/headers/json.hpp	/^struct is_constructible_array_type$/;"	s	namespace:nlohmann::detail
is_constructible_array_type_impl	ext/headers/json.hpp	/^struct is_constructible_array_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_constructible_array_type_impl	ext/headers/json.hpp	/^struct is_constructible_array_type_impl <$/;"	s	namespace:nlohmann::detail
is_constructible_object_type	ext/headers/json.hpp	/^struct is_constructible_object_type$/;"	s	namespace:nlohmann::detail
is_constructible_object_type_impl	ext/headers/json.hpp	/^struct is_constructible_object_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_constructible_object_type_impl	ext/headers/json.hpp	/^struct is_constructible_object_type_impl <$/;"	s	namespace:nlohmann::detail
is_constructible_string_type	ext/headers/json.hpp	/^struct is_constructible_string_type$/;"	s	namespace:nlohmann::detail
is_constructible_string_type_impl	ext/headers/json.hpp	/^struct is_constructible_string_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_constructible_string_type_impl	ext/headers/json.hpp	/^struct is_constructible_string_type_impl <$/;"	s	namespace:nlohmann::detail
is_copy	src/common.h	/^        bool is_copy;$/;"	m	class:dramsim3::AddressPair
is_copy	src/common.h	/^    bool is_copy;$/;"	m	struct:dramsim3::Transaction
is_copy_	src/cpu.h	/^    bool is_copy_ = true;$/;"	m	class:dramsim3::RandomCPU
is_epoch	scripts/plot_stats.py	/^            is_epoch = False$/;"	v
is_epoch	scripts/plot_stats.py	/^            is_epoch = True$/;"	v
is_epoch	scripts/plot_stats.py	/^        is_epoch = False$/;"	v
is_errored	ext/headers/json.hpp	/^    constexpr bool is_errored() const$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
is_errored	ext/headers/json.hpp	/^    constexpr bool is_errored() const$/;"	f	class:nlohmann::detail::json_sax_dom_parser
is_in_copy_	src/command_queue.h	/^    bool is_in_copy_;                       \/\/ Flag goes up when READCOPY is going to be issued, goes down when WRITECOPY is issued(IssueCopy)$/;"	m	class:dramsim3::CommandQueue
is_in_ref_	src/command_queue.h	/^    bool is_in_ref_;$/;"	m	class:dramsim3::CommandQueue
is_integer	ext/fmt/include/fmt/format.h	/^struct is_integer {$/;"	s	namespace:internal
is_integral	ext/fmt/include/fmt/core.h	/^  bool is_integral() const { return internal::is_integral(type_); }$/;"	f	class:basic_format_arg
is_integral	ext/fmt/include/fmt/core.h	/^FMT_CONSTEXPR bool is_integral(type t) {$/;"	f	namespace:internal
is_iterator_traits	ext/headers/json.hpp	/^struct is_iterator_traits : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_iterator_traits	ext/headers/json.hpp	/^struct is_iterator_traits<iterator_traits<T>>$/;"	s	namespace:nlohmann::detail
is_little_endian	ext/headers/json.hpp	/^    const bool is_little_endian = binary_reader<BasicJsonType>::little_endianess();$/;"	m	class:nlohmann::detail::binary_writer
is_little_endian	ext/headers/json.hpp	/^    const bool is_little_endian = little_endianess();$/;"	m	class:nlohmann::detail::binary_reader
is_name_start	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR bool is_name_start(Char c) {$/;"	f	namespace:internal
is_negative	ext/fmt/include/fmt/format.h	/^    !std::numeric_limits<T>::is_signed, bool>::type is_negative(T) {$/;"	f	namespace:internal
is_negative	ext/fmt/include/fmt/format.h	/^    std::numeric_limits<T>::is_signed, bool>::type is_negative(T value) {$/;"	f	namespace:internal
is_output_iterator	ext/fmt/include/fmt/format.h	/^class is_output_iterator {$/;"	c	namespace:internal
is_rvalue	ext/headers/json.hpp	/^    const bool is_rvalue;$/;"	m	class:nlohmann::detail::json_ref
is_sax	ext/headers/json.hpp	/^struct is_sax$/;"	s	namespace:nlohmann::detail
is_sax_static_asserts	ext/headers/json.hpp	/^struct is_sax_static_asserts$/;"	s	namespace:nlohmann::detail
is_string	ext/fmt/include/fmt/core.h	/^struct is_string : std::integral_constant<bool, !std::is_same<$/;"	s	namespace:internal
is_unified_queue_	src/controller.h	/^    bool is_unified_queue_;$/;"	m	class:dramsim3::Controller
is_unique	ext/headers/catch.hpp	/^	inline constexpr auto is_unique = std::true_type{};$/;"	m	namespace:Catch
is_unique	ext/headers/catch.hpp	/^	inline constexpr auto is_unique<T, Rest...> = std::bool_constant<$/;"	m	namespace:Catch
is_write	src/common.h	/^    bool is_write;$/;"	m	struct:dramsim3::Transaction
is_write	src/hmc.h	/^    bool is_write;$/;"	m	class:dramsim3::HMCRequest
isinf	ext/fmt/include/fmt/format.h	/^inline dummy_int isinf(...) { return dummy_int(); }$/;"	f	namespace:internal
isinfinity	ext/fmt/include/fmt/format.h	/^  static bool isinfinity(T x) {$/;"	f	class:std::numeric_limits
isnan	ext/fmt/include/fmt/format.h	/^inline dummy_int isnan(...) { return dummy_int(); }$/;"	f	namespace:internal
isnotanumber	ext/fmt/include/fmt/format.h	/^  static bool isnotanumber(T x) {$/;"	f	class:std::numeric_limits
it_	ext/fmt/include/fmt/format.h	/^  OutputIt it_;$/;"	m	class:output_range
it_category	ext/fmt/include/fmt/format.h	/^struct it_category : std::false_type {};$/;"	s	namespace:internal
it_category	ext/fmt/include/fmt/format.h	/^struct it_category<T*> { typedef std::random_access_iterator_tag type; };$/;"	s	namespace:internal
it_category	ext/fmt/include/fmt/format.h	/^struct it_category<T, typename void_<typename T::iterator_category>::type> {$/;"	s	namespace:internal
iter_impl	ext/headers/json.hpp	/^class iter_impl$/;"	c	namespace:nlohmann::detail
iteration_proxy	ext/headers/json.hpp	/^template<typename IteratorType> class iteration_proxy$/;"	c	namespace:nlohmann::detail
iteration_proxy_value	ext/headers/json.hpp	/^template <typename IteratorType> class iteration_proxy_value$/;"	c	namespace:nlohmann::detail
iterator	ext/fmt/include/fmt/core.h	/^  typedef OutputIt iterator;$/;"	t	class:internal::context_base
iterator	ext/fmt/include/fmt/core.h	/^  typedef const Char *iterator;$/;"	t	class:basic_string_view
iterator	ext/fmt/include/fmt/core.h	/^  typedef typename basic_string_view<Char>::iterator iterator;$/;"	t	class:basic_parse_context
iterator	ext/fmt/include/fmt/format.h	/^  typedef OutputIt iterator;$/;"	t	class:output_range
iterator	ext/fmt/include/fmt/format.h	/^  typedef decltype(internal::declval<Range>().begin()) iterator;$/;"	t	class:basic_writer
iterator	ext/fmt/include/fmt/format.h	/^  typedef decltype(internal::declval<Range>().begin()) iterator;$/;"	t	class:internal::arg_formatter_base
iterator	ext/fmt/include/fmt/format.h	/^  typedef internal::null_terminating_iterator<Char> iterator;$/;"	t	class:internal::format_string_checker
iterator	ext/fmt/include/fmt/format.h	/^  typedef internal::null_terminating_iterator<Char> iterator;$/;"	t	struct:format_handler
iterator	ext/fmt/include/fmt/format.h	/^  typedef typename base::iterator iterator;$/;"	t	class:arg_formatter
iterator_category	ext/fmt/include/fmt/format.h	/^  typedef std::output_iterator_tag iterator_category;$/;"	t	class:internal::counting_iterator
iterator_category	ext/fmt/include/fmt/format.h	/^  typedef std::output_iterator_tag iterator_category;$/;"	t	class:internal::truncating_iterator_base
iterator_category	ext/fmt/include/fmt/format.h	/^  typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:internal::null_terminating_iterator
iterator_traits	ext/headers/json.hpp	/^struct iterator_traits < T, enable_if_t < !std::is_pointer<T>::value >>$/;"	s	namespace:nlohmann::detail
iterator_traits	ext/headers/json.hpp	/^struct iterator_traits$/;"	s	namespace:nlohmann::detail
iterator_traits	ext/headers/json.hpp	/^struct iterator_traits<T*, enable_if_t<std::is_object<T>::value>>$/;"	s	namespace:nlohmann::detail
iterator_types	ext/headers/json.hpp	/^struct iterator_types <$/;"	s	namespace:nlohmann::detail
iterator_types	ext/headers/json.hpp	/^struct iterator_types {};$/;"	s	namespace:nlohmann::detail
j_data	scripts/plot_stats.py	/^            j_data = json.load(j_file)$/;"	v
j_data_	src/simple_stats.h	/^    Json j_data_;$/;"	m	class:dramsim3::SimpleStats
join	ext/fmt/include/fmt/format.h	/^arg_join<It, char> join(It begin, It end, string_view sep) {$/;"	f
join	ext/fmt/include/fmt/format.h	/^arg_join<It, wchar_t> join(It begin, It end, wstring_view sep) {$/;"	f
json	ext/headers/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	m	class:nlohmann::detail::input_format_t
json_epoch_name	src/configuration.h	/^    std::string json_epoch_name;$/;"	m	class:dramsim3::Config
json_pointer	ext/headers/json.hpp	/^    explicit json_pointer(const std::string& s = "")$/;"	f	class:nlohmann::json_pointer
json_pointer	ext/headers/json.hpp	/^class json_pointer$/;"	c	namespace:nlohmann
json_ref	ext/headers/json.hpp	/^    json_ref(Args && ... args)$/;"	f	class:nlohmann::detail::json_ref
json_ref	ext/headers/json.hpp	/^    json_ref(const value_type& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	ext/headers/json.hpp	/^    json_ref(std::initializer_list<json_ref> init)$/;"	f	class:nlohmann::detail::json_ref
json_ref	ext/headers/json.hpp	/^    json_ref(value_type&& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	ext/headers/json.hpp	/^class json_ref$/;"	c	namespace:nlohmann::detail
json_reverse_iterator	ext/headers/json.hpp	/^class json_reverse_iterator : public std::reverse_iterator<Base>$/;"	c	namespace:nlohmann::detail
json_sax	ext/headers/json.hpp	/^struct json_sax$/;"	s	namespace:nlohmann
json_sax_acceptor	ext/headers/json.hpp	/^class json_sax_acceptor$/;"	c	namespace:nlohmann::detail
json_sax_dom_callback_parser	ext/headers/json.hpp	/^    json_sax_dom_callback_parser(BasicJsonType& r,$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
json_sax_dom_callback_parser	ext/headers/json.hpp	/^class json_sax_dom_callback_parser$/;"	c	namespace:nlohmann::detail
json_sax_dom_parser	ext/headers/json.hpp	/^    explicit json_sax_dom_parser(BasicJsonType& r, const bool allow_exceptions_ = true)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
json_sax_dom_parser	ext/headers/json.hpp	/^class json_sax_dom_parser$/;"	c	namespace:nlohmann::detail
json_stats_name	src/configuration.h	/^    std::string json_stats_name;$/;"	m	class:dramsim3::Config
json_value	ext/headers/json.hpp	/^        json_value(array_t&& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	ext/headers/json.hpp	/^        json_value(const array_t& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	ext/headers/json.hpp	/^        json_value(const object_t& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	ext/headers/json.hpp	/^        json_value(const string_t& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	ext/headers/json.hpp	/^        json_value(object_t&& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	ext/headers/json.hpp	/^        json_value(string_t&& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	ext/headers/json.hpp	/^        json_value(value_t t)$/;"	f	union:nlohmann::basic_json::json_value
json_value	ext/headers/json.hpp	/^    union json_value$/;"	u	class:nlohmann::basic_json
k	ext/headers/json.hpp	/^    int k;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power
kAlpha	ext/headers/json.hpp	/^constexpr int kAlpha = -60;$/;"	m	namespace:nlohmann::detail::dtoa_impl
kGamma	ext/headers/json.hpp	/^constexpr int kGamma = -32;$/;"	m	namespace:nlohmann::detail::dtoa_impl
kPrecision	ext/headers/json.hpp	/^    static constexpr int kPrecision = 64; \/\/ = q$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp
keep_stack	ext/headers/json.hpp	/^    std::vector<bool> keep_stack;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
key	ext/headers/json.hpp	/^        key,$/;"	m	class:nlohmann::detail::parser::parse_event_t
key	ext/headers/json.hpp	/^    auto key() const -> decltype(std::declval<Base>().key())$/;"	f	class:nlohmann::detail::json_reverse_iterator
key	ext/headers/json.hpp	/^    bool key(string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor
key	ext/headers/json.hpp	/^    bool key(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
key	ext/headers/json.hpp	/^    bool key(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
key	ext/headers/json.hpp	/^    const std::string& key() const$/;"	f	class:nlohmann::detail::iteration_proxy_value
key	ext/headers/json.hpp	/^    const typename object_t::key_type& key() const$/;"	f	class:nlohmann::detail::iter_impl
key_keep_stack	ext/headers/json.hpp	/^    std::vector<bool> key_keep_stack;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
kickout	ext/headers/args.hxx	/^            bool kickout;$/;"	m	class:argstest::NamedBase
kind	ext/fmt/include/fmt/format.h	/^  Kind kind;$/;"	m	struct:internal::arg_ref
l_	scripts/final_PowerTemperature_map.py	/^			l_ = Bpos[i,5] - Bpos[i,4] + 1$/;"	v
last_addr_	src/cpu.h	/^    AddressPair last_addr_;$/;"	m	class:dramsim3::RandomCPU
last_clk_	src/thermal_replay.h	/^    uint64_t last_clk_;$/;"	m	class:dramsim3::ThermalReplay
last_integer_type	ext/fmt/include/fmt/core.h	/^  last_integer_type = char_type,$/;"	e	enum:internal::type
last_numeric_type	ext/fmt/include/fmt/core.h	/^  double_type, long_double_type, last_numeric_type = long_double_type,$/;"	e	enum:internal::type
last_req_clk_	src/dram_system.h	/^    uint64_t last_req_clk_;$/;"	m	class:dramsim3::BaseDRAMSystem
last_token	ext/headers/json.hpp	/^    token_type last_token = token_type::uninitialized;$/;"	m	class:nlohmann::detail::parser
last_trans_clk_	src/controller.h	/^    uint64_t last_trans_clk_;$/;"	m	class:dramsim3::Controller
last_write_	src/cpu.h	/^    bool last_write_ = false;$/;"	m	class:dramsim3::RandomCPU
latency_	src/dram_system.h	/^    int latency_;$/;"	m	class:dramsim3::IdealDRAMSystem
layer	scripts/final_PowerTemperature_map.py	/^layer = int(args.layer_str)$/;"	v
layerP	src/thermal.h	/^    std::vector<int> layerP;$/;"	m	class:dramsim3::ThermalCalculator
less	ext/headers/json.hpp	/^struct less< ::nlohmann::detail::value_t>$/;"	s	namespace:std
lexer	ext/headers/json.hpp	/^    explicit lexer(detail::input_adapter_t&& adapter)$/;"	f	class:nlohmann::detail::lexer
lexer	ext/headers/json.hpp	/^class lexer$/;"	c	namespace:nlohmann::detail
lg	ext/fmt/include/fmt/format.h	/^inline char *lg(uint32_t n, Handler h) {$/;"	f	namespace:internal
libdramsim3_is_present	src/memory_system.cc	/^void libdramsim3_is_present(void) { ; }$/;"	f
limit	ext/headers/json.hpp	/^    const char* const limit;$/;"	m	class:nlohmann::detail::input_buffer_adapter
limit_	ext/fmt/include/fmt/format.h	/^  std::size_t limit_;$/;"	m	class:internal::truncating_iterator_base
line	ext/headers/catch.hpp	/^            line( _line )$/;"	f	struct:Catch::SourceLineInfo
line	ext/headers/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	scripts/trace_gen.py	/^            line = get_string(op, addr, clk, f, args.interarrival)$/;"	v
lineInfo	ext/headers/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lines_read	ext/headers/json.hpp	/^    std::size_t lines_read = 0;$/;"	m	struct:nlohmann::detail::position_t
link	src/hmc.h	/^    int link;$/;"	m	class:dramsim3::HMCRequest
link	src/hmc.h	/^    int link;$/;"	m	class:dramsim3::HMCResponse
link_age_counter_	src/hmc.h	/^    std::vector<int> link_age_counter_;$/;"	m	class:dramsim3::HMCMemorySystem
link_busy_	src/hmc.h	/^    std::vector<int> link_busy_;$/;"	m	class:dramsim3::HMCMemorySystem
link_req_queues_	src/hmc.h	/^    std::vector<std::vector<HMCRequest*>> link_req_queues_;$/;"	m	class:dramsim3::HMCMemorySystem
link_resp_queues_	src/hmc.h	/^    std::vector<std::vector<HMCResponse*>> link_resp_queues_;$/;"	m	class:dramsim3::HMCMemorySystem
link_speed	src/configuration.h	/^    int link_speed;$/;"	m	class:dramsim3::Config
link_width	src/configuration.h	/^    int link_width;$/;"	m	class:dramsim3::Config
links_	src/hmc.h	/^    int links_;$/;"	m	class:dramsim3::HMCMemorySystem
literal_false	ext/headers/json.hpp	/^        literal_false,    \/\/\/< the `false` literal$/;"	m	class:nlohmann::detail::lexer::token_type
literal_null	ext/headers/json.hpp	/^        literal_null,     \/\/\/< the `null` literal$/;"	m	class:nlohmann::detail::lexer::token_type
literal_true	ext/headers/json.hpp	/^        literal_true,     \/\/\/< the `true` literal$/;"	m	class:nlohmann::detail::lexer::token_type
literals	ext/fmt/include/fmt/format.h	/^inline namespace literals {$/;"	n
loc	ext/headers/json.hpp	/^    const std::lconv* loc = nullptr;$/;"	m	class:nlohmann::detail::serializer
loc_	ext/fmt/include/fmt/core.h	/^  locale_ref loc_;$/;"	m	class:internal::context_base
loc_mapping	src/configuration.h	/^    std::string loc_mapping;$/;"	m	class:dramsim3::Config
locale	ext/fmt/include/fmt/core.h	/^  locale_ref locale() { return loc_; }$/;"	f	class:internal::context_base
locale_	ext/fmt/include/fmt/core.h	/^  const void *locale_;  \/\/ A type-erased pointer to std::locale.$/;"	m	class:internal::locale_ref
locale_	ext/fmt/include/fmt/format.h	/^  internal::locale_ref locale_;$/;"	m	class:basic_writer
locale_ref	ext/fmt/include/fmt/core.h	/^  locale_ref() : locale_(FMT_NULL) {}$/;"	f	class:internal::locale_ref
locale_ref	ext/fmt/include/fmt/core.h	/^class locale_ref {$/;"	c	namespace:internal
locale_ref	ext/fmt/include/fmt/format-inl.h	/^locale_ref::locale_ref(const Locale &loc) : locale_(&loc) {$/;"	f	class:internal::locale_ref
logic_clk_	src/hmc.h	/^    uint64_t logic_clk_, ps_per_dram_, ps_per_logic_, logic_ps_, dram_ps_;$/;"	m	class:dramsim3::HMCMemorySystem
logic_ps_	src/hmc.h	/^    uint64_t logic_clk_, ps_per_dram_, ps_per_logic_, logic_ps_, dram_ps_;$/;"	m	class:dramsim3::HMCMemorySystem
longFlag	ext/headers/args.hxx	/^        const std::string longFlag;$/;"	m	struct:argstest::EitherFlag
longFlags	ext/headers/args.hxx	/^            const std::unordered_set<std::string> longFlags;$/;"	m	class:argstest::Matcher
long_double_type	ext/fmt/include/fmt/core.h	/^  double_type, long_double_type, last_numeric_type = long_double_type,$/;"	e	enum:internal::type
long_double_value	ext/fmt/include/fmt/core.h	/^    long double long_double_value;$/;"	m	union:internal::value::__anon14
long_long_type	ext/fmt/include/fmt/core.h	/^  int_type, uint_type, long_long_type, ulong_long_type, bool_type, char_type,$/;"	e	enum:internal::type
long_long_value	ext/fmt/include/fmt/core.h	/^    long long long_long_value;$/;"	m	union:internal::value::__anon14
long_type	ext/fmt/include/fmt/core.h	/^        long_type;$/;"	t	namespace:internal
longprefix	ext/headers/args.hxx	/^            std::string longprefix;$/;"	m	class:argstest::ArgumentParser
longseparator	ext/headers/args.hxx	/^            std::string longseparator;$/;"	m	class:argstest::ArgumentParser
lskip	ext/headers/INIReader.h	/^inline static char* lskip(const char* s)$/;"	f
m	ext/headers/json.hpp	/^    std::runtime_error m;$/;"	m	class:nlohmann::detail::exception
m_args	ext/headers/catch.hpp	/^        std::vector<Arg> m_args;$/;"	m	struct:Catch::Parser
m_data	ext/headers/catch.hpp	/^            m_data( other.m_data )$/;"	f	class:Catch::StringRef
m_data	ext/headers/catch.hpp	/^        char* m_data = nullptr;$/;"	m	class:Catch::StringRef
m_description	ext/headers/catch.hpp	/^        std::string m_description;$/;"	m	class:Catch::ParserRefImpl
m_exeName	ext/headers/catch.hpp	/^        mutable ExeName m_exeName;$/;"	m	struct:Catch::Parser
m_file	ext/headers/json.hpp	/^        : m_file(f)$/;"	f	class:nlohmann::detail::file_input_adapter
m_file	ext/headers/json.hpp	/^    std::FILE* m_file;$/;"	m	class:nlohmann::detail::file_input_adapter
m_hint	ext/headers/catch.hpp	/^        std::string m_hint;$/;"	m	class:Catch::ParserRefImpl
m_index	ext/headers/catch.hpp	/^        std::size_t m_index;$/;"	m	class:Catch::ReusableStringStream
m_it	ext/headers/json.hpp	/^        : m_object(other.m_object), m_it(other.m_it) {}$/;"	f	class:nlohmann::detail::iter_impl
m_it	ext/headers/json.hpp	/^    difference_type m_it = (std::numeric_limits<std::ptrdiff_t>::min)();$/;"	m	class:nlohmann::detail::primitive_iterator_t
m_it	ext/headers/json.hpp	/^    internal_iterator<typename std::remove_const<BasicJsonType>::type> m_it;$/;"	m	class:nlohmann::detail::iter_impl
m_lexer	ext/headers/json.hpp	/^    lexer_t m_lexer;$/;"	m	class:nlohmann::detail::parser
m_name	ext/headers/catch.hpp	/^        std::shared_ptr<std::string> m_name;$/;"	m	class:Catch::ExeName
m_object	ext/headers/json.hpp	/^    explicit iter_impl(pointer object) noexcept : m_object(object)$/;"	f	class:nlohmann::detail::iter_impl
m_object	ext/headers/json.hpp	/^    pointer m_object = nullptr;$/;"	m	class:nlohmann::detail::iter_impl
m_optNames	ext/headers/catch.hpp	/^        std::vector<std::string> m_optNames;$/;"	m	class:Catch::Opt
m_optionality	ext/headers/catch.hpp	/^        Optionality m_optionality = Optionality::Optional;$/;"	m	class:Catch::ParserRefImpl
m_options	ext/headers/catch.hpp	/^        std::vector<Opt> m_options;$/;"	m	struct:Catch::Parser
m_oss	ext/headers/catch.hpp	/^        std::ostream* m_oss;$/;"	m	class:Catch::ReusableStringStream
m_ref	ext/headers/catch.hpp	/^        std::shared_ptr<BoundRef> m_ref;$/;"	m	class:Catch::ParserRefImpl
m_ref	ext/headers/catch.hpp	/^        std::shared_ptr<BoundValueRefBase> m_ref;$/;"	m	class:Catch::ExeName
m_size	ext/headers/catch.hpp	/^            m_size( other.m_size )$/;"	f	class:Catch::StringRef
m_size	ext/headers/catch.hpp	/^            m_size( size )$/;"	f	class:Catch::StringRef
m_size	ext/headers/catch.hpp	/^            m_size( stdString.size() )$/;"	f	class:Catch::StringRef
m_size	ext/headers/catch.hpp	/^        size_type m_size;$/;"	m	class:Catch::StringRef
m_start	ext/headers/catch.hpp	/^        char const* m_start;$/;"	m	class:Catch::StringRef
m_testAsMethod	ext/headers/catch.hpp	/^    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {}$/;"	f	class:Catch::TestInvokerAsMethod
m_testAsMethod	ext/headers/catch.hpp	/^    void (C::*m_testAsMethod)();$/;"	m	class:Catch::TestInvokerAsMethod
m_type	ext/headers/json.hpp	/^    value_t m_type = value_t::null;$/;"	m	class:nlohmann::basic_json
m_value	ext/headers/json.hpp	/^    json_value m_value = {};$/;"	m	class:nlohmann::basic_json
macroName	ext/headers/catch.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::AssertionInfo
main	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	src/main.cc	/^int main(int argc, const char **argv) {$/;"	f
main	src/thermal_replay.cc	/^int main(int argc, const char **argv) {$/;"	f
make_arg	ext/fmt/include/fmt/core.h	/^    make_arg(const T &value) {$/;"	f	namespace:internal
make_arg	ext/fmt/include/fmt/core.h	/^FMT_CONSTEXPR basic_format_arg<Context> make_arg(const T &value) {$/;"	f	namespace:internal
make_arg_ref	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR arg_ref_type make_arg_ref(Id arg_id) {$/;"	f	class:internal::dynamic_specs_handler
make_arg_ref	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR arg_ref_type make_arg_ref(auto_id) {$/;"	f	class:internal::dynamic_specs_handler
make_checked	ext/fmt/include/fmt/format.h	/^inline stdext::checked_array_iterator<T*> make_checked(T *p, std::size_t size) {$/;"	f	namespace:internal
make_format_to_n_args	ext/fmt/include/fmt/format.h	/^    make_format_to_n_args(const Args &... args) {$/;"	f
make_index_sequence	ext/headers/json.hpp	/^struct make_index_sequence$/;"	s	namespace:nlohmann::detail
make_index_sequence	ext/headers/json.hpp	/^template<> struct make_index_sequence<0> : index_sequence<> {};$/;"	s	namespace:nlohmann::detail
make_index_sequence	ext/headers/json.hpp	/^template<> struct make_index_sequence<1> : index_sequence<0> {};$/;"	s	namespace:nlohmann::detail
make_value	ext/fmt/include/fmt/core.h	/^    make_value(const S &val) {$/;"	f	namespace:internal
make_value	ext/fmt/include/fmt/core.h	/^    make_value(const T *) {$/;"	f	namespace:internal
make_value	ext/fmt/include/fmt/core.h	/^    make_value(const named_arg<T, typename C::char_type> &val) {$/;"	f	namespace:internal
make_value	ext/fmt/include/fmt/core.h	/^  init<C, int, char_type>>::type make_value(Char val) { return val; }$/;"	f	namespace:internal
make_value	ext/fmt/include/fmt/core.h	/^  init<C, int, char_type>>::type make_value(char val) { return val; }$/;"	f	namespace:internal
make_value	ext/fmt/include/fmt/core.h	/^  make_value(const T &val) { return basic_string_view<Char>(val); }$/;"	f	namespace:internal
make_value	ext/fmt/include/fmt/core.h	/^  make_value(const T &val) { return static_cast<int>(val); }$/;"	f	namespace:internal
make_value	ext/fmt/include/fmt/core.h	/^  make_value(const T &val) { return val; }$/;"	f	namespace:internal
make_void	ext/headers/json.hpp	/^template <typename ...Ts> struct make_void$/;"	s	namespace:nlohmann::detail
map	ext/headers/args.hxx	/^            const Map<K, T> map;$/;"	m	class:argstest::MapFlag
map	ext/headers/args.hxx	/^            const Map<K, T> map;$/;"	m	class:argstest::MapFlagList
map	ext/headers/args.hxx	/^            const Map<K, T> map;$/;"	m	class:argstest::MapPositional
map	ext/headers/args.hxx	/^            const Map<K, T> map;$/;"	m	class:argstest::MapPositionalList
map_	ext/fmt/include/fmt/core.h	/^  entry *map_;$/;"	m	class:internal::arg_map
map_	ext/fmt/include/fmt/core.h	/^  internal::arg_map<basic_format_context> map_;$/;"	m	class:basic_format_context
mat_dim_x	src/configuration.h	/^    int mat_dim_x;$/;"	m	class:dramsim3::Config
mat_dim_y	src/configuration.h	/^    int mat_dim_y;$/;"	m	class:dramsim3::Config
matched	ext/headers/args.hxx	/^            bool matched;$/;"	m	class:argstest::Base
matcher	ext/headers/args.hxx	/^            const Matcher matcher;$/;"	m	class:argstest::FlagBase
max_packed_args	ext/fmt/include/fmt/core.h	/^enum { max_packed_args = 15 };$/;"	e	enum:internal::__anon15
mem_operand	src/hmc.h	/^    uint64_t mem_operand;$/;"	m	class:dramsim3::HMCRequest
mem_type	scripts/batch_run.py	/^            mem_type = "hmc"$/;"	v
mem_type	scripts/batch_run.py	/^        mem_type = "default"$/;"	v
memory_buffer	ext/fmt/include/fmt/format.h	/^typedef basic_memory_buffer<char> memory_buffer;$/;"	t
memory_system_	src/cpu.h	/^    MemorySystem memory_system_;$/;"	m	class:dramsim3::CPU
merge_and_renumber	ext/headers/json.hpp	/^struct merge_and_renumber<index_sequence<I1...>, index_sequence<I2...>>$/;"	s	namespace:nlohmann::detail
merge_patch	ext/headers/json.hpp	/^    void merge_patch(const basic_json& apply_patch)$/;"	f	class:nlohmann::basic_json
meta	ext/headers/json.hpp	/^    static basic_json meta()$/;"	f	class:nlohmann::basic_json
minus	ext/headers/json.hpp	/^    diyfp minus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries
monostate	ext/fmt/include/fmt/core.h	/^struct monostate {};$/;"	s
move	ext/fmt/include/fmt/format.h	/^  void move(basic_memory_buffer &other) {$/;"	f	class:basic_memory_buffer
move	ext/headers/json.hpp	/^          m_value(std::move(other.m_value))$/;"	f	class:nlohmann::basic_json
moved_or_copied	ext/headers/json.hpp	/^    value_type moved_or_copied() const$/;"	f	class:nlohmann::detail::json_ref
msgpack	ext/headers/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	m	class:nlohmann::detail::input_format_t
n	ext/fmt/include/fmt/format-inl.h	/^  size_t n;$/;"	m	struct:internal::fill
n	ext/fmt/include/fmt/format.h	/^    size_t n;$/;"	m	struct:basic_writer::double_writer
name	ext/fmt/include/fmt/core.h	/^    basic_string_view<char_type> name;$/;"	m	struct:internal::arg_map::entry
name	ext/fmt/include/fmt/format.h	/^    string_value<Char> name;  \/\/ This is not string_view because of gcc 4.4.$/;"	m	union:internal::arg_ref::__anon8
name	ext/headers/args.hxx	/^            const std::string name;$/;"	m	class:argstest::NamedBase
name	ext/headers/catch.hpp	/^    StringRef name;$/;"	m	struct:Catch::NameAndTags
name	ext/headers/json.hpp	/^    static std::string name(const std::string& ename, int id_)$/;"	f	class:nlohmann::detail::exception
name_separator	ext/headers/json.hpp	/^        name_separator,   \/\/\/< the name separator `:`$/;"	m	class:nlohmann::detail::lexer::token_type
named_arg_type	ext/fmt/include/fmt/core.h	/^  none_type, named_arg_type,$/;"	e	enum:internal::type
needs_conversion	ext/fmt/include/fmt/format.h	/^struct needs_conversion: std::integral_constant<bool,$/;"	s	namespace:internal
next_arg	ext/fmt/include/fmt/core.h	/^  format_arg next_arg() {$/;"	f	class:basic_format_context
next_arg_id	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR unsigned basic_parse_context<Char, ErrorHandler>::next_arg_id() {$/;"	f	class:basic_parse_context
next_arg_id_	ext/fmt/include/fmt/core.h	/^  int next_arg_id_;$/;"	m	class:basic_parse_context
next_bank_	src/refresh.h	/^    int next_rank_, next_bg_, next_bank_;$/;"	m	class:dramsim3::Refresh
next_bg_	src/refresh.h	/^    int next_rank_, next_bg_, next_bank_;$/;"	m	class:dramsim3::Refresh
next_byte_in_range	ext/headers/json.hpp	/^    bool next_byte_in_range(std::initializer_list<int> ranges)$/;"	f	class:nlohmann::detail::lexer
next_link_	src/hmc.h	/^    int next_link_;$/;"	m	class:dramsim3::HMCMemorySystem
next_rank_	src/refresh.h	/^    int next_rank_, next_bg_, next_bank_;$/;"	m	class:dramsim3::Refresh
next_unget	ext/headers/json.hpp	/^    bool next_unget = false;$/;"	m	class:nlohmann::detail::lexer
nlohmann	ext/headers/json.hpp	/^namespace nlohmann$/;"	n
no_formatter_error	ext/fmt/include/fmt/core.h	/^struct no_formatter_error : std::false_type {};$/;"	s	namespace:internal
no_thousands_sep	ext/fmt/include/fmt/format.h	/^struct no_thousands_sep {$/;"	s	namespace:internal
noexcept	ext/headers/catch.hpp	/^        SourceLineInfo& operator = ( SourceLineInfo&& ) noexcept = default;$/;"	m	struct:Catch::SourceLineInfo
noexcept	ext/headers/catch.hpp	/^        SourceLineInfo( SourceLineInfo&& )              noexcept = default;$/;"	m	struct:Catch::SourceLineInfo
noexcept	ext/headers/catch.hpp	/^        SourceLineInfo( char const* _file, std::size_t _line ) noexcept$/;"	m	struct:Catch::SourceLineInfo
noexcept	ext/headers/catch.hpp	/^        StringRef( char const* rawChars ) noexcept;$/;"	m	class:Catch::StringRef
noexcept	ext/headers/catch.hpp	/^        bool empty() const noexcept;$/;"	m	struct:Catch::SourceLineInfo
noexcept	ext/headers/catch.hpp	/^        bool operator < ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
noexcept	ext/headers/catch.hpp	/^        bool operator == ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
noexcept	ext/headers/catch.hpp	/^        void swap( StringRef& other ) noexcept;$/;"	m	class:Catch::StringRef
noexcept	ext/headers/catch.hpp	/^    AutoReg( ITestInvoker* invoker, SourceLineInfo const& lineInfo, StringRef const& classOrMethod, NameAndTags const& nameAndTags ) noexcept;$/;"	m	struct:Catch::AutoReg
noexcept	ext/headers/catch.hpp	/^    NameAndTags( StringRef const& name_ = StringRef(), StringRef const& tags_ = StringRef() ) noexcept;$/;"	m	struct:Catch::NameAndTags
noexcept	ext/headers/json.hpp	/^    ValueType & get_to(ValueType& v) const noexcept(noexcept($/;"	f	class:nlohmann::basic_json
noexcept	ext/headers/json.hpp	/^    ValueType get() const noexcept(noexcept($/;"	f	class:nlohmann::basic_json
noexcept	ext/headers/json.hpp	/^    basic_json& operator=(basic_json other) noexcept ($/;"	f	class:nlohmann::basic_json
noexcept	ext/headers/json.hpp	/^    basic_json(CompatibleType && val) noexcept(noexcept($/;"	f	class:nlohmann::basic_json
noexcept	ext/headers/json.hpp	/^    constexpr diyfp(uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp
noexcept	ext/headers/json.hpp	/^    void swap(reference other) noexcept ($/;"	f	class:nlohmann::basic_json
noexcept	ext/headers/json.hpp	/^inline void swap<nlohmann::json>(nlohmann::json& j1, nlohmann::json& j2) noexcept($/;"	f	namespace:std
none_type	ext/fmt/include/fmt/core.h	/^  none_type, named_arg_type,$/;"	e	enum:internal::type
nonesuch	ext/headers/json.hpp	/^struct nonesuch$/;"	s	namespace:nlohmann::detail
normalize	ext/fmt/include/fmt/format-inl.h	/^  void normalize() {$/;"	f	class:internal::fp
null	ext/fmt/include/fmt/format.h	/^struct null {};$/;"	s	namespace:internal
null	ext/headers/json.hpp	/^    bool null()$/;"	f	class:nlohmann::detail::json_sax_acceptor
null	ext/headers/json.hpp	/^    bool null()$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
null	ext/headers/json.hpp	/^    bool null()$/;"	f	class:nlohmann::detail::json_sax_dom_parser
null	ext/headers/json.hpp	/^    null,             \/\/\/< null value$/;"	m	class:nlohmann::detail::value_t
null_handler	ext/fmt/include/fmt/format.h	/^  struct null_handler: internal::error_handler {$/;"	s	class:dynamic_formatter
null_terminating_iterator	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR explicit null_terminating_iterator(const Range &r)$/;"	f	class:internal::null_terminating_iterator
null_terminating_iterator	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator(const Char *ptr, const Char *end)$/;"	f	class:internal::null_terminating_iterator
null_terminating_iterator	ext/fmt/include/fmt/format.h	/^  null_terminating_iterator() : ptr_(0), end_(0) {}$/;"	f	class:internal::null_terminating_iterator
null_terminating_iterator	ext/fmt/include/fmt/format.h	/^class null_terminating_iterator {$/;"	c	namespace:internal
numP	src/thermal.h	/^    int dimX, dimY, numP;   \/\/ Dimension of the memory$/;"	m	class:dramsim3::ThermalCalculator
num_case	src/thermal.h	/^    int num_case;  \/\/ number of different cases where the thermal simulation is$/;"	m	class:dramsim3::ThermalCalculator
num_dies	src/configuration.h	/^    int num_dies;$/;"	m	class:dramsim3::Config
num_digits	ext/fmt/include/fmt/format-inl.h	/^  unsigned num_digits;$/;"	m	struct:internal::gen_digits_params
num_digits	ext/fmt/include/fmt/format.h	/^      unsigned num_digits;$/;"	m	struct:basic_writer::int_writer::bin_writer
num_digits	ext/fmt/include/fmt/format.h	/^      unsigned num_digits;$/;"	m	struct:basic_writer::int_writer::dec_writer
num_digits	ext/fmt/include/fmt/format.h	/^      unsigned num_digits;$/;"	m	struct:basic_writer::int_writer::hex_writer
num_dummy	src/thermal.h	/^    const int num_dummy = 2;  \/\/ dummy cells around the calculatd die$/;"	m	class:dramsim3::ThermalCalculator
num_links	src/configuration.h	/^    int num_links;$/;"	m	class:dramsim3::Config
num_queues_	src/command_queue.h	/^    int num_queues_;$/;"	m	class:dramsim3::CommandQueue
num_row_refresh	src/configuration.h	/^    int num_row_refresh;       \/\/ number of rows to be refreshed for one time$/;"	m	class:dramsim3::Config
num_vaults	src/configuration.h	/^    int num_vaults;$/;"	m	class:dramsim3::Config
num_writer	ext/fmt/include/fmt/format.h	/^    struct num_writer {$/;"	s	struct:basic_writer::int_writer
num_x_grids	src/configuration.h	/^    int num_x_grids;$/;"	m	class:dramsim3::Config
num_y_grids	src/configuration.h	/^    int num_y_grids;$/;"	m	class:dramsim3::Config
number_float	ext/headers/json.hpp	/^        json_value(number_float_t v) noexcept : number_float(v) {}$/;"	f	union:nlohmann::basic_json::json_value
number_float	ext/headers/json.hpp	/^        number_float_t number_float;$/;"	m	union:nlohmann::basic_json::json_value
number_float	ext/headers/json.hpp	/^    bool number_float(number_float_t \/*unused*\/, const string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor
number_float	ext/headers/json.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
number_float	ext/headers/json.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
number_float	ext/headers/json.hpp	/^    number_float,     \/\/\/< number value (floating-point)$/;"	m	class:nlohmann::detail::value_t
number_integer	ext/headers/json.hpp	/^        json_value(number_integer_t v) noexcept : number_integer(v) {}$/;"	f	union:nlohmann::basic_json::json_value
number_integer	ext/headers/json.hpp	/^        number_integer_t number_integer;$/;"	m	union:nlohmann::basic_json::json_value
number_integer	ext/headers/json.hpp	/^    bool number_integer(number_integer_t \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor
number_integer	ext/headers/json.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
number_integer	ext/headers/json.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
number_integer	ext/headers/json.hpp	/^    number_integer,   \/\/\/< number value (signed integer)$/;"	m	class:nlohmann::detail::value_t
number_unsigned	ext/headers/json.hpp	/^        json_value(number_unsigned_t v) noexcept : number_unsigned(v) {}$/;"	f	union:nlohmann::basic_json::json_value
number_unsigned	ext/headers/json.hpp	/^        number_unsigned_t number_unsigned;$/;"	m	union:nlohmann::basic_json::json_value
number_unsigned	ext/headers/json.hpp	/^    bool number_unsigned(number_unsigned_t \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor
number_unsigned	ext/headers/json.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
number_unsigned	ext/headers/json.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
number_unsigned	ext/headers/json.hpp	/^    number_unsigned,  \/\/\/< number value (unsigned integer)$/;"	m	class:nlohmann::detail::value_t
numeric_limits	ext/fmt/include/fmt/format.h	/^class numeric_limits<fmt::internal::dummy_int> :$/;"	c	namespace:std
o	ext/headers/json.hpp	/^    output_adapter_t<char> o = nullptr;$/;"	m	class:nlohmann::detail::serializer
oa	ext/headers/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::binary_writer
oa	ext/headers/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::output_adapter
object	ext/headers/json.hpp	/^        object_t* object;$/;"	m	union:nlohmann::basic_json::json_value
object	ext/headers/json.hpp	/^    object,           \/\/\/< object (unordered set of name\/value pairs)$/;"	m	class:nlohmann::detail::value_t
object	ext/headers/json.hpp	/^    static basic_json object(initializer_list_t init = {})$/;"	f	class:nlohmann::basic_json
object_element	ext/headers/json.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
object_element	ext/headers/json.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:nlohmann::detail::json_sax_dom_parser
object_end	ext/headers/json.hpp	/^        object_end,$/;"	m	class:nlohmann::detail::parser::parse_event_t
object_start	ext/headers/json.hpp	/^        object_start,$/;"	m	class:nlohmann::detail::parser::parse_event_t
offset_	src/cpu.h	/^    AddressPair addr_a_, addr_b_, addr_c_, offset_ = 0;$/;"	m	class:dramsim3::StreamCPU
on	ext/fmt/include/fmt/format.h	/^  template <unsigned N> char *on(uint32_t u) {$/;"	f	class:internal::decimal_formatter
on	ext/fmt/include/fmt/format.h	/^  template <unsigned N> char *on(uint32_t u) {$/;"	f	class:internal::decimal_formatter_null
on_align	ext/fmt/include/fmt/format.h	/^    void on_align(alignment) {}$/;"	f	struct:dynamic_formatter::null_handler
on_align	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_align(alignment align) { specs_.align_ = align; }$/;"	f	class:internal::specs_setter
on_align	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_align(alignment align) {$/;"	f	class:internal::specs_checker
on_arg_id	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_arg_id() {$/;"	f	class:internal::format_string_checker
on_arg_id	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_arg_id(basic_string_view<Char>) {}$/;"	f	class:internal::format_string_checker
on_arg_id	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_arg_id(unsigned id) {$/;"	f	class:internal::format_string_checker
on_arg_id	ext/fmt/include/fmt/format.h	/^  void on_arg_id() { arg = context.next_arg(); }$/;"	f	struct:format_handler
on_arg_id	ext/fmt/include/fmt/format.h	/^  void on_arg_id(basic_string_view<Char> id) {$/;"	f	struct:format_handler
on_arg_id	ext/fmt/include/fmt/format.h	/^  void on_arg_id(unsigned id) {$/;"	f	struct:format_handler
on_bin	ext/fmt/include/fmt/format.h	/^    void on_bin() {$/;"	f	struct:basic_writer::int_writer
on_bin	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_bin() {}$/;"	f	class:internal::int_type_checker
on_char	ext/fmt/include/fmt/format.h	/^    void on_char() { formatter.write_char(value); }$/;"	f	struct:internal::arg_formatter_base::char_spec_handler
on_char	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_char() {}$/;"	f	class:internal::char_specs_checker
on_dec	ext/fmt/include/fmt/format.h	/^    void on_dec() {$/;"	f	struct:basic_writer::int_writer
on_dec	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_dec() {}$/;"	f	class:internal::int_type_checker
on_dynamic_precision	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_dynamic_precision(Id arg_id) {$/;"	f	class:internal::dynamic_specs_handler
on_dynamic_precision	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_dynamic_precision(Id arg_id) {$/;"	f	class:internal::specs_handler
on_dynamic_width	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_dynamic_width(Id arg_id) {$/;"	f	class:internal::dynamic_specs_handler
on_dynamic_width	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_dynamic_width(Id arg_id) {$/;"	f	class:internal::specs_handler
on_error	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR void on_error(const char *message) {$/;"	f	class:basic_parse_context
on_error	ext/fmt/include/fmt/core.h	/^  void on_error(const char *message) { parse_context_.on_error(message); }$/;"	f	class:internal::context_base
on_error	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void internal::error_handler::on_error(const char *message) {$/;"	f	class:internal::error_handler
on_error	ext/fmt/include/fmt/format.h	/^    void on_error() {$/;"	f	struct:basic_writer::int_writer
on_error	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_error() {$/;"	f	class:internal::float_type_checker
on_error	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_error() {$/;"	f	class:internal::int_type_checker
on_error	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_error(const char *message) { handler.on_error(message); }$/;"	f	struct:internal::precision_adapter
on_error	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_error(const char *message) {$/;"	f	class:internal::dynamic_specs_handler
on_error	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_error(const char *message) {$/;"	f	class:internal::format_string_checker
on_error	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_error(const char *message) {$/;"	f	struct:internal::id_adapter
on_error	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_error(const char *message) {$/;"	f	struct:internal::width_adapter
on_error	ext/fmt/include/fmt/format.h	/^  void on_error() {$/;"	f	struct:float_spec_handler
on_error	ext/fmt/include/fmt/format.h	/^  void on_error(const char *message) {$/;"	f	class:internal::specs_handler
on_exp	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_exp() {}$/;"	f	class:internal::float_type_checker
on_exp	ext/fmt/include/fmt/format.h	/^  void on_exp() {$/;"	f	struct:float_spec_handler
on_fill	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_fill(Char fill) { specs_.fill_ = fill; }$/;"	f	class:internal::specs_setter
on_fixed	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_fixed() {}$/;"	f	class:internal::float_type_checker
on_fixed	ext/fmt/include/fmt/format.h	/^  void on_fixed() {$/;"	f	struct:float_spec_handler
on_format_specs	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR const Char *on_format_specs(iterator it) {$/;"	f	class:internal::format_string_checker
on_format_specs	ext/fmt/include/fmt/format.h	/^  iterator on_format_specs(iterator it) {$/;"	f	struct:format_handler
on_general	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_general() {}$/;"	f	class:internal::float_type_checker
on_general	ext/fmt/include/fmt/format.h	/^  void on_general() {$/;"	f	struct:float_spec_handler
on_hash	ext/fmt/include/fmt/format.h	/^    void on_hash() {}$/;"	f	struct:dynamic_formatter::null_handler
on_hash	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_hash() { specs_.flags |= HASH_FLAG; }$/;"	f	class:internal::specs_setter
on_hash	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_hash() {$/;"	f	class:internal::specs_checker
on_hex	ext/fmt/include/fmt/format.h	/^    void on_hex() {$/;"	f	struct:basic_writer::int_writer
on_hex	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_hex() {}$/;"	f	class:internal::float_type_checker
on_hex	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_hex() {}$/;"	f	class:internal::int_type_checker
on_hex	ext/fmt/include/fmt/format.h	/^  void on_hex() {$/;"	f	struct:float_spec_handler
on_int	ext/fmt/include/fmt/format.h	/^    void on_int() {$/;"	f	struct:internal::arg_formatter_base::char_spec_handler
on_int	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_int() {$/;"	f	class:internal::char_specs_checker
on_minus	ext/fmt/include/fmt/format.h	/^    void on_minus() {}$/;"	f	struct:dynamic_formatter::null_handler
on_minus	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_minus() { specs_.flags |= MINUS_FLAG; }$/;"	f	class:internal::specs_setter
on_minus	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_minus() {$/;"	f	class:internal::specs_checker
on_num	ext/fmt/include/fmt/format.h	/^    void on_num() {$/;"	f	struct:basic_writer::int_writer
on_num	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_num() {}$/;"	f	class:internal::int_type_checker
on_oct	ext/fmt/include/fmt/format.h	/^    void on_oct() {$/;"	f	struct:basic_writer::int_writer
on_oct	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_oct() {}$/;"	f	class:internal::int_type_checker
on_plus	ext/fmt/include/fmt/format.h	/^    void on_plus() {}$/;"	f	struct:dynamic_formatter::null_handler
on_plus	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_plus() { specs_.flags |= SIGN_FLAG | PLUS_FLAG; }$/;"	f	class:internal::specs_setter
on_plus	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_plus() {$/;"	f	class:internal::specs_checker
on_pointer	ext/fmt/include/fmt/format.h	/^    void on_pointer() { formatter.write_pointer(value); }$/;"	f	struct:internal::arg_formatter_base::cstring_spec_handler
on_pointer	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_pointer() {}$/;"	f	class:internal::cstring_type_checker
on_precision	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_precision(unsigned precision) {$/;"	f	class:internal::specs_setter
on_replacement_field	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_replacement_field(const Char *) {}$/;"	f	class:internal::format_string_checker
on_replacement_field	ext/fmt/include/fmt/format.h	/^  void on_replacement_field(const Char *p) {$/;"	f	struct:format_handler
on_space	ext/fmt/include/fmt/format.h	/^    void on_space() {}$/;"	f	struct:dynamic_formatter::null_handler
on_space	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_space() { specs_.flags |= SIGN_FLAG; }$/;"	f	class:internal::specs_setter
on_space	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_space() {$/;"	f	class:internal::specs_checker
on_string	ext/fmt/include/fmt/format.h	/^    void on_string() { formatter.write(value); }$/;"	f	struct:internal::arg_formatter_base::cstring_spec_handler
on_string	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_string() {}$/;"	f	class:internal::cstring_type_checker
on_text	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_text(const Char *, const Char *) {}$/;"	f	class:internal::format_string_checker
on_text	ext/fmt/include/fmt/format.h	/^  void on_text(const Char *begin, const Char *end) {$/;"	f	struct:format_handler
on_type	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_type(Char type) {$/;"	f	class:internal::specs_setter
on_width	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_width(unsigned width) { specs_.width_ = width; }$/;"	f	class:internal::specs_setter
on_zero	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_zero() {$/;"	f	class:internal::specs_checker
on_zero	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void on_zero() {$/;"	f	class:internal::specs_setter
open_row_	src/bankstate.h	/^    int open_row_;$/;"	m	class:dramsim3::BankState
operator !=	ext/fmt/include/fmt/core.h	/^  friend bool operator!=(basic_string_view lhs, basic_string_view rhs) {$/;"	f	class:basic_string_view
operator !=	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR bool operator!=(null_terminating_iterator other) const {$/;"	f	class:internal::null_terminating_iterator
operator !=	ext/headers/json.hpp	/^    bool operator!=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl
operator !=	ext/headers/json.hpp	/^    bool operator!=(const iteration_proxy_value& o) const$/;"	f	class:nlohmann::detail::iteration_proxy_value
operator ()	ext/fmt/include/fmt/format-inl.h	/^  void operator()(char *buffer) const {$/;"	f	struct:internal::fill
operator ()	ext/fmt/include/fmt/format.h	/^      !is_integer<T>::value, unsigned long long>::type operator()(T) {$/;"	f	class:internal::precision_checker
operator ()	ext/fmt/include/fmt/format.h	/^      !is_integer<T>::value, unsigned long long>::type operator()(T) {$/;"	f	class:internal::width_checker
operator ()	ext/fmt/include/fmt/format.h	/^      is_integer<T>::value, unsigned long long>::type operator()(T value) {$/;"	f	class:internal::precision_checker
operator ()	ext/fmt/include/fmt/format.h	/^      is_integer<T>::value, unsigned long long>::type operator()(T value) {$/;"	f	class:internal::width_checker
operator ()	ext/fmt/include/fmt/format.h	/^      operator()(T value) {$/;"	f	class:internal::arg_formatter_base
operator ()	ext/fmt/include/fmt/format.h	/^      void operator()(It &&it) const {$/;"	f	struct:basic_writer::int_writer::bin_writer
operator ()	ext/fmt/include/fmt/format.h	/^      void operator()(It &&it) const {$/;"	f	struct:basic_writer::int_writer::dec_writer
operator ()	ext/fmt/include/fmt/format.h	/^      void operator()(It &&it) const {$/;"	f	struct:basic_writer::int_writer::hex_writer
operator ()	ext/fmt/include/fmt/format.h	/^      void operator()(It &&it) const {$/;"	f	struct:basic_writer::int_writer::num_writer
operator ()	ext/fmt/include/fmt/format.h	/^    iterator>::type operator()(T value) {$/;"	f	class:internal::arg_formatter_base
operator ()	ext/fmt/include/fmt/format.h	/^    void operator()(It &&it) const { *it++ = value; }$/;"	f	struct:internal::arg_formatter_base::char_writer
operator ()	ext/fmt/include/fmt/format.h	/^    void operator()(It &&it) const {$/;"	f	struct:basic_writer::inf_or_nan_writer
operator ()	ext/fmt/include/fmt/format.h	/^    void operator()(It &&it) const {$/;"	f	struct:basic_writer::padded_int_writer
operator ()	ext/fmt/include/fmt/format.h	/^    void operator()(It &&it) const {$/;"	f	struct:basic_writer::str_writer
operator ()	ext/fmt/include/fmt/format.h	/^    void operator()(It &&it) {$/;"	f	struct:basic_writer::double_writer
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()() { handler.on_arg_id(); }$/;"	f	struct:internal::id_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()() { handler.on_dynamic_precision(auto_id()); }$/;"	f	struct:internal::precision_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()() { handler.on_dynamic_width(auto_id()); }$/;"	f	struct:internal::width_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()(basic_string_view<Char> id) {$/;"	f	struct:internal::id_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()(basic_string_view<Char> id) {$/;"	f	struct:internal::precision_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()(basic_string_view<Char> id) {$/;"	f	struct:internal::width_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()(unsigned id) { handler.on_arg_id(id); }$/;"	f	struct:internal::id_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()(unsigned id) { handler.on_dynamic_width(id); }$/;"	f	struct:internal::width_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void operator()(unsigned id) {$/;"	f	struct:internal::precision_adapter
operator ()	ext/fmt/include/fmt/format.h	/^  bool operator()(T) const { return false; }$/;"	f	class:internal::custom_formatter
operator ()	ext/fmt/include/fmt/format.h	/^  bool operator()(typename basic_format_arg<Context>::handle h) const {$/;"	f	class:internal::custom_formatter
operator ()	ext/fmt/include/fmt/format.h	/^  iterator operator()(basic_string_view<char_type> value) {$/;"	f	class:internal::arg_formatter_base
operator ()	ext/fmt/include/fmt/format.h	/^  iterator operator()(const char_type *value) {$/;"	f	class:internal::arg_formatter_base
operator ()	ext/fmt/include/fmt/format.h	/^  iterator operator()(const void *value) {$/;"	f	class:internal::arg_formatter_base
operator ()	ext/fmt/include/fmt/format.h	/^  iterator operator()(monostate) {$/;"	f	class:internal::arg_formatter_base
operator ()	ext/fmt/include/fmt/format.h	/^  iterator operator()(typename basic_format_arg<context_type>::handle handle) {$/;"	f	class:arg_formatter
operator ()	ext/fmt/include/fmt/format.h	/^  std::basic_string<Char> operator()(const Args &... args) const {$/;"	f	class:internal::udl_formatter
operator ()	ext/fmt/include/fmt/format.h	/^  void operator()(Char *&buffer) {$/;"	f	class:internal::add_thousands_sep
operator ()	ext/fmt/include/fmt/format.h	/^  void operator()(Char *) {}$/;"	f	struct:internal::no_thousands_sep
operator ()	ext/headers/args.hxx	/^        bool operator ()(const std::string &name, const std::string &value, T &destination)$/;"	f	struct:argstest::ValueReader
operator ()	ext/headers/args.hxx	/^        bool operator()(const std::string &name, const std::string &value, std::string &destination)$/;"	f	struct:argstest::ValueReader
operator ()	ext/headers/json.hpp	/^    std::size_t operator()(const nlohmann::json& j) const$/;"	f	struct:std::hash
operator *	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC fp operator*(fp x, fp y) {$/;"	f	namespace:internal
operator *	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR Char operator*() const {$/;"	f	class:internal::null_terminating_iterator
operator *	ext/fmt/include/fmt/format.h	/^  T &operator*() const { return blackhole_; }$/;"	f	class:internal::counting_iterator
operator *	ext/fmt/include/fmt/format.h	/^  truncating_iterator& operator*() { return *this; }$/;"	f	class:internal::truncating_iterator
operator *	ext/fmt/include/fmt/format.h	/^  value_type& operator*() const {$/;"	f	class:internal::truncating_iterator
operator *	ext/headers/json.hpp	/^    iteration_proxy_value& operator*()$/;"	f	class:nlohmann::detail::iteration_proxy_value
operator *	ext/headers/json.hpp	/^    reference operator*() const$/;"	f	class:nlohmann::detail::iter_impl
operator *	ext/headers/json.hpp	/^    value_type const& operator*() const$/;"	f	class:nlohmann::detail::json_ref
operator +	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator operator+(difference_type n) {$/;"	f	class:internal::null_terminating_iterator
operator +	ext/headers/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	ext/headers/json.hpp	/^    friend iter_impl operator+(difference_type i, const iter_impl& it)$/;"	f	class:nlohmann::detail::iter_impl
operator +	ext/headers/json.hpp	/^    iter_impl operator+(difference_type i) const$/;"	f	class:nlohmann::detail::iter_impl
operator +	ext/headers/json.hpp	/^    json_reverse_iterator operator+(difference_type i) const$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator operator++() {$/;"	f	class:internal::null_terminating_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator operator++(int) {$/;"	f	class:internal::null_terminating_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  counting_iterator operator++(int) {$/;"	f	class:internal::counting_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  counting_iterator& operator++() {$/;"	f	class:internal::counting_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  truncating_iterator operator++(int) {$/;"	f	class:internal::truncating_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  truncating_iterator& operator++() { return *this; }$/;"	f	class:internal::truncating_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  truncating_iterator& operator++() {$/;"	f	class:internal::truncating_iterator
operator ++	ext/fmt/include/fmt/format.h	/^  truncating_iterator& operator++(int) { return *this; }$/;"	f	class:internal::truncating_iterator
operator ++	ext/headers/json.hpp	/^    iter_impl const operator++(int)$/;"	f	class:nlohmann::detail::iter_impl
operator ++	ext/headers/json.hpp	/^    iter_impl& operator++()$/;"	f	class:nlohmann::detail::iter_impl
operator ++	ext/headers/json.hpp	/^    iteration_proxy_value& operator++()$/;"	f	class:nlohmann::detail::iteration_proxy_value
operator ++	ext/headers/json.hpp	/^    json_reverse_iterator const operator++(int)$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator ++	ext/headers/json.hpp	/^    json_reverse_iterator& operator++()$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator +=	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator operator+=(difference_type n) {$/;"	f	class:internal::null_terminating_iterator
operator +=	ext/headers/json.hpp	/^    iter_impl& operator+=(difference_type i)$/;"	f	class:nlohmann::detail::iter_impl
operator +=	ext/headers/json.hpp	/^    json_reverse_iterator& operator+=(difference_type i)$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator +=	ext/headers/json.hpp	/^    reference operator+=(basic_json&& val)$/;"	f	class:nlohmann::basic_json
operator +=	ext/headers/json.hpp	/^    reference operator+=(const basic_json& val)$/;"	f	class:nlohmann::basic_json
operator +=	ext/headers/json.hpp	/^    reference operator+=(const typename object_t::value_type& val)$/;"	f	class:nlohmann::basic_json
operator +=	ext/headers/json.hpp	/^    reference operator+=(initializer_list_t init)$/;"	f	class:nlohmann::basic_json
operator +=	src/common.h	/^        AddressPair operator+= (const int a) {$/;"	f	class:dramsim3::AddressPair
operator -	ext/fmt/include/fmt/format-inl.h	/^inline fp operator-(fp x, fp y) {$/;"	f	namespace:internal
operator -	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR difference_type operator-($/;"	f	class:internal::null_terminating_iterator
operator -	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator operator-(difference_type n) {$/;"	f	class:internal::null_terminating_iterator
operator -	ext/headers/json.hpp	/^    difference_type operator-(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl
operator -	ext/headers/json.hpp	/^    difference_type operator-(const json_reverse_iterator& other) const$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator -	ext/headers/json.hpp	/^    iter_impl operator-(difference_type i) const$/;"	f	class:nlohmann::detail::iter_impl
operator -	ext/headers/json.hpp	/^    json_reverse_iterator operator-(difference_type i) const$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator --	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator operator--() {$/;"	f	class:internal::null_terminating_iterator
operator --	ext/headers/json.hpp	/^    iter_impl const operator--(int)$/;"	f	class:nlohmann::detail::iter_impl
operator --	ext/headers/json.hpp	/^    iter_impl& operator--()$/;"	f	class:nlohmann::detail::iter_impl
operator --	ext/headers/json.hpp	/^    json_reverse_iterator const operator--(int)$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator --	ext/headers/json.hpp	/^    json_reverse_iterator& operator--()$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator -=	ext/headers/json.hpp	/^    iter_impl& operator-=(difference_type i)$/;"	f	class:nlohmann::detail::iter_impl
operator ->	ext/headers/json.hpp	/^    pointer operator->() const$/;"	f	class:nlohmann::detail::iter_impl
operator ->	ext/headers/json.hpp	/^    value_type const* operator->() const$/;"	f	class:nlohmann::detail::json_ref
operator <	ext/fmt/include/fmt/core.h	/^  friend bool operator<(basic_string_view lhs, basic_string_view rhs) {$/;"	f	class:basic_string_view
operator <	ext/headers/json.hpp	/^    bool operator<(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl
operator <<	ext/headers/args.hxx	/^    std::ostream &operator<<(std::ostream &os, const ArgumentParser &parser)$/;"	f	namespace:argstest
operator <<	ext/headers/json.hpp	/^    friend std::istream& operator<<(basic_json& j, std::istream& i)$/;"	f	class:nlohmann::basic_json
operator <<	ext/headers/json.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const basic_json& j)$/;"	f	class:nlohmann::basic_json
operator <<	src/common.cc	/^std::ostream& operator<<(std::ostream& os, const Command& cmd) {$/;"	f	namespace:dramsim3
operator <<	src/common.cc	/^std::ostream& operator<<(std::ostream& os, const Transaction& trans) {$/;"	f	namespace:dramsim3
operator <<	src/common.h	/^        AddressPair operator<< (const int a) {$/;"	f	class:dramsim3::AddressPair
operator <<	src/common.h	/^        AddressPair operator<< (const uint64_t a) {$/;"	f	class:dramsim3::AddressPair
operator <<=	src/common.h	/^        AddressPair& operator<<= (const uint64_t a) {$/;"	f	class:dramsim3::AddressPair
operator <=	ext/fmt/include/fmt/core.h	/^  friend bool operator<=(basic_string_view lhs, basic_string_view rhs) {$/;"	f	class:basic_string_view
operator <=	ext/headers/json.hpp	/^    bool operator<=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl
operator =	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR arg_ref &operator=(unsigned idx) {$/;"	f	struct:internal::arg_ref
operator =	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR null_terminating_iterator &operator=(const Char *ptr) {$/;"	f	class:internal::null_terminating_iterator
operator =	ext/fmt/include/fmt/format.h	/^  basic_memory_buffer &operator=(basic_memory_buffer &&other) {$/;"	f	class:basic_memory_buffer
operator =	ext/fmt/include/fmt/format.h	/^  named_arg<T, Char> operator=(T &&value) const {$/;"	f	struct:internal::udl_arg
operator =	ext/fmt/include/fmt/format.h	/^  truncating_iterator& operator=(value_type val) {$/;"	f	class:internal::truncating_iterator
operator =	src/common.h	/^        AddressPair& operator= (const AddressPair &a) {$/;"	f	class:dramsim3::AddressPair
operator ==	ext/fmt/include/fmt/core.h	/^  friend bool operator==(basic_string_view lhs, basic_string_view rhs) {$/;"	f	class:basic_string_view
operator ==	ext/headers/json.hpp	/^    bool operator==(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl
operator ==	ext/headers/json.hpp	/^    bool operator==(const iteration_proxy_value& o) const$/;"	f	class:nlohmann::detail::iteration_proxy_value
operator >	ext/fmt/include/fmt/core.h	/^  friend bool operator>(basic_string_view lhs, basic_string_view rhs) {$/;"	f	class:basic_string_view
operator >	ext/headers/json.hpp	/^    bool operator>(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl
operator >=	ext/fmt/include/fmt/core.h	/^  friend bool operator>=(basic_string_view lhs, basic_string_view rhs) {$/;"	f	class:basic_string_view
operator >=	ext/fmt/include/fmt/format.h	/^  bool operator>=(null_terminating_iterator other) const {$/;"	f	class:internal::null_terminating_iterator
operator >=	ext/headers/json.hpp	/^    bool operator>=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl
operator >>	ext/headers/json.hpp	/^    friend std::istream& operator>>(std::istream& i, basic_json& j)$/;"	f	class:nlohmann::basic_json
operator >>	ext/headers/json.hpp	/^    friend std::ostream& operator>>(const basic_json& j, std::ostream& o)$/;"	f	class:nlohmann::basic_json
operator >>	src/common.cc	/^std::istream& operator>>(std::istream& is, Transaction& trans) {$/;"	f	namespace:dramsim3
operator >>	src/common.h	/^        AddressPair operator>> (const int a) {$/;"	f	class:dramsim3::AddressPair
operator >>	src/common.h	/^        AddressPair operator>> (const uint64_t a) {$/;"	f	class:dramsim3::AddressPair
operator >>	src/common.h	/^        friend std::istream& operator>>(std::istream& is, AddressPair& addr) {$/;"	f	class:dramsim3::AddressPair
operator >>=	src/common.h	/^        AddressPair& operator>>= (const uint64_t a) {$/;"	f	class:dramsim3::AddressPair
operator ValueType	ext/headers/json.hpp	/^    operator ValueType() const$/;"	f	class:nlohmann::basic_json
operator []	ext/fmt/include/fmt/core.h	/^  T &operator[](std::size_t index) { return ptr_[index]; }$/;"	f	class:internal::basic_buffer
operator []	ext/fmt/include/fmt/core.h	/^  const T &operator[](std::size_t index) const { return ptr_[index]; }$/;"	f	class:internal::basic_buffer
operator []	ext/headers/json.hpp	/^    const_reference operator[](T* key) const$/;"	f	class:nlohmann::basic_json
operator []	ext/headers/json.hpp	/^    const_reference operator[](const json_pointer& ptr) const$/;"	f	class:nlohmann::basic_json
operator []	ext/headers/json.hpp	/^    const_reference operator[](const typename object_t::key_type& key) const$/;"	f	class:nlohmann::basic_json
operator []	ext/headers/json.hpp	/^    const_reference operator[](size_type idx) const$/;"	f	class:nlohmann::basic_json
operator []	ext/headers/json.hpp	/^    reference operator[](T* key)$/;"	f	class:nlohmann::basic_json
operator []	ext/headers/json.hpp	/^    reference operator[](const json_pointer& ptr)$/;"	f	class:nlohmann::basic_json
operator []	ext/headers/json.hpp	/^    reference operator[](const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json
operator []	ext/headers/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:nlohmann::detail::iter_impl
operator []	ext/headers/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:nlohmann::detail::json_reverse_iterator
operator []	ext/headers/json.hpp	/^    reference operator[](size_type idx)$/;"	f	class:nlohmann::basic_json
operator input_adapter_t	ext/headers/json.hpp	/^    operator input_adapter_t()$/;"	f	class:nlohmann::detail::input_adapter
operator int	ext/fmt/include/fmt/format.h	/^  operator int() const { return 0; }$/;"	f	struct:internal::dummy_int
operator output_adapter_t<CharType>	ext/headers/json.hpp	/^    operator output_adapter_t<CharType>()$/;"	f	class:nlohmann::detail::output_adapter
operator size_t	ext/headers/json.hpp	/^    constexpr operator size_t() const$/;"	f	struct:nlohmann::detail::position_t
operator std::string	ext/headers/json.hpp	/^    operator std::string() const$/;"	f	class:nlohmann::json_pointer
operator string_view	ext/fmt/include/fmt/format.h	/^  operator string_view() const { return string_view(&buffer_[0], size()); }$/;"	f	class:internal::utf16_to_utf8
operator uint64_t	src/common.h	/^        operator uint64_t() const {$/;"	f	class:dramsim3::AddressPair
operator value<Context>	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR operator value<Context>() const { return value<Context>(val); }$/;"	f	struct:internal::init
operator wstring_view	ext/fmt/include/fmt/format.h	/^  operator wstring_view() const { return wstring_view(&buffer_[0], size()); }$/;"	f	class:internal::utf8_to_utf16
ostream	ext/headers/catch.hpp	/^    auto operator << ( std::ostream& os, StringRef const& sr ) -> std::ostream&;$/;"	m	class:Catch::std
other	ext/headers/catch.hpp	/^        SourceLineInfo( SourceLineInfo const& other )            = default;$/;"	m	struct:Catch::SourceLineInfo
other_bankgroups_same_rank	src/timing.h	/^        other_bankgroups_same_rank;$/;"	m	class:dramsim3::Timing
other_banks_same_bankgroup	src/timing.h	/^        other_banks_same_bankgroup;$/;"	m	class:dramsim3::Timing
other_error	ext/headers/json.hpp	/^    other_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::other_error
other_error	ext/headers/json.hpp	/^class other_error : public exception$/;"	c	namespace:nlohmann::detail
other_ranks	src/timing.h	/^    std::vector<std::vector<std::pair<CommandType, int> > > other_ranks;$/;"	m	class:dramsim3::Timing
out	ext/fmt/include/fmt/core.h	/^  iterator out() { return out_; }$/;"	f	class:internal::context_base
out	ext/fmt/include/fmt/format.h	/^  OutputIt out;$/;"	m	struct:format_to_n_result
out	ext/fmt/include/fmt/format.h	/^  iterator out() const { return out_; }$/;"	f	class:basic_writer
out	ext/fmt/include/fmt/format.h	/^  iterator out() { return writer_.out(); }$/;"	f	class:internal::arg_formatter_base
out_	ext/fmt/include/fmt/core.h	/^  iterator out_;$/;"	m	class:internal::context_base
out_	ext/fmt/include/fmt/format.h	/^  OutputIt out_;$/;"	m	class:internal::truncating_iterator_base
out_	ext/fmt/include/fmt/format.h	/^  iterator out_;  \/\/ Output iterator.$/;"	m	class:basic_writer
out_of_range	ext/headers/json.hpp	/^    out_of_range(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::out_of_range
out_of_range	ext/headers/json.hpp	/^class out_of_range : public exception$/;"	c	namespace:nlohmann::detail
output_adapter	ext/headers/json.hpp	/^    output_adapter(StringType& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	ext/headers/json.hpp	/^    output_adapter(std::basic_ostream<CharType>& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	ext/headers/json.hpp	/^    output_adapter(std::vector<CharType>& vec)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	ext/headers/json.hpp	/^class output_adapter$/;"	c	namespace:nlohmann::detail
output_adapter_protocol	ext/headers/json.hpp	/^template<typename CharType> struct output_adapter_protocol$/;"	s	namespace:nlohmann::detail
output_dir	src/configuration.h	/^    std::string output_dir;$/;"	m	class:dramsim3::Config
output_level	src/configuration.h	/^    int output_level;$/;"	m	class:dramsim3::Config
output_prefix	src/configuration.h	/^    std::string output_prefix;$/;"	m	class:dramsim3::Config
output_prefixs	scripts/batch_run.py	/^    output_prefixs = []$/;"	v
output_range	ext/fmt/include/fmt/format.h	/^  explicit output_range(OutputIt it): it_(it) {}$/;"	f	class:output_range
output_range	ext/fmt/include/fmt/format.h	/^class output_range {$/;"	c
output_stream_adapter	ext/headers/json.hpp	/^class output_stream_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
output_string_adapter	ext/headers/json.hpp	/^class output_string_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
output_vector_adapter	ext/headers/json.hpp	/^class output_vector_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
override	ext/headers/json.hpp	/^    ~input_buffer_adapter() override = default;$/;"	m	class:nlohmann::detail::input_buffer_adapter
override	src/cpu.h	/^    void ClockTick() override;$/;"	m	class:dramsim3::RandomCPU
override	src/cpu.h	/^    void ClockTick() override;$/;"	m	class:dramsim3::StreamCPU
override	src/cpu.h	/^    void ClockTick() override;$/;"	m	class:dramsim3::TraceBasedCPU
override	src/dram_system.h	/^    bool AddTransaction(AddressPair hex_addr, bool is_write) override;$/;"	m	class:dramsim3::IdealDRAMSystem
override	src/dram_system.h	/^    bool AddTransaction(AddressPair hex_addr, bool is_write) override;$/;"	m	class:dramsim3::JedecDRAMSystem
override	src/dram_system.h	/^    bool WillAcceptTransaction(AddressPair hex_addr, bool is_write) const override;$/;"	m	class:dramsim3::JedecDRAMSystem
override	src/dram_system.h	/^    void ClockTick() override;$/;"	m	class:dramsim3::IdealDRAMSystem
override	src/dram_system.h	/^    void ClockTick() override;$/;"	m	class:dramsim3::JedecDRAMSystem
override	src/hmc.h	/^    bool AddTransaction(AddressPair hex_addr, bool is_write) override;$/;"	m	class:dramsim3::HMCMemorySystem
override	src/hmc.h	/^    bool WillAcceptTransaction(AddressPair hex_addr, bool is_write) const override;$/;"	m	class:dramsim3::HMCMemorySystem
override	src/hmc.h	/^    void ClockTick() override;$/;"	m	class:dramsim3::HMCMemorySystem
owned_value	ext/headers/json.hpp	/^    mutable value_type owned_value = nullptr;$/;"	m	class:nlohmann::detail::json_ref
padded_int_writer	ext/fmt/include/fmt/format.h	/^  struct padded_int_writer {$/;"	s	class:basic_writer
padding	ext/fmt/include/fmt/format.h	/^    std::size_t padding;$/;"	m	struct:basic_writer::padded_int_writer
parallel_cycles_	src/dram_system.h	/^    uint64_t parallel_cycles_;$/;"	m	class:dramsim3::BaseDRAMSystem
parse	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR typename ParseContext::iterator parse(ParseContext &ctx) {$/;"	f	struct:formatter
parse	ext/headers/json.hpp	/^    static basic_json parse(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json
parse	ext/headers/json.hpp	/^    static basic_json parse(detail::input_adapter&& i,$/;"	f	class:nlohmann::basic_json
parse	ext/headers/json.hpp	/^    void parse(const bool strict, BasicJsonType& result)$/;"	f	class:nlohmann::detail::parser
parse_arg_id	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR Iterator parse_arg_id(Iterator it, IDHandler &&handler) {$/;"	f	namespace:internal
parse_arg_id	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR const Char *parse_arg_id($/;"	f	namespace:internal
parse_bson_array	ext/headers/json.hpp	/^    bool parse_bson_array()$/;"	f	class:nlohmann::detail::binary_reader
parse_bson_element_internal	ext/headers/json.hpp	/^    bool parse_bson_element_internal(const int element_type,$/;"	f	class:nlohmann::detail::binary_reader
parse_bson_element_list	ext/headers/json.hpp	/^    bool parse_bson_element_list(const bool is_array)$/;"	f	class:nlohmann::detail::binary_reader
parse_bson_internal	ext/headers/json.hpp	/^    bool parse_bson_internal()$/;"	f	class:nlohmann::detail::binary_reader
parse_cbor_internal	ext/headers/json.hpp	/^    bool parse_cbor_internal(const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader
parse_context	ext/fmt/include/fmt/core.h	/^  basic_parse_context<char_type> &parse_context() { return parse_context_; }$/;"	f	class:internal::context_base
parse_context	ext/fmt/include/fmt/core.h	/^typedef basic_parse_context<char> parse_context;$/;"	t
parse_context_	ext/fmt/include/fmt/core.h	/^  basic_parse_context<Char> parse_context_;$/;"	m	class:internal::context_base
parse_context_type	ext/fmt/include/fmt/format.h	/^  typedef basic_parse_context<Char, ErrorHandler> parse_context_type;$/;"	t	class:internal::format_string_checker
parse_error	ext/headers/json.hpp	/^        parse_error,      \/\/\/< indicating a parse error$/;"	m	class:nlohmann::detail::lexer::token_type
parse_error	ext/headers/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const detail::exception& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor
parse_error	ext/headers/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
parse_error	ext/headers/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:nlohmann::detail::json_sax_dom_parser
parse_error	ext/headers/json.hpp	/^    parse_error(int id_, std::size_t byte_, const char* what_arg)$/;"	f	class:nlohmann::detail::parse_error
parse_error	ext/headers/json.hpp	/^class parse_error : public exception$/;"	c	namespace:nlohmann::detail
parse_event_t	ext/headers/json.hpp	/^    enum class parse_event_t : uint8_t$/;"	c	class:nlohmann::detail::parser
parse_format_specs	ext/fmt/include/fmt/format.h	/^    parse_format_specs(ParseContext &ctx) {$/;"	f	namespace:internal
parse_format_specs	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR Iterator parse_format_specs(Iterator it, SpecHandler &&handler) {$/;"	f	namespace:internal
parse_format_string	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void parse_format_string($/;"	f	namespace:internal
parse_func	ext/fmt/include/fmt/format.h	/^  typedef const Char *(*parse_func)(parse_context_type &);$/;"	t	class:internal::format_string_checker
parse_funcs_	ext/fmt/include/fmt/format.h	/^  parse_func parse_funcs_[NUM_ARGS > 0 ? NUM_ARGS : 1];$/;"	m	class:internal::format_string_checker
parse_msgpack_internal	ext/headers/json.hpp	/^    bool parse_msgpack_internal()$/;"	f	class:nlohmann::detail::binary_reader
parse_nonnegative_int	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR unsigned parse_nonnegative_int($/;"	f	namespace:internal
parse_nonnegative_int	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR unsigned parse_nonnegative_int(Iterator &it, ErrorHandler &&eh) {$/;"	f	namespace:internal
parse_ubjson_internal	ext/headers/json.hpp	/^    bool parse_ubjson_internal(const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader
parser	ext/headers/json.hpp	/^    explicit parser(detail::input_adapter_t&& adapter,$/;"	f	class:nlohmann::detail::parser
parser	ext/headers/json.hpp	/^class parser$/;"	c	namespace:nlohmann::detail
parser	scripts/batch_run.py	/^    parser = argparse.ArgumentParser(description="Run a batch of simulation"$/;"	v
parser	scripts/final_PowerTemperature_map.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	scripts/heatmap.py	/^    parser = argparse.ArgumentParser(description="Plot power and temperature heatmap")$/;"	v
parser	scripts/plot_stats.py	/^    parser = argparse.ArgumentParser(description='Plot time serie graphs from '$/;"	v
parser	scripts/trace_gen.py	/^    parser = argparse.ArgumentParser($/;"	v
patch	ext/headers/json.hpp	/^    basic_json patch(const basic_json& json_patch) const$/;"	f	class:nlohmann::basic_json
pending_cp_q_	src/controller.h	/^    std::multimap<AddressPair, Transaction> pending_cp_q_;$/;"	m	class:dramsim3::Controller
pending_rd_q_	src/controller.h	/^    std::multimap<AddressPair, Transaction> pending_rd_q_;$/;"	m	class:dramsim3::Controller
pending_wr_q_	src/controller.h	/^    std::multimap<AddressPair, Transaction> pending_wr_q_;$/;"	m	class:dramsim3::Controller
performOptionalSelector	ext/headers/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
plot_bank_patch	scripts/heatmap.py	/^def plot_bank_patch(bank_line_data, fig_axes, show_num=True):$/;"	f
plot_epochs	scripts/plot_stats.py	/^def plot_epochs(json_data, label, unit="", output=None):$/;"	f
plot_heatmap	scripts/heatmap.py	/^def plot_heatmap(x, y, t, title, save_to=""):$/;"	f
plot_histogram	scripts/plot_stats.py	/^def plot_histogram(json_data, label, unit='', output=None):$/;"	f
plot_multi_rank_heatmap	scripts/heatmap.py	/^def plot_multi_rank_heatmap(multi_rank_data, save_to=""):$/;"	f
plot_simulation	scripts/heatmap.py	/^def plot_simulation(stats_csv_file, bank_pos_file):$/;"	f
plot_sub_heatmap	scripts/heatmap.py	/^def plot_sub_heatmap(fig, ax, x, y, t, title):$/;"	f
plus	ext/headers/json.hpp	/^    diyfp plus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries
pointer	ext/fmt/include/fmt/core.h	/^    const void *pointer;$/;"	m	union:internal::value::__anon14
pointer	ext/fmt/include/fmt/format.h	/^  typedef T* pointer;$/;"	t	class:internal::counting_iterator
pointer	ext/fmt/include/fmt/format.h	/^  typedef const Char* pointer;$/;"	t	class:internal::null_terminating_iterator
pointer	ext/fmt/include/fmt/format.h	/^  typedef void pointer;$/;"	t	class:internal::truncating_iterator_base
pointer_from	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR const Char *pointer_from(null_terminating_iterator<Char> it) {$/;"	f	namespace:internal
pointer_from	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR const T *pointer_from(const T *p) { return p; }$/;"	f	namespace:internal
pointer_type	ext/fmt/include/fmt/core.h	/^  cstring_type, string_type, pointer_type, custom_type$/;"	e	enum:internal::type
pop_back	ext/headers/json.hpp	/^    std::string pop_back()$/;"	f	class:nlohmann::json_pointer
pos_file	scripts/final_PowerTemperature_map.py	/^pos_file = "..\/build\/" + args.mem_name + "-output-bank_position.csv"$/;"	v
position	ext/headers/json.hpp	/^    position_t position;$/;"	m	class:nlohmann::detail::lexer
position_string	ext/headers/json.hpp	/^    static std::string position_string(const position_t& pos)$/;"	f	class:nlohmann::detail::parse_error
position_t	ext/headers/json.hpp	/^struct position_t$/;"	s	namespace:nlohmann::detail
power	scripts/final_PowerTemperature_map.py	/^power = np.empty((X+1, Y+1, Z+1))$/;"	v
pre_energy_inc	src/configuration.h	/^    double pre_energy_inc;$/;"	m	class:dramsim3::Config
pre_pd_energy_inc	src/configuration.h	/^    double pre_pd_energy_inc;$/;"	m	class:dramsim3::Config
pre_stb_energy_inc	src/configuration.h	/^    double pre_stb_energy_inc;$/;"	m	class:dramsim3::Config
precision	ext/fmt/include/fmt/format.h	/^  int precision;$/;"	m	struct:core_format_specs
precision_adapter	ext/fmt/include/fmt/format.h	/^  explicit FMT_CONSTEXPR precision_adapter(SpecHandler &h) : handler(h) {}$/;"	f	struct:internal::precision_adapter
precision_adapter	ext/fmt/include/fmt/format.h	/^struct precision_adapter {$/;"	s	namespace:internal
precision_checker	ext/fmt/include/fmt/format.h	/^  explicit FMT_CONSTEXPR precision_checker(ErrorHandler &eh) : handler_(eh) {}$/;"	f	class:internal::precision_checker
precision_checker	ext/fmt/include/fmt/format.h	/^class precision_checker: public function<unsigned long long> {$/;"	c	namespace:internal
precision_ref	ext/fmt/include/fmt/format.h	/^  arg_ref<Char> precision_ref;$/;"	m	struct:internal::dynamic_format_specs
prefix	ext/fmt/include/fmt/format.h	/^    char prefix[4];$/;"	m	struct:basic_writer::int_writer
prefix	ext/fmt/include/fmt/format.h	/^    string_view prefix;$/;"	m	struct:basic_writer::padded_int_writer
prefix	scripts/batch_run.py	/^            prefix = os.path.join(args.output_dir, prefix)$/;"	v
prefix	scripts/batch_run.py	/^        prefix = parse_config.get_val_from_file(c, "other", "output_prefix")$/;"	v
prefix	scripts/heatmap.py	/^    prefix = args.prefix$/;"	v
prefix	scripts/plot_stats.py	/^    prefix = os.path.join(args.dir, args.output)$/;"	v
prefix_size	ext/fmt/include/fmt/format.h	/^    unsigned prefix_size;$/;"	m	struct:basic_writer::int_writer
prep_fig_axes	scripts/heatmap.py	/^def prep_fig_axes(num_plots):$/;"	f
prettify_handler	ext/fmt/include/fmt/format-inl.h	/^  explicit prettify_handler(buffer &b, size_t n)$/;"	f	struct:internal::prettify_handler
prettify_handler	ext/fmt/include/fmt/format-inl.h	/^struct prettify_handler {$/;"	s	namespace:internal
primitive_iterator_t	ext/headers/json.hpp	/^class primitive_iterator_t$/;"	c	namespace:nlohmann::detail
printFlag	src/command_queue.cc	/^void CommandQueue::printFlag(){$/;"	f	class:dramsim3::CommandQueue
print_pairs_	src/simple_stats.h	/^    std::vector<std::pair<std::string, std::string> > print_pairs_;$/;"	m	class:dramsim3::SimpleStats
priority_tag	ext/headers/json.hpp	/^template<> struct priority_tag<0> {};$/;"	s	namespace:nlohmann::detail
priority_tag	ext/headers/json.hpp	/^template<unsigned N> struct priority_tag : priority_tag < N - 1 > {};$/;"	s	namespace:nlohmann::detail
process_configs	scripts/batch_run.py	/^def process_configs(args):$/;"	f
process_specs	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC gen_digits_params process_specs(const core_format_specs &specs,$/;"	f	namespace:internal
prog	ext/headers/args.hxx	/^            std::string prog;$/;"	m	class:argstest::ArgumentParser
progindent	ext/headers/args.hxx	/^                unsigned int progindent = 2;$/;"	m	struct:argstest::ArgumentParser::HelpParams
proglinePostfix	ext/headers/args.hxx	/^            std::string proglinePostfix;$/;"	m	class:argstest::ArgumentParser
progtailindent	ext/headers/args.hxx	/^                unsigned int progtailindent = 4;$/;"	m	struct:argstest::ArgumentParser::HelpParams
protocol	src/configuration.h	/^    DRAMProtocol protocol;$/;"	m	class:dramsim3::Config
ps_per_dram_	src/hmc.h	/^    uint64_t logic_clk_, ps_per_dram_, ps_per_logic_, logic_ps_, dram_ps_;$/;"	m	class:dramsim3::HMCMemorySystem
ps_per_logic_	src/hmc.h	/^    uint64_t logic_clk_, ps_per_dram_, ps_per_logic_, logic_ps_, dram_ps_;$/;"	m	class:dramsim3::HMCMemorySystem
ptr	ext/fmt/include/fmt/format.h	/^inline const void *ptr(const T *p) { return p; }$/;"	f
ptr_	ext/fmt/include/fmt/core.h	/^  T *ptr_;$/;"	m	class:internal::basic_buffer
ptr_	ext/fmt/include/fmt/format.h	/^  const Char *ptr_;$/;"	m	class:internal::null_terminating_iterator
pure_config_name	scripts/batch_run.py	/^        pure_config_name = os.path.basename(c)[:-4]$/;"	v
pure_config_names	scripts/batch_run.py	/^    pure_config_names = []$/;"	v
push_back	ext/fmt/include/fmt/core.h	/^  void push_back(const T &value) {$/;"	f	class:internal::basic_buffer
push_back	ext/fmt/include/fmt/core.h	/^  void push_back(value<Context> val) {$/;"	f	class:internal::arg_map
push_back	ext/headers/json.hpp	/^    void push_back(basic_json&& val)$/;"	f	class:nlohmann::basic_json
push_back	ext/headers/json.hpp	/^    void push_back(const basic_json& val)$/;"	f	class:nlohmann::basic_json
push_back	ext/headers/json.hpp	/^    void push_back(const std::string& tok)$/;"	f	class:nlohmann::json_pointer
push_back	ext/headers/json.hpp	/^    void push_back(const typename object_t::value_type& val)$/;"	f	class:nlohmann::basic_json
push_back	ext/headers/json.hpp	/^    void push_back(initializer_list_t init)$/;"	f	class:nlohmann::basic_json
qnxnto	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
quad	src/hmc.h	/^    int quad;$/;"	m	class:dramsim3::HMCRequest
quad	src/hmc.h	/^    int quad;$/;"	m	class:dramsim3::HMCResponse
quad_age_counter_	src/hmc.h	/^    std::vector<int> quad_age_counter_ = {0, 0, 0, 0};$/;"	m	class:dramsim3::HMCMemorySystem
quad_busy_	src/hmc.h	/^    std::vector<int> quad_busy_ = {0, 0, 0, 0};$/;"	m	class:dramsim3::HMCMemorySystem
quad_req_queues_	src/hmc.h	/^    std::vector<std::vector<HMCRequest*>> quad_req_queues_;$/;"	m	class:dramsim3::HMCMemorySystem
quad_resp_queues_	src/hmc.h	/^    std::vector<std::vector<HMCResponse*>> quad_resp_queues_;$/;"	m	class:dramsim3::HMCMemorySystem
queue_depth_	src/hmc.h	/^    size_t queue_depth_;$/;"	m	class:dramsim3::HMCMemorySystem
queue_idx_	src/command_queue.h	/^    int queue_idx_;$/;"	m	class:dramsim3::CommandQueue
queue_size_	src/command_queue.h	/^    size_t queue_size_;$/;"	m	class:dramsim3::CommandQueue
queue_structure	src/configuration.h	/^    std::string queue_structure;$/;"	m	class:dramsim3::Config
queue_structure_	src/command_queue.h	/^    QueueStructure queue_structure_;$/;"	m	class:dramsim3::CommandQueue
queues_	src/command_queue.h	/^    std::vector<CMDQueue> queues_;$/;"	m	class:dramsim3::CommandQueue
ra_mask	src/configuration.h	/^    uint64_t ch_mask, ra_mask, bg_mask, ba_mask, ro_mask, co_mask;$/;"	m	class:dramsim3::Config
ra_pos	src/configuration.h	/^    int ch_pos, ra_pos, bg_pos, ba_pos, ro_pos, co_pos;$/;"	m	class:dramsim3::Config
range	ext/fmt/include/fmt/format.h	/^  typedef Range range;$/;"	t	class:arg_formatter
range	ext/fmt/include/fmt/format.h	/^  typedef typename ArgFormatter::range range;$/;"	t	struct:format_handler
rangeToString	ext/headers/catch.hpp	/^        std::string rangeToString(InputIterator first, InputIterator last) {$/;"	f	namespace:Catch::Detail
rank	src/common.h	/^    int rank;$/;"	m	struct:dramsim3::Address
rank_address_pair_	src/command_queue.h	/^    std::vector<AddressPair> rank_address_pair_;$/;"	m	class:dramsim3::CommandQueue
rank_idle_cycles	src/channel_state.h	/^    std::vector<int> rank_idle_cycles;$/;"	m	class:dramsim3::ChannelState
rank_is_sref_	src/channel_state.h	/^    std::vector<bool> rank_is_sref_;$/;"	m	class:dramsim3::ChannelState
rank_q_empty	src/command_queue.h	/^    std::vector<bool> rank_q_empty;$/;"	m	class:dramsim3::CommandQueue
rank_state_	src/command_queue.h	/^    std::vector<bool> rank_state_;          \/\/ Checking flags that current rank is in copy or not.$/;"	m	class:dramsim3::CommandQueue
ranks	src/configuration.h	/^    int ranks;$/;"	m	class:dramsim3::Config
rawMemoryToString	ext/headers/catch.hpp	/^        std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
read_callback_	src/dram_system.h	/^    std::function<void(AddressPair req_id)> read_callback_, write_callback_;$/;"	m	class:dramsim3::BaseDRAMSystem
read_delay	src/configuration.h	/^    int read_delay;$/;"	m	class:dramsim3::Config
read_energy_inc	src/configuration.h	/^    double read_energy_inc;$/;"	m	class:dramsim3::Config
read_queue_	src/controller.h	/^    std::vector<Transaction> read_queue_;$/;"	m	class:dramsim3::Controller
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::MapFlag
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::MapFlagList
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::MapPositional
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::MapPositionalList
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::Positional
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::PositionalList
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::ValueFlag
reader	ext/headers/args.hxx	/^            Reader reader;$/;"	m	class:argstest::ValueFlagList
reader_	src/configuration.h	/^    INIReader* reader_;$/;"	m	class:dramsim3::Config
ready	ext/headers/args.hxx	/^            bool ready;$/;"	m	class:argstest::PositionalBase
ref_energy_inc	src/configuration.h	/^    double ref_energy_inc;$/;"	m	class:dramsim3::Config
ref_q_indices_	src/command_queue.h	/^    std::unordered_set<int> ref_q_indices_;$/;"	m	class:dramsim3::CommandQueue
ref_stack	ext/headers/json.hpp	/^    std::vector<BasicJsonType*> ref_stack;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
ref_stack	ext/headers/json.hpp	/^    std::vector<BasicJsonType*> ref_stack;$/;"	m	class:nlohmann::detail::json_sax_dom_parser
refb_energy_inc	src/configuration.h	/^    double refb_energy_inc;$/;"	m	class:dramsim3::Config
reference	ext/fmt/include/fmt/format.h	/^  typedef T& reference;$/;"	t	class:internal::counting_iterator
reference	ext/fmt/include/fmt/format.h	/^  typedef const Char& reference;$/;"	t	class:internal::null_terminating_iterator
reference	ext/fmt/include/fmt/format.h	/^  typedef void reference;$/;"	t	class:internal::truncating_iterator_base
reference_tokens	ext/headers/json.hpp	/^    std::vector<std::string> reference_tokens;$/;"	m	class:nlohmann::json_pointer
refresh_	src/controller.h	/^    Refresh refresh_;$/;"	m	class:dramsim3::Controller
refresh_count	src/thermal.h	/^    std::vector<std::vector<int>> refresh_count;$/;"	m	class:dramsim3::ThermalCalculator
refresh_interval_	src/refresh.h	/^    int refresh_interval_;$/;"	m	class:dramsim3::Refresh
refresh_policy	src/configuration.h	/^    RefreshPolicy refresh_policy;$/;"	m	class:dramsim3::Config
refresh_policy_	src/refresh.h	/^    RefreshPolicy refresh_policy_;$/;"	m	class:dramsim3::Refresh
refresh_q_	src/channel_state.h	/^    std::vector<Command> refresh_q_;$/;"	m	class:dramsim3::ChannelState
reinterpret_bits	ext/headers/json.hpp	/^Target reinterpret_bits(const Source source)$/;"	f	namespace:nlohmann::detail::dtoa_impl
remove_prefix	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR void remove_prefix(size_t n) {$/;"	f	class:basic_string_view
remove_trailing	ext/fmt/include/fmt/format-inl.h	/^  void remove_trailing(char c) {$/;"	f	struct:internal::prettify_handler
remove_trailing	ext/fmt/include/fmt/format-inl.h	/^  void remove_trailing(char) {}$/;"	f	struct:internal::char_counter
repeat_	src/thermal_replay.h	/^    uint64_t repeat_;$/;"	m	class:dramsim3::ThermalReplay
replace	ext/headers/json.hpp	/^    replace, \/\/\/< replace invalid UTF-8 sequences with U+FFFD$/;"	m	class:nlohmann::detail::error_handler_t
replace_substring	ext/headers/json.hpp	/^    static void replace_substring(std::string& s, const std::string& f,$/;"	f	class:nlohmann::json_pointer
request_size_bytes	src/configuration.h	/^    int request_size_bytes;$/;"	m	class:dramsim3::Config
require_numeric_argument	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR void require_numeric_argument() {$/;"	f	class:internal::specs_checker
reserve	ext/fmt/include/fmt/core.h	/^  void reserve(std::size_t new_capacity) {$/;"	f	class:internal::basic_buffer
reserve	ext/fmt/include/fmt/format.h	/^    reserve(std::back_insert_iterator<Container> &it, std::size_t n) {$/;"	f	namespace:internal
reserve	ext/fmt/include/fmt/format.h	/^  auto reserve(std::size_t n) -> decltype(internal::reserve(out_, n)) {$/;"	f	class:basic_writer
reserve	ext/fmt/include/fmt/format.h	/^inline Iterator &reserve(Iterator &it, std::size_t) { return it; }$/;"	f	namespace:internal
resize	ext/fmt/include/fmt/core.h	/^  void resize(std::size_t new_size) {$/;"	f	class:internal::basic_buffer
resp_id	src/hmc.h	/^    uint64_t resp_id;$/;"	m	class:dramsim3::HMCResponse
resp_lookup_table_	src/hmc.h	/^    std::multimap<uint64_t, HMCResponse*> resp_lookup_table_;$/;"	m	class:dramsim3::HMCMemorySystem
result	ext/fmt/include/fmt/core.h	/^  typedef decltype(to_string_view(declval<S>())) result;$/;"	t	struct:internal::char_t
result	ext/fmt/include/fmt/format.h	/^  struct result { typedef Result type; };$/;"	s	struct:internal::function
result	ext/fmt/include/fmt/format.h	/^  typedef typename std::remove_reference<type>::type result;$/;"	t	class:internal::is_output_iterator
resultDisposition	ext/headers/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
result_of	ext/fmt/include/fmt/core.h	/^struct result_of<F(Args...)> {$/;"	s	namespace:internal
return_queue_	src/controller.h	/^    std::vector<Transaction> return_queue_;$/;"	m	class:dramsim3::Controller
rewrap	ext/headers/catch.hpp	/^    struct rewrap<Container, List<Elems...>, Elements...> {$/;"	s	namespace:Catch
rewrap	ext/headers/catch.hpp	/^struct rewrap<Container, List<elems...>> {$/;"	s	namespace:Catch
ro_mask	src/configuration.h	/^    uint64_t ch_mask, ra_mask, bg_mask, ba_mask, ro_mask, co_mask;$/;"	m	class:dramsim3::Config
ro_pos	src/configuration.h	/^    int ch_pos, ra_pos, bg_pos, ba_pos, ro_pos, co_pos;$/;"	m	class:dramsim3::Config
root	ext/headers/json.hpp	/^    BasicJsonType& root;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser
root	ext/headers/json.hpp	/^    BasicJsonType& root;$/;"	m	class:nlohmann::detail::json_sax_dom_parser
rot	scripts/final_PowerTemperature_map.py	/^				rot = 0$/;"	v
row	src/common.h	/^    int row;$/;"	m	struct:dramsim3::Address
row_buf_policy	src/configuration.h	/^    std::string row_buf_policy;$/;"	m	class:dramsim3::Config
row_buf_policy_	src/controller.h	/^    RowBufPolicy row_buf_policy_;$/;"	m	class:dramsim3::Controller
row_hit_count_	src/bankstate.h	/^    int row_hit_count_;$/;"	m	class:dramsim3::BankState
row_tile	src/configuration.h	/^    int row_tile;$/;"	m	class:dramsim3::Config
rows	src/configuration.h	/^    int rows;$/;"	m	class:dramsim3::Config
rstrip	ext/headers/INIReader.h	/^inline static char* rstrip(char* s)$/;"	f
s	ext/fmt/include/fmt/format.h	/^    const Char *s;$/;"	m	struct:basic_writer::str_writer
s_empty	ext/headers/catch.hpp	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef
same_bank	src/timing.h	/^    std::vector<std::vector<std::pair<CommandType, int> > > same_bank;$/;"	m	class:dramsim3::Timing
same_rank	src/timing.h	/^    std::vector<std::vector<std::pair<CommandType, int> > > same_rank;$/;"	m	class:dramsim3::Timing
sample_id	src/thermal.h	/^    int sample_id;  \/\/ index of the sampling power$/;"	m	class:dramsim3::ThermalCalculator
save_figs	scripts/heatmap.py	/^def save_figs(figs, prefix, img_format="png"):$/;"	f
sax	ext/headers/json.hpp	/^    json_sax_t* sax = nullptr;$/;"	m	class:nlohmann::detail::binary_reader
sax_parse	ext/headers/json.hpp	/^    bool sax_parse(SAX* sax, const bool strict = true)$/;"	f	class:nlohmann::detail::parser
sax_parse	ext/headers/json.hpp	/^    bool sax_parse(const input_format_t format,$/;"	f	class:nlohmann::detail::binary_reader
sax_parse	ext/headers/json.hpp	/^    static bool sax_parse(IteratorType first, IteratorType last, SAX* sax)$/;"	f	class:nlohmann::basic_json
sax_parse	ext/headers/json.hpp	/^    static bool sax_parse(detail::input_adapter&& i, SAX* sax,$/;"	f	class:nlohmann::basic_json
sax_parse_internal	ext/headers/json.hpp	/^    bool sax_parse_internal(SAX* sax)$/;"	f	class:nlohmann::detail::parser
sb	ext/headers/json.hpp	/^    std::streambuf& sb;$/;"	m	class:nlohmann::detail::input_stream_adapter
scan	ext/headers/json.hpp	/^    token_type scan()$/;"	f	class:nlohmann::detail::lexer
scan_literal	ext/headers/json.hpp	/^    token_type scan_literal(const char* literal_text, const std::size_t length,$/;"	f	class:nlohmann::detail::lexer
scan_number	ext/headers/json.hpp	/^    token_type scan_number()  \/\/ lgtm [cpp\/use-of-goto]$/;"	f	class:nlohmann::detail::lexer
scan_string	ext/headers/json.hpp	/^    token_type scan_string()$/;"	f	class:nlohmann::detail::lexer
self	ext/fmt/include/fmt/format.h	/^      int_writer &self;$/;"	m	struct:basic_writer::int_writer::hex_writer
sentinel	ext/fmt/include/fmt/format.h	/^  typedef void sentinel;$/;"	t	class:output_range
sep	ext/fmt/include/fmt/format.h	/^      char_type sep;$/;"	m	struct:basic_writer::int_writer::num_writer
sep	ext/fmt/include/fmt/format.h	/^  basic_string_view<Char> sep;$/;"	m	struct:arg_join
sep_	ext/fmt/include/fmt/format.h	/^  basic_string_view<Char> sep_;$/;"	m	class:internal::add_thousands_sep
serial_cycles_	src/dram_system.h	/^    uint64_t serial_cycles_;$/;"	m	class:dramsim3::BaseDRAMSystem
serializer	ext/headers/json.hpp	/^    serializer(output_adapter_t<char> s, const char ichar,$/;"	f	class:nlohmann::detail::serializer
serializer	ext/headers/json.hpp	/^class serializer$/;"	c	namespace:nlohmann::detail
set_dynamic_spec	ext/fmt/include/fmt/format.h	/^FMT_CONSTEXPR void set_dynamic_spec($/;"	f	namespace:internal
shift_bits	src/configuration.h	/^    int shift_bits;$/;"	m	class:dramsim3::Config
shortFlag	ext/headers/args.hxx	/^        const char shortFlag;$/;"	m	struct:argstest::EitherFlag
shortFlags	ext/headers/args.hxx	/^            const std::unordered_set<char> shortFlags;$/;"	m	class:argstest::Matcher
shortprefix	ext/headers/args.hxx	/^            std::string shortprefix;$/;"	m	class:argstest::ArgumentParser
showProglineOptions	ext/headers/args.hxx	/^                bool showProglineOptions = true;$/;"	m	struct:argstest::ArgumentParser::HelpParams
showProglinePositionals	ext/headers/args.hxx	/^                bool showProglinePositionals = true;$/;"	m	struct:argstest::ArgumentParser::HelpParams
showTerminator	ext/headers/args.hxx	/^                bool showTerminator = true;$/;"	m	struct:argstest::ArgumentParser::HelpParams
sign	ext/fmt/include/fmt/format.h	/^    char sign;$/;"	m	struct:basic_writer::double_writer
sign	ext/fmt/include/fmt/format.h	/^    char sign;$/;"	m	struct:basic_writer::inf_or_nan_writer
significand_size	ext/fmt/include/fmt/format-inl.h	/^  static FMT_CONSTEXPR_DECL const int significand_size =$/;"	m	class:internal::fp
significand_type	ext/fmt/include/fmt/format-inl.h	/^  typedef uint64_t significand_type;$/;"	t	class:internal::fp
simple_stats_	src/command_queue.h	/^    SimpleStats& simple_stats_;$/;"	m	class:dramsim3::CommandQueue
simple_stats_	src/controller.h	/^    SimpleStats simple_stats_;$/;"	m	class:dramsim3::Controller
size	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR size_t size() const { return size_; }$/;"	f	class:basic_string_view
size	ext/fmt/include/fmt/core.h	/^  std::size_t size;$/;"	m	struct:internal::string_value
size	ext/fmt/include/fmt/format-inl.h	/^  size_t size;$/;"	m	struct:internal::char_counter
size	ext/fmt/include/fmt/format-inl.h	/^  size_t size;$/;"	m	struct:internal::prettify_handler
size	ext/fmt/include/fmt/format.h	/^      unsigned size;$/;"	m	struct:basic_writer::int_writer::num_writer
size	ext/fmt/include/fmt/format.h	/^    size_t size() const { return 1; }$/;"	f	struct:internal::arg_formatter_base::char_writer
size	ext/fmt/include/fmt/format.h	/^    size_t size() const { return buffer.size() + (sign ? 1 : 0); }$/;"	f	struct:basic_writer::double_writer
size	ext/fmt/include/fmt/format.h	/^    size_t size() const { return size_; }$/;"	f	struct:basic_writer::padded_int_writer
size	ext/fmt/include/fmt/format.h	/^    size_t size() const { return size_; }$/;"	f	struct:basic_writer::str_writer
size	ext/fmt/include/fmt/format.h	/^    size_t size() const {$/;"	f	struct:basic_writer::inf_or_nan_writer
size	ext/fmt/include/fmt/format.h	/^  enum { size = 0 };$/;"	e	enum:internal::no_thousands_sep::__anon4
size	ext/fmt/include/fmt/format.h	/^  enum { size = 1 };$/;"	e	enum:internal::add_thousands_sep::__anon5
size	ext/fmt/include/fmt/format.h	/^  size_t size() const { return buffer_.size() - 1; }$/;"	f	class:internal::utf16_to_utf8
size	ext/fmt/include/fmt/format.h	/^  size_t size() const { return buffer_.size() - 1; }$/;"	f	class:internal::utf8_to_utf16
size	ext/fmt/include/fmt/format.h	/^  std::size_t size() const {$/;"	f	class:format_int
size	ext/fmt/include/fmt/format.h	/^  std::size_t size;$/;"	m	struct:format_to_n_result
size_	ext/fmt/include/fmt/core.h	/^    : data_(s), size_(count) {}$/;"	f	class:basic_string_view
size_	ext/fmt/include/fmt/core.h	/^  : data_(s.data()), size_(s.size()) {}$/;"	f	class:basic_string_view
size_	ext/fmt/include/fmt/core.h	/^  size_t size_;$/;"	m	class:basic_string_view
size_	ext/fmt/include/fmt/core.h	/^  std::size_t size_;$/;"	m	class:internal::basic_buffer
size_	ext/fmt/include/fmt/core.h	/^  unsigned size_;$/;"	m	class:internal::arg_map
size_	ext/fmt/include/fmt/format.h	/^    size_t size_;$/;"	m	struct:basic_writer::padded_int_writer
size_	ext/fmt/include/fmt/format.h	/^    size_t size_;$/;"	m	struct:basic_writer::str_writer
skip_bom	ext/headers/json.hpp	/^    bool skip_bom()$/;"	f	class:nlohmann::detail::lexer
sp_ienv	src/sp_ienv.c	/^int_t sp_ienv(int_t ispec) {$/;"	f
spec	ext/fmt/include/fmt/format.h	/^    const Spec &spec;$/;"	m	struct:basic_writer::int_writer
spec	ext/fmt/include/fmt/format.h	/^  format_specs *spec() { return specs_; }$/;"	f	class:internal::arg_formatter_base
specs_	ext/fmt/include/fmt/format.h	/^  basic_format_specs<Char> &specs_;$/;"	m	class:internal::specs_setter
specs_	ext/fmt/include/fmt/format.h	/^  dynamic_format_specs<char_type> &specs_;$/;"	m	class:internal::dynamic_specs_handler
specs_	ext/fmt/include/fmt/format.h	/^  format_specs *specs_;$/;"	m	class:internal::arg_formatter_base
specs_	ext/fmt/include/fmt/format.h	/^  internal::dynamic_format_specs<Char> specs_;$/;"	m	class:dynamic_formatter
specs_	ext/fmt/include/fmt/format.h	/^  internal::dynamic_format_specs<Char> specs_;$/;"	m	struct:formatter
specs_checker	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR specs_checker(const Handler& handler, internal::type arg_type)$/;"	f	class:internal::specs_checker
specs_checker	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR specs_checker(const specs_checker &other)$/;"	f	class:internal::specs_checker
specs_checker	ext/fmt/include/fmt/format.h	/^class specs_checker : public Handler {$/;"	c	namespace:internal
specs_handler	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR specs_handler($/;"	f	class:internal::specs_handler
specs_handler	ext/fmt/include/fmt/format.h	/^class specs_handler: public specs_setter<typename Context::char_type> {$/;"	c	namespace:internal
specs_setter	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR specs_setter(const specs_setter &other): specs_(other.specs_) {}$/;"	f	class:internal::specs_setter
specs_setter	ext/fmt/include/fmt/format.h	/^  explicit FMT_CONSTEXPR specs_setter(basic_format_specs<Char> &specs):$/;"	f	class:internal::specs_setter
specs_setter	ext/fmt/include/fmt/format.h	/^class specs_setter {$/;"	c	namespace:internal
split	ext/headers/json.hpp	/^    static std::vector<std::string> split(const std::string& reference_string)$/;"	f	class:nlohmann::json_pointer
sprintf_format	ext/fmt/include/fmt/format-inl.h	/^void sprintf_format(Double value, internal::buffer &buffer,$/;"	f	namespace:internal
square_array	src/thermal.cc	/^int ThermalCalculator::square_array(int total_grids_) {$/;"	f	class:dramsim3::ThermalCalculator
src_addr	src/common.h	/^        uint64_t src_addr, dest_addr;$/;"	m	class:dramsim3::AddressPair
sref_energy_inc	src/configuration.h	/^    double sref_energy_inc;$/;"	m	class:dramsim3::Config
sref_threshold	src/configuration.h	/^    int sref_threshold;$/;"	m	class:dramsim3::Config
sstring	ext/fmt/include/fmt/core.h	/^    string_value<signed char> sstring;$/;"	m	union:internal::value::__anon14
start_array	ext/headers/json.hpp	/^    bool start_array(std::size_t  \/*unused*\/ = std::size_t(-1))$/;"	f	class:nlohmann::detail::json_sax_acceptor
start_array	ext/headers/json.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
start_array	ext/headers/json.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
start_object	ext/headers/json.hpp	/^    bool start_object(std::size_t  \/*unused*\/ = std::size_t(-1))$/;"	f	class:nlohmann::detail::json_sax_acceptor
start_object	ext/headers/json.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
start_object	ext/headers/json.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
startcount	ext/headers/args.hxx	/^            const int startcount;$/;"	m	class:argstest::CounterFlag
state_	src/bankstate.h	/^    State state_;$/;"	m	class:dramsim3::BankState
static_const	ext/headers/json.hpp	/^struct static_const$/;"	s	namespace:nlohmann::detail
stats_csvs	scripts/batch_run.py	/^    stats_csvs = []$/;"	v
std	ext/fmt/include/fmt/format.h	/^namespace std {$/;"	n
std	ext/headers/json.hpp	/^namespace std$/;"	n
steady_thermal_solver	src/thermal_solver.c	/^double *steady_thermal_solver(double ***powerM, double W, double Lc, int numP,$/;"	f
store_	ext/fmt/include/fmt/format.h	/^  T store_[SIZE];$/;"	m	class:basic_memory_buffer
str	ext/fmt/include/fmt/format.h	/^    const char *str;$/;"	m	struct:basic_writer::inf_or_nan_writer
str	ext/fmt/include/fmt/format.h	/^  const Char *str;$/;"	m	struct:internal::udl_arg
str	ext/fmt/include/fmt/format.h	/^  std::string str() const { return std::string(&buffer_[0], size()); }$/;"	f	class:internal::utf16_to_utf8
str	ext/fmt/include/fmt/format.h	/^  std::string str() const { return std::string(str_, size()); }$/;"	f	class:format_int
str	ext/fmt/include/fmt/format.h	/^  std::wstring str() const { return std::wstring(&buffer_[0], size()); }$/;"	f	class:internal::utf8_to_utf16
str	ext/headers/json.hpp	/^        : str(s)$/;"	f	class:nlohmann::detail::output_string_adapter
str	ext/headers/json.hpp	/^        : str(w)$/;"	f	class:nlohmann::detail::wide_string_input_adapter
str	ext/headers/json.hpp	/^    StringType& str;$/;"	m	class:nlohmann::detail::output_string_adapter
str	ext/headers/json.hpp	/^    const WideStringType& str;$/;"	m	class:nlohmann::detail::wide_string_input_adapter
str_	ext/fmt/include/fmt/format.h	/^  char *str_;$/;"	m	class:format_int
str_writer	ext/fmt/include/fmt/format.h	/^  struct str_writer {$/;"	s	class:basic_writer
stream	ext/headers/json.hpp	/^        : stream(s)$/;"	f	class:nlohmann::detail::output_stream_adapter
stream	ext/headers/json.hpp	/^    std::basic_ostream<CharType>& stream;$/;"	m	class:nlohmann::detail::output_stream_adapter
stream_type	scripts/trace_gen.py	/^    stream_type = stream_types.get(args.stream_type, 'random')$/;"	v
stream_types	scripts/trace_gen.py	/^    stream_types = {'r': 'random', 'random': 'random',$/;"	v
strerror_r	ext/fmt/include/fmt/format-inl.h	/^inline fmt::internal::null<> strerror_r(int, char *, ...) {$/;"	f
strerror_s	ext/fmt/include/fmt/format-inl.h	/^inline fmt::internal::null<> strerror_s(char *, std::size_t, ...) {$/;"	f
strict	ext/headers/json.hpp	/^    strict,  \/\/\/< throw a type_error exception in case of invalid UTF-8$/;"	m	class:nlohmann::detail::error_handler_t
stride_	src/cpu.h	/^    const int stride_ = 64;                \/\/ stride in bytes$/;"	m	class:dramsim3::StreamCPU
string	ext/fmt/include/fmt/core.h	/^    string_value<char_type> string;$/;"	m	union:internal::value::__anon14
string	ext/headers/catch.hpp	/^        auto str() const -> std::string;$/;"	m	class:Catch::ReusableStringStream::std
string	ext/headers/catch.hpp	/^    auto operator + ( StringRef const& lhs, StringRef const& rhs ) -> std::string;$/;"	m	class:Catch::std
string	ext/headers/catch.hpp	/^    auto operator + ( StringRef const& lhs, char const* rhs ) -> std::string;$/;"	m	class:Catch::std
string	ext/headers/catch.hpp	/^    auto operator + ( char const* lhs, StringRef const& rhs ) -> std::string;$/;"	m	class:Catch::std
string	ext/headers/catch.hpp	/^    auto operator += ( std::string& lhs, StringRef const& sr ) -> std::string&;$/;"	m	class:Catch::std
string	ext/headers/json.hpp	/^        string_t* string;$/;"	m	union:nlohmann::basic_json::json_value
string	ext/headers/json.hpp	/^    bool string(string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor
string	ext/headers/json.hpp	/^    bool string(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
string	ext/headers/json.hpp	/^    bool string(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
string	ext/headers/json.hpp	/^    string,           \/\/\/< string value$/;"	m	class:nlohmann::detail::value_t
string_type	ext/fmt/include/fmt/core.h	/^  cstring_type, string_type, pointer_type, custom_type$/;"	e	enum:internal::type
string_value	ext/fmt/include/fmt/core.h	/^struct string_value {$/;"	s	namespace:internal
string_view	ext/fmt/include/fmt/core.h	/^typedef basic_string_view<char> string_view;$/;"	t
stringify	ext/headers/catch.hpp	/^        inline std::string stringify( NSString* nsstring ) {$/;"	f	namespace:Catch::Detail
stringify	ext/headers/catch.hpp	/^        std::string stringify(const T& e) {$/;"	f	namespace:Catch::Detail
strncpy0	ext/headers/INIReader.h	/^inline static char* strncpy0(char* dest, const char* src, size_t size)$/;"	f
sub_options	scripts/parse_config.py	/^def sub_options(config_file, sec, opt, new_value, inplace=False):$/;"	f
summary_dir	scripts/batch_run.py	/^        summary_dir = "."$/;"	v
summary_dir	scripts/batch_run.py	/^        summary_dir = args.output_dir$/;"	v
swap	ext/headers/json.hpp	/^    void swap(array_t& other)$/;"	f	class:nlohmann::basic_json
swap	ext/headers/json.hpp	/^    void swap(object_t& other)$/;"	f	class:nlohmann::basic_json
swap	ext/headers/json.hpp	/^    void swap(string_t& other)$/;"	f	class:nlohmann::basic_json
system_error	ext/fmt/include/fmt/format.h	/^  system_error() : std::runtime_error("") {}$/;"	f	class:system_error
system_error	ext/fmt/include/fmt/format.h	/^  system_error(int error_code, string_view message, const Args &... args)$/;"	f	class:system_error
system_error	ext/fmt/include/fmt/format.h	/^class system_error : public std::runtime_error {$/;"	c
t32AW	src/configuration.h	/^    int t32AW;$/;"	m	class:dramsim3::Config
tCCD_L	src/configuration.h	/^    int tCCD_L;$/;"	m	class:dramsim3::Config
tCCD_S	src/configuration.h	/^    int tCCD_S;$/;"	m	class:dramsim3::Config
tCK	src/configuration.h	/^    double tCK;$/;"	m	class:dramsim3::Config
tCKE	src/configuration.h	/^    int tCKE;$/;"	m	class:dramsim3::Config
tCKESR	src/configuration.h	/^    int tCKESR;$/;"	m	class:dramsim3::Config
tFAW	src/configuration.h	/^    int tFAW;$/;"	m	class:dramsim3::Config
tPPD	src/configuration.h	/^    int tPPD;$/;"	m	class:dramsim3::Config
tRAS	src/configuration.h	/^    int tRAS;$/;"	m	class:dramsim3::Config
tRC	src/configuration.h	/^    int tRC;$/;"	m	class:dramsim3::Config
tRCD	src/configuration.h	/^    int tRCD;$/;"	m	class:dramsim3::Config
tRCDRD	src/configuration.h	/^    int tRCDRD;$/;"	m	class:dramsim3::Config
tRCDWR	src/configuration.h	/^    int tRCDWR;$/;"	m	class:dramsim3::Config
tREFI	src/configuration.h	/^    int tREFI;$/;"	m	class:dramsim3::Config
tREFIb	src/configuration.h	/^    int tREFIb;$/;"	m	class:dramsim3::Config
tRFC	src/configuration.h	/^    int tRFC;$/;"	m	class:dramsim3::Config
tRFCb	src/configuration.h	/^    int tRFCb;$/;"	m	class:dramsim3::Config
tRP	src/configuration.h	/^    int tRP;$/;"	m	class:dramsim3::Config
tRPRE	src/configuration.h	/^    int tRPRE;  \/\/ read preamble and write preamble are important$/;"	m	class:dramsim3::Config
tRRD_L	src/configuration.h	/^    int tRRD_L;$/;"	m	class:dramsim3::Config
tRRD_S	src/configuration.h	/^    int tRRD_S;$/;"	m	class:dramsim3::Config
tRTP	src/configuration.h	/^    int tRTP;$/;"	m	class:dramsim3::Config
tRTRS	src/configuration.h	/^    int tRTRS;$/;"	m	class:dramsim3::Config
tWPRE	src/configuration.h	/^    int tWPRE;$/;"	m	class:dramsim3::Config
tWR	src/configuration.h	/^    int tWR;$/;"	m	class:dramsim3::Config
tWTR_L	src/configuration.h	/^    int tWTR_L;$/;"	m	class:dramsim3::Config
tWTR_S	src/configuration.h	/^    int tWTR_S;$/;"	m	class:dramsim3::Config
tXP	src/configuration.h	/^    int tXP;$/;"	m	class:dramsim3::Config
tXS	src/configuration.h	/^    int tXS;$/;"	m	class:dramsim3::Config
tags	ext/headers/catch.hpp	/^    StringRef tags;$/;"	m	struct:Catch::NameAndTags
temp_stdout	scripts/batch_run.py	/^            temp_stdout = sys.stdout$/;"	v
temp_stdout	scripts/batch_run.py	/^            temp_stdout = tempfile.TemporaryFile()$/;"	v
temp_stdout	scripts/batch_run.py	/^        temp_stdout = None$/;"	v
temperature	scripts/final_PowerTemperature_map.py	/^temperature = np.empty((X+1, Y+1, Z+1))$/;"	v
terminator	ext/headers/args.hxx	/^            std::string terminator;$/;"	m	class:argstest::ArgumentParser
thermal_calc_	src/controller.h	/^    ThermalCalculator &thermal_calc_;$/;"	m	class:dramsim3::Controller
thermal_calc_	src/dram_system.h	/^    ThermalCalculator thermal_calc_;$/;"	m	class:dramsim3::BaseDRAMSystem
thermal_calc_	src/thermal_replay.h	/^    ThermalCalculator thermal_calc_;$/;"	m	class:dramsim3::ThermalReplay
thirty_two_aw_	src/channel_state.h	/^    std::vector<std::vector<uint64_t> > thirty_two_aw_;$/;"	m	class:dramsim3::ChannelState
thousands_sep	ext/fmt/include/fmt/format.h	/^inline Char thousands_sep(locale_ref loc) {$/;"	f	namespace:internal
thousands_sep	ext/fmt/include/fmt/format.h	/^inline wchar_t thousands_sep(locale_ref loc) {$/;"	f	namespace:internal
thousands_sep	ext/headers/json.hpp	/^    const char thousands_sep = '\\0';$/;"	m	class:nlohmann::detail::serializer
thousands_sep_impl	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC Char thousands_sep_impl(locale_ref loc) {$/;"	f	namespace:internal
tile_row_num	src/configuration.h	/^    int tile_row_num;$/;"	m	class:dramsim3::Config
time_iter	src/thermal.h	/^    int time_iter0, time_iter;$/;"	m	class:dramsim3::ThermalCalculator
time_iter0	src/thermal.h	/^    int time_iter0, time_iter;$/;"	m	class:dramsim3::ThermalCalculator
timed_commands_	src/thermal_replay.h	/^    std::vector<std::pair<uint64_t, Command>> timed_commands_;$/;"	m	class:dramsim3::ThermalReplay
timing_	src/channel_state.h	/^    const Timing& timing_;$/;"	m	class:dramsim3::ChannelState
timing_	src/dram_system.h	/^    Timing timing_;$/;"	m	class:dramsim3::BaseDRAMSystem
title_str	scripts/final_PowerTemperature_map.py	/^	title_str = 'Power (layer' + str(layer) + ')'$/;"	v
to_bson	ext/headers/json.hpp	/^    static std::vector<uint8_t> to_bson(const basic_json& j)$/;"	f	class:nlohmann::basic_json
to_bson	ext/headers/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json
to_bson	ext/headers/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<uint8_t> o)$/;"	f	class:nlohmann::basic_json
to_cbor	ext/headers/json.hpp	/^    static std::vector<uint8_t> to_cbor(const basic_json& j)$/;"	f	class:nlohmann::basic_json
to_cbor	ext/headers/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json
to_cbor	ext/headers/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<uint8_t> o)$/;"	f	class:nlohmann::basic_json
to_char8_t	ext/fmt/include/fmt/format.h	/^inline char8_t to_char8_t(char c) { return static_cast<char8_t>(c); }$/;"	f	namespace:internal
to_chars	ext/headers/json.hpp	/^char* to_chars(char* first, const char* last, FloatType value)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^constexpr const auto& to_json = detail::static_const<detail::to_json_fn>::value;$/;"	m	namespace:nlohmann::__anon2
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const CompatibleString& s)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const T& b)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const T(&arr)[N])$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const std::pair<Args...>& p)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const std::tuple<Args...>& t)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, const std::vector<bool>& e)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	namespace:nlohmann::detail
to_json	ext/headers/json.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	namespace:nlohmann::detail
to_json_fn	ext/headers/json.hpp	/^struct to_json_fn$/;"	s	namespace:nlohmann::detail
to_json_tuple_impl	ext/headers/json.hpp	/^void to_json_tuple_impl(BasicJsonType& j, const Tuple& t, index_sequence<Idx...> \/*unused*\/)$/;"	f	namespace:nlohmann::detail
to_msgpack	ext/headers/json.hpp	/^    static std::vector<uint8_t> to_msgpack(const basic_json& j)$/;"	f	class:nlohmann::basic_json
to_msgpack	ext/headers/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json
to_msgpack	ext/headers/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<uint8_t> o)$/;"	f	class:nlohmann::basic_json
to_string	ext/fmt/include/fmt/format.h	/^std::basic_string<Char> to_string(const basic_memory_buffer<Char, SIZE> &buf) {$/;"	f
to_string	ext/fmt/include/fmt/format.h	/^std::string to_string(const T &value) {$/;"	f
to_string	ext/headers/json.hpp	/^    std::string to_string() const$/;"	f	class:nlohmann::json_pointer
to_string_view	ext/fmt/include/fmt/core.h	/^  to_string_view(FMT_STRING_VIEW<Char> s) { return s; }$/;"	f
to_string_view	ext/fmt/include/fmt/core.h	/^  to_string_view(basic_string_view<Char> s) { return s; }$/;"	f
to_string_view	ext/fmt/include/fmt/core.h	/^  to_string_view(const S &s) { return s; }$/;"	f
to_string_view	ext/fmt/include/fmt/core.h	/^  to_string_view(const std::basic_string<Char> &s) { return s; }$/;"	f
to_string_view	ext/fmt/include/fmt/core.h	/^inline basic_string_view<Char> to_string_view(const Char *s) { return s; }$/;"	f
to_ubjson	ext/headers/json.hpp	/^    static std::vector<uint8_t> to_ubjson(const basic_json& j,$/;"	f	class:nlohmann::basic_json
to_ubjson	ext/headers/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:nlohmann::basic_json
to_ubjson	ext/headers/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<uint8_t> o,$/;"	f	class:nlohmann::basic_json
to_unsigned	ext/fmt/include/fmt/core.h	/^FMT_CONSTEXPR typename std::make_unsigned<Int>::type to_unsigned(Int value) {$/;"	f	namespace:internal
to_wstring	ext/fmt/include/fmt/format.h	/^std::wstring to_wstring(const T &value) {$/;"	f
token_type	ext/headers/json.hpp	/^    enum class token_type$/;"	c	class:nlohmann::detail::lexer
top	ext/headers/json.hpp	/^    json_pointer top() const$/;"	f	class:nlohmann::json_pointer
total_channels_	src/dram_system.cc	/^int BaseDRAMSystem::total_channels_ = 0;$/;"	m	class:dramsim3::BaseDRAMSystem	file:
total_channels_	src/dram_system.h	/^    static int total_channels_;$/;"	m	class:dramsim3::BaseDRAMSystem
trace_file_	src/cpu.h	/^    std::ifstream trace_file_;$/;"	m	class:dramsim3::TraceBasedCPU
trailing_zeros	ext/fmt/include/fmt/format-inl.h	/^  bool trailing_zeros;$/;"	m	struct:internal::gen_digits_params
traits	ext/fmt/include/fmt/format.h	/^  typedef std::iterator_traits<OutputIt> traits;$/;"	t	class:internal::truncating_iterator
trans_	src/cpu.h	/^    Transaction trans_;$/;"	m	class:dramsim3::TraceBasedCPU
trans_queue_size	src/configuration.h	/^    int trans_queue_size;$/;"	m	class:dramsim3::Config
transient_thermal_solver	src/thermal_solver.c	/^double *transient_thermal_solver(double ***powerM, double W, double Lc,$/;"	f
truncating_iterator	ext/fmt/include/fmt/format.h	/^  truncating_iterator(OutputIt out, std::size_t limit)$/;"	f	class:internal::truncating_iterator
truncating_iterator	ext/fmt/include/fmt/format.h	/^class truncating_iterator<OutputIt, std::false_type>:$/;"	c	namespace:internal
truncating_iterator	ext/fmt/include/fmt/format.h	/^class truncating_iterator<OutputIt, std::true_type>:$/;"	c	namespace:internal
truncating_iterator_base	ext/fmt/include/fmt/format.h	/^  truncating_iterator_base(OutputIt out, std::size_t limit)$/;"	f	class:internal::truncating_iterator_base
truncating_iterator_base	ext/fmt/include/fmt/format.h	/^class truncating_iterator_base {$/;"	c	namespace:internal
tuple_element	ext/headers/json.hpp	/^class tuple_element<N, ::nlohmann::detail::iteration_proxy_value<IteratorType >>$/;"	c	namespace:std
tuple_size	ext/headers/json.hpp	/^class tuple_size<::nlohmann::detail::iteration_proxy_value<IteratorType>>$/;"	c	namespace:std
txt_stats_name	src/configuration.h	/^    std::string txt_stats_name;$/;"	m	class:dramsim3::Config
type	ext/fmt/include/fmt/core.h	/^    std::back_insert_iterator<internal::basic_buffer<Char>>, Char> type;$/;"	t	struct:buffer_context
type	ext/fmt/include/fmt/core.h	/^    typename std::remove_reference<F>::type(Args...)>::type type;$/;"	t	struct:internal::result_of
type	ext/fmt/include/fmt/core.h	/^  internal::type type() const { return type_; }$/;"	f	class:basic_format_arg
type	ext/fmt/include/fmt/core.h	/^  struct formatter_type { typedef formatter<T, char_type> type; };$/;"	t	struct:basic_format_context::formatter_type
type	ext/fmt/include/fmt/core.h	/^  typedef typename result::char_type type;$/;"	t	struct:internal::char_t
type	ext/fmt/include/fmt/core.h	/^enum type {$/;"	g	namespace:internal
type	ext/fmt/include/fmt/format.h	/^    typename format_context_t<OutputIt, Char>::type> type;$/;"	t	struct:format_args_t
type	ext/fmt/include/fmt/format.h	/^    typename format_to_n_context<OutputIt, Char>::type> type;$/;"	t	struct:format_to_n_args
type	ext/fmt/include/fmt/format.h	/^  char type;$/;"	m	struct:core_format_specs
type	ext/fmt/include/fmt/format.h	/^  char type;$/;"	m	struct:float_spec_handler
type	ext/fmt/include/fmt/format.h	/^  struct result { typedef Result type; };$/;"	t	struct:internal::function::result
type	ext/fmt/include/fmt/format.h	/^  typedef decltype(test<It>(typename it_category<It>::type{})) type;$/;"	t	class:internal::is_output_iterator
type	ext/fmt/include/fmt/format.h	/^  typedef typename T::iterator_category type;$/;"	t	struct:internal::it_category
type	ext/fmt/include/fmt/format.h	/^struct checked { typedef stdext::checked_array_iterator<T*> type; };$/;"	t	struct:internal::checked
type	ext/fmt/include/fmt/format.h	/^struct format_context_t { typedef basic_format_context<OutputIt, Char> type; };$/;"	t	struct:format_context_t
type	ext/fmt/include/fmt/format.h	/^struct it_category<T*> { typedef std::random_access_iterator_tag type; };$/;"	t	struct:internal::it_category
type	ext/fmt/include/fmt/format.h	/^struct void_ { typedef void type; };$/;"	t	struct:internal::void_
type	src/hmc.h	/^    HMCReqType type;$/;"	m	class:dramsim3::HMCRequest
type	src/hmc.h	/^    HMCRespType type;$/;"	m	class:dramsim3::HMCResponse
type_	ext/fmt/include/fmt/core.h	/^  internal::type type_;$/;"	m	class:basic_format_arg
type_	ext/fmt/include/fmt/format.h	/^  char type_;$/;"	m	class:internal::char_specs_checker
type_error	ext/headers/json.hpp	/^    type_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::type_error
type_error	ext/headers/json.hpp	/^class type_error : public exception$/;"	c	namespace:nlohmann::detail
type_tag	ext/fmt/include/fmt/core.h	/^  static const type type_tag = TYPE;$/;"	m	struct:internal::init
u8string_view	ext/fmt/include/fmt/format.h	/^  u8string_view(const char *s):$/;"	f	class:u8string_view
u8string_view	ext/fmt/include/fmt/format.h	/^class u8string_view : public basic_string_view<char8_t> {$/;"	c
ubjson	ext/headers/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	m	class:nlohmann::detail::input_format_t
udl_arg	ext/fmt/include/fmt/format.h	/^struct udl_arg {$/;"	s	namespace:internal
udl_formatter	ext/fmt/include/fmt/format.h	/^class udl_formatter {$/;"	c	namespace:internal
uint_type	ext/fmt/include/fmt/core.h	/^  int_type, uint_type, long_long_type, ulong_long_type, bool_type, char_type,$/;"	e	enum:internal::type
uint_value	ext/fmt/include/fmt/core.h	/^    unsigned uint_value;$/;"	m	union:internal::value::__anon14
ulong_long_type	ext/fmt/include/fmt/core.h	/^  int_type, uint_type, long_long_type, ulong_long_type, bool_type, char_type,$/;"	e	enum:internal::type
ulong_long_value	ext/fmt/include/fmt/core.h	/^    unsigned long long ulong_long_value;$/;"	m	union:internal::value::__anon14
ulong_type	ext/fmt/include/fmt/core.h	/^                         unsigned, unsigned long long>::type ulong_type;$/;"	t	namespace:internal
unescape	ext/headers/json.hpp	/^    static void unescape(std::string& s)$/;"	f	class:nlohmann::json_pointer
unexpect_eof	ext/headers/json.hpp	/^    bool unexpect_eof(const input_format_t format, const char* context) const$/;"	f	class:nlohmann::detail::binary_reader
unflatten	ext/headers/json.hpp	/^    basic_json unflatten() const$/;"	f	class:nlohmann::basic_json
unflatten	ext/headers/json.hpp	/^    unflatten(const BasicJsonType& value)$/;"	f	class:nlohmann::json_pointer
unget	ext/headers/json.hpp	/^    void unget()$/;"	f	class:nlohmann::detail::lexer
unified_queue	src/configuration.h	/^    bool unified_queue;$/;"	m	class:dramsim3::Config
unified_queue_	src/controller.h	/^    std::vector<Transaction> unified_queue_;$/;"	m	class:dramsim3::Controller
uninitialized	ext/headers/json.hpp	/^        uninitialized,    \/\/\/< indicating the scanner is uninitialized$/;"	m	class:nlohmann::detail::lexer::token_type
unsigned_type	ext/fmt/include/fmt/format.h	/^    typedef typename internal::int_traits<Int>::main_type unsigned_type;$/;"	t	struct:basic_writer::int_writer
update	ext/headers/json.hpp	/^    void update(const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json
update	ext/headers/json.hpp	/^    void update(const_reference j)$/;"	f	class:nlohmann::basic_json
upper	ext/fmt/include/fmt/format-inl.h	/^  bool upper;$/;"	m	struct:internal::gen_digits_params
upper	ext/fmt/include/fmt/format.h	/^  bool upper;$/;"	m	struct:float_spec_handler
ustring	ext/fmt/include/fmt/core.h	/^    string_value<unsigned char> ustring;$/;"	m	union:internal::value::__anon14
utf16_to_utf8	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC internal::utf16_to_utf8::utf16_to_utf8(wstring_view s) {$/;"	f	class:internal::utf16_to_utf8
utf16_to_utf8	ext/fmt/include/fmt/format.h	/^  utf16_to_utf8() {}$/;"	f	class:internal::utf16_to_utf8
utf16_to_utf8	ext/fmt/include/fmt/format.h	/^class utf16_to_utf8 {$/;"	c	namespace:internal
utf8_bytes	ext/headers/json.hpp	/^    std::array<std::char_traits<char>::int_type, 4> utf8_bytes = {{0, 0, 0, 0}};$/;"	m	class:nlohmann::detail::wide_string_input_adapter
utf8_bytes_filled	ext/headers/json.hpp	/^    std::size_t utf8_bytes_filled = 0;$/;"	m	class:nlohmann::detail::wide_string_input_adapter
utf8_bytes_index	ext/headers/json.hpp	/^    std::size_t utf8_bytes_index = 0;$/;"	m	class:nlohmann::detail::wide_string_input_adapter
utf8_to_utf16	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC internal::utf8_to_utf16::utf8_to_utf16(string_view s) {$/;"	f	class:internal::utf8_to_utf16
utf8_to_utf16	ext/fmt/include/fmt/format.h	/^class utf8_to_utf16 {$/;"	c	namespace:internal
v	ext/headers/json.hpp	/^        : v(vec)$/;"	f	class:nlohmann::detail::output_vector_adapter
v	ext/headers/json.hpp	/^    std::vector<CharType>& v;$/;"	m	class:nlohmann::detail::output_vector_adapter
val	ext/fmt/include/fmt/core.h	/^  T val;$/;"	m	struct:internal::init
val	ext/headers/json.hpp	/^    -> decltype(::nlohmann::from_json(std::forward<BasicJsonType>(j), val), void())$/;"	m	struct:nlohmann::adl_serializer
validation	scripts/validation.py	/^    def validation(self):$/;"	m	class:DRAMValidation
validation	scripts/validation.py	/^    validation = None$/;"	v	class:LPDDRValidtion
validator	ext/headers/args.hxx	/^            std::function<bool(const Group &)> validator;$/;"	m	class:argstest::Group
value	ext/fmt/include/fmt/core.h	/^  FMT_CONSTEXPR value(int val = 0) : int_value(val) {}$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  const Char *value;$/;"	m	struct:internal::string_value
value	ext/fmt/include/fmt/core.h	/^  const void *value;$/;"	m	struct:internal::custom_value
value	ext/fmt/include/fmt/core.h	/^  explicit value(const T &val) {$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  static const type value = value_type::type_tag;$/;"	m	struct:internal::get_type
value	ext/fmt/include/fmt/core.h	/^  value(basic_string_view<char_type> val) {$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(const char_type *val) { string.value = val; }$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(const signed char *val) {$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(const unsigned char *val) {$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(const void *val) { pointer = val; }$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(double val) { double_value = val; }$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(long double val) { long_double_value = val; }$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(long long val) { long_long_value = val; }$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(unsigned long long val) { ulong_long_value = val; }$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^  value(unsigned val) { uint_value = val; }$/;"	f	class:internal::value
value	ext/fmt/include/fmt/core.h	/^class value {$/;"	c	namespace:internal
value	ext/fmt/include/fmt/format.h	/^    char_type value;$/;"	m	struct:internal::arg_formatter_base::char_spec_handler
value	ext/fmt/include/fmt/format.h	/^    char_type value;$/;"	m	struct:internal::arg_formatter_base::char_writer
value	ext/fmt/include/fmt/format.h	/^    const char_type *value;$/;"	m	struct:internal::arg_formatter_base::cstring_spec_handler
value	ext/fmt/include/fmt/format.h	/^    value = std::is_integral<T>::value && !std::is_same<T, bool>::value &&$/;"	e	enum:internal::is_integer::__anon7
value	ext/fmt/include/fmt/format.h	/^  static const bool value = !std::is_const<result>::value;$/;"	m	class:internal::is_output_iterator
value	ext/headers/args.hxx	/^            T value;$/;"	m	class:argstest::MapFlag
value	ext/headers/args.hxx	/^            T value;$/;"	m	class:argstest::MapPositional
value	ext/headers/args.hxx	/^            T value;$/;"	m	class:argstest::Positional
value	ext/headers/args.hxx	/^            T value;$/;"	m	class:argstest::ValueFlag
value	ext/headers/catch.hpp	/^            static const bool value = decltype(test<std::ostream, const T&>(0))::value;$/;"	m	class:Catch::Detail::IsStreamInsertable
value	ext/headers/json.hpp	/^    ValueType value(const json_pointer& ptr, const ValueType& default_value) const$/;"	f	class:nlohmann::basic_json
value	ext/headers/json.hpp	/^    ValueType value(const typename object_t::key_type& key, const ValueType& default_value) const$/;"	f	class:nlohmann::basic_json
value	ext/headers/json.hpp	/^    reference value() const$/;"	f	class:nlohmann::detail::iter_impl
value	ext/headers/json.hpp	/^    reference value() const$/;"	f	class:nlohmann::detail::json_reverse_iterator
value	ext/headers/json.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_integer_type_impl
value	ext/headers/json.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_string_type_impl
value	ext/headers/json.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_constructible_string_type_impl
value	ext/headers/json.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_iterator_traits
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::has_from_json
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::has_non_default_from_json
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::has_to_json
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_array_type_impl
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_object_type_impl
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_type_impl
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_constructible_array_type_impl
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_constructible_object_type_impl
value	ext/headers/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_sax
value	ext/headers/json.hpp	/^    string_t value(const json_pointer& ptr, const char* default_value) const$/;"	f	class:nlohmann::basic_json
value	ext/headers/json.hpp	/^    string_t value(const typename object_t::key_type& key, const char* default_value) const$/;"	f	class:nlohmann::basic_json
value	ext/headers/json.hpp	/^    typename IteratorType::reference value() const$/;"	f	class:nlohmann::detail::iteration_proxy_value
value	ext/headers/json.hpp	/^constexpr T static_const<T>::value;$/;"	m	class:nlohmann::detail::static_const
value_	ext/fmt/include/fmt/core.h	/^  internal::value<Context> value_;$/;"	m	class:basic_format_arg
value_float	ext/headers/json.hpp	/^        value_float,      \/\/\/< an floating point number -- use get_number_float() for actual value$/;"	m	class:nlohmann::detail::lexer::token_type
value_float	ext/headers/json.hpp	/^    number_float_t value_float = 0;$/;"	m	class:nlohmann::detail::lexer
value_integer	ext/headers/json.hpp	/^        value_integer,    \/\/\/< a signed integer -- use get_number_integer() for actual value$/;"	m	class:nlohmann::detail::lexer::token_type
value_integer	ext/headers/json.hpp	/^    number_integer_t value_integer = 0;$/;"	m	class:nlohmann::detail::lexer
value_ref	ext/headers/json.hpp	/^    value_type* value_ref = nullptr;$/;"	m	class:nlohmann::detail::json_ref
value_separator	ext/headers/json.hpp	/^        value_separator,  \/\/\/< the value separator `,`$/;"	m	class:nlohmann::detail::lexer::token_type
value_string	ext/headers/json.hpp	/^        value_string,     \/\/\/< a string -- use get_string() for actual value$/;"	m	class:nlohmann::detail::lexer::token_type
value_t	ext/headers/json.hpp	/^enum class value_t : std::uint8_t$/;"	c	namespace:nlohmann::detail
value_type	ext/fmt/include/fmt/core.h	/^        declval<typename std::decay<T>::type&>())) value_type;$/;"	t	struct:internal::get_type
value_type	ext/fmt/include/fmt/core.h	/^  typedef T value_type;$/;"	t	class:internal::basic_buffer
value_type	ext/fmt/include/fmt/format.h	/^  typedef Char value_type;$/;"	t	class:internal::null_terminating_iterator
value_type	ext/fmt/include/fmt/format.h	/^  typedef T value_type;$/;"	t	class:internal::counting_iterator
value_type	ext/fmt/include/fmt/format.h	/^  typedef T value_type;$/;"	t	class:output_range
value_type	ext/fmt/include/fmt/format.h	/^  typedef typename Container::value_type value_type;$/;"	t	class:back_insert_range
value_type	ext/fmt/include/fmt/format.h	/^  typedef typename OutputIt::container_type::value_type value_type;$/;"	t	class:internal::truncating_iterator
value_type	ext/fmt/include/fmt/format.h	/^  typedef typename traits::value_type value_type;$/;"	t	class:internal::truncating_iterator
value_unsigned	ext/headers/json.hpp	/^        value_unsigned,   \/\/\/< an unsigned integer -- use get_number_unsigned() for actual value$/;"	m	class:nlohmann::detail::lexer::token_type
value_unsigned	ext/headers/json.hpp	/^    number_unsigned_t value_unsigned = 0;$/;"	m	class:nlohmann::detail::lexer
values	ext/headers/args.hxx	/^            List<T> values;$/;"	m	class:argstest::MapFlagList
values	ext/headers/args.hxx	/^            List<T> values;$/;"	m	class:argstest::MapPositionalList
values	ext/headers/args.hxx	/^            List<T> values;$/;"	m	class:argstest::PositionalList
values	ext/headers/args.hxx	/^            List<T> values;$/;"	m	class:argstest::ValueFlagList
vault	src/hmc.h	/^    int vault;$/;"	m	class:dramsim3::HMCRequest
vault_x	src/thermal.h	/^    int vault_x, vault_y, bank_x, bank_y;$/;"	m	class:dramsim3::ThermalCalculator
vault_y	src/thermal.h	/^    int vault_x, vault_y, bank_x, bank_y;$/;"	m	class:dramsim3::ThermalCalculator
vec_counters_	src/simple_stats.h	/^    VecStat vec_counters_;$/;"	m	class:dramsim3::SimpleStats
vec_doubles_	src/simple_stats.h	/^    std::unordered_map<std::string, std::vector<double> > vec_doubles_;$/;"	m	class:dramsim3::SimpleStats
vformat	ext/fmt/include/fmt/format.h	/^inline std::basic_string<Char> internal::vformat($/;"	f	class:internal
vformat_to	ext/fmt/include/fmt/format.h	/^    vformat_to(OutputIt out, const String &format_str,$/;"	f
vformat_to	ext/fmt/include/fmt/format.h	/^inline typename buffer_context<Char>::type::iterator vformat_to($/;"	f
vformat_to	ext/fmt/include/fmt/format.h	/^typename Context::iterator vformat_to($/;"	f
vformat_to	ext/fmt/include/fmt/format.h	/^typename buffer_context<Char>::type::iterator internal::vformat_to($/;"	f	class:internal
vformat_to_n	ext/fmt/include/fmt/format.h	/^    format_to_n_result<OutputIt>>::type vformat_to_n($/;"	f
visit	ext/fmt/include/fmt/core.h	/^    visit(Visitor &&vis, const basic_format_arg<Context> &arg) {$/;"	f
visit_format_arg	ext/fmt/include/fmt/core.h	/^    visit_format_arg(Visitor &&vis, const basic_format_arg<Context> &arg) {$/;"	f
void_	ext/fmt/include/fmt/format.h	/^struct void_ { typedef void type; };$/;"	s	namespace:internal
volatile	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
volatile	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
vprint	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void vprint(std::FILE *f, string_view format_str, format_args args) {$/;"	f
vprint	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void vprint(std::FILE *f, wstring_view format_str, wformat_args args) {$/;"	f
vprint	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void vprint(string_view format_str, format_args args) {$/;"	f
vprint	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void vprint(wstring_view format_str, wformat_args args) {$/;"	f
w	ext/headers/json.hpp	/^    diyfp w;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries
w_	scripts/final_PowerTemperature_map.py	/^			w_ = Bpos[i,3] - Bpos[i,2] + 1$/;"	v
wait_prev_state_	src/bankstate.h	/^    State wait_prev_state_; \/\/ state before going into wait_writecopy state$/;"	m	class:dramsim3::BankState
waiting_command_	src/bankstate.h	/^    Command waiting_command_;$/;"	m	class:dramsim3::BankState
wbuffer	ext/fmt/include/fmt/core.h	/^typedef basic_buffer<wchar_t> wbuffer;$/;"	t	namespace:internal
wformat_context	ext/fmt/include/fmt/core.h	/^typedef buffer_context<wchar_t>::type wformat_context;$/;"	t
wide_string_input_adapter	ext/headers/json.hpp	/^class wide_string_input_adapter : public input_adapter_protocol$/;"	c	namespace:nlohmann::detail
wide_string_input_helper	ext/headers/json.hpp	/^struct wide_string_input_helper$/;"	s	namespace:nlohmann::detail
wide_string_input_helper	ext/headers/json.hpp	/^struct wide_string_input_helper<WideStringType, 2>$/;"	s	namespace:nlohmann::detail
width	ext/fmt/include/fmt/format.h	/^    size_t width() const { return 1; }$/;"	f	struct:internal::arg_formatter_base::char_writer
width	ext/fmt/include/fmt/format.h	/^    size_t width() const { return size(); }$/;"	f	struct:basic_writer::double_writer
width	ext/fmt/include/fmt/format.h	/^    size_t width() const { return size(); }$/;"	f	struct:basic_writer::inf_or_nan_writer
width	ext/fmt/include/fmt/format.h	/^    size_t width() const { return size_; }$/;"	f	struct:basic_writer::padded_int_writer
width	ext/fmt/include/fmt/format.h	/^    size_t width() const {$/;"	f	struct:basic_writer::str_writer
width	ext/fmt/include/fmt/format.h	/^  FMT_CONSTEXPR unsigned width() const { return width_; }$/;"	f	struct:align_spec
width	ext/headers/args.hxx	/^                unsigned int width = 80;$/;"	m	struct:argstest::ArgumentParser::HelpParams
width_	ext/fmt/include/fmt/format.h	/^  unsigned width_;$/;"	m	struct:align_spec
width_adapter	ext/fmt/include/fmt/format.h	/^  explicit FMT_CONSTEXPR width_adapter(SpecHandler &h) : handler(h) {}$/;"	f	struct:internal::width_adapter
width_adapter	ext/fmt/include/fmt/format.h	/^struct width_adapter {$/;"	s	namespace:internal
width_checker	ext/fmt/include/fmt/format.h	/^  explicit FMT_CONSTEXPR width_checker(ErrorHandler &eh) : handler_(eh) {}$/;"	f	class:internal::width_checker
width_checker	ext/fmt/include/fmt/format.h	/^class width_checker: public function<unsigned long long> {$/;"	c	namespace:internal
width_ref	ext/fmt/include/fmt/format.h	/^  arg_ref<Char> width_ref;$/;"	m	struct:internal::dynamic_format_specs
windows_error	ext/fmt/include/fmt/format.h	/^  windows_error(int error_code, string_view message, const Args &... args) {$/;"	f	class:windows_error
windows_error	ext/fmt/include/fmt/format.h	/^class windows_error : public system_error {$/;"	c
with_types	ext/headers/catch.hpp	/^    struct with_types {$/;"	s	struct:Catch::combine
wmemory_buffer	ext/fmt/include/fmt/format.h	/^typedef basic_memory_buffer<wchar_t> wmemory_buffer;$/;"	t
wparse_context	ext/fmt/include/fmt/core.h	/^typedef basic_parse_context<wchar_t> wparse_context;$/;"	t
write	ext/fmt/include/fmt/format.h	/^      write(T value, FormatSpec spec, FormatSpecs... specs) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^      write(const T *p) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(basic_string_view<char_type> str, FormatSpecs... specs) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(bool value) {$/;"	f	class:internal::arg_formatter_base
write	ext/fmt/include/fmt/format.h	/^  void write(char value) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(const char_type *value) {$/;"	f	class:internal::arg_formatter_base
write	ext/fmt/include/fmt/format.h	/^  void write(double value) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(int value) { write_decimal(value); }$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(long double value) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(long long value) { write_decimal(value); }$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(long value) { write_decimal(value); }$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(string_view value) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(unsigned long long value) { write_decimal(value); }$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(unsigned long value) { write_decimal(value); }$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(unsigned value) { write_decimal(value); }$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(wchar_t value) {$/;"	f	class:basic_writer
write	ext/fmt/include/fmt/format.h	/^  void write(wstring_view value) {$/;"	f	class:basic_writer
writeToStream	ext/headers/catch.hpp	/^        void writeToStream( std::ostream &os ) const {$/;"	f	struct:Catch::Parser
write_bson	ext/headers/json.hpp	/^    void write_bson(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer
write_bson_array	ext/headers/json.hpp	/^    void write_bson_array(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_boolean	ext/headers/json.hpp	/^    void write_bson_boolean(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_double	ext/headers/json.hpp	/^    void write_bson_double(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_element	ext/headers/json.hpp	/^    void write_bson_element(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_entry_header	ext/headers/json.hpp	/^    void write_bson_entry_header(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_integer	ext/headers/json.hpp	/^    void write_bson_integer(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_null	ext/headers/json.hpp	/^    void write_bson_null(const string_t& name)$/;"	f	class:nlohmann::detail::binary_writer
write_bson_object	ext/headers/json.hpp	/^    void write_bson_object(const typename BasicJsonType::object_t& value)$/;"	f	class:nlohmann::detail::binary_writer
write_bson_object_entry	ext/headers/json.hpp	/^    void write_bson_object_entry(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_string	ext/headers/json.hpp	/^    void write_bson_string(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_bson_unsigned	ext/headers/json.hpp	/^    void write_bson_unsigned(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer
write_buf_size	src/configuration.h	/^    int write_buf_size;$/;"	m	class:dramsim3::Config
write_buffer_	src/controller.h	/^    std::vector<Transaction> write_buffer_;$/;"	m	class:dramsim3::Controller
write_callback_	src/dram_system.h	/^    std::function<void(AddressPair req_id)> read_callback_, write_callback_;$/;"	m	class:dramsim3::BaseDRAMSystem
write_cbor	ext/headers/json.hpp	/^    void write_cbor(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer
write_char	ext/fmt/include/fmt/format.h	/^  void write_char(char_type value) {$/;"	f	class:internal::arg_formatter_base
write_decimal	ext/fmt/include/fmt/format.h	/^  void write_decimal(Int value) {$/;"	f	class:basic_writer
write_delay	src/configuration.h	/^    int write_delay;$/;"	m	class:dramsim3::Config
write_double	ext/fmt/include/fmt/format.h	/^void basic_writer<Range>::write_double(T value, const format_specs &spec) {$/;"	f	class:basic_writer
write_draining_	src/controller.h	/^    int write_draining_;$/;"	m	class:dramsim3::Controller
write_energy_inc	src/configuration.h	/^    double write_energy_inc;$/;"	m	class:dramsim3::Config
write_exponent	ext/fmt/include/fmt/format-inl.h	/^FMT_FUNC void write_exponent(int exp, Handler &&h) {$/;"	f	namespace:internal
write_int	ext/fmt/include/fmt/format.h	/^  void write_int(T value, const Spec &spec) {$/;"	f	class:basic_writer
write_int	ext/fmt/include/fmt/format.h	/^  void write_int(unsigned num_digits, string_view prefix,$/;"	f	class:basic_writer
write_msgpack	ext/headers/json.hpp	/^    void write_msgpack(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer
write_number	ext/headers/json.hpp	/^    void write_number(const NumberType n)$/;"	f	class:nlohmann::detail::binary_writer
write_number_with_ubjson_prefix	ext/headers/json.hpp	/^    void write_number_with_ubjson_prefix(const NumberType n,$/;"	f	class:nlohmann::detail::binary_writer
write_padded	ext/fmt/include/fmt/format.h	/^void basic_writer<Range>::write_padded(const align_spec &spec, F &&f) {$/;"	f	class:basic_writer
write_pair	ext/fmt/include/fmt/format.h	/^  void write_pair(unsigned N, uint32_t index) {$/;"	f	class:internal::decimal_formatter
write_pointer	ext/fmt/include/fmt/format.h	/^  void write_pointer(const void *p) {$/;"	f	class:internal::arg_formatter_base
write_str	ext/fmt/include/fmt/format.h	/^  void write_str(const Char *s, std::size_t size, const align_spec &spec) {$/;"	f	class:basic_writer
write_str	ext/fmt/include/fmt/format.h	/^void basic_writer<Range>::write_str($/;"	f	class:basic_writer
write_ubjson	ext/headers/json.hpp	/^    void write_ubjson(const BasicJsonType& j, const bool use_count,$/;"	f	class:nlohmann::detail::binary_writer
writer	ext/fmt/include/fmt/format.h	/^    basic_writer<Range> &writer;$/;"	m	struct:basic_writer::int_writer
writer	ext/fmt/include/fmt/format.h	/^  writer_type &writer() { return writer_; }$/;"	f	class:internal::arg_formatter_base
writer	ext/fmt/include/fmt/format.h	/^typedef basic_writer<back_insert_range<internal::buffer>> writer;$/;"	t
writer_	ext/fmt/include/fmt/format.h	/^  writer_type writer_;$/;"	m	class:internal::arg_formatter_base
writer_type	ext/fmt/include/fmt/format.h	/^  typedef basic_writer<Range> writer_type;$/;"	t	class:internal::arg_formatter_base
wstring_view	ext/fmt/include/fmt/core.h	/^typedef basic_string_view<wchar_t> wstring_view;$/;"	t
wwriter	ext/fmt/include/fmt/format.h	/^typedef basic_writer<back_insert_range<internal::wbuffer>> wwriter;$/;"	t
x_	scripts/final_PowerTemperature_map.py	/^			x_ = Bpos[i,2] $/;"	v
x_	scripts/final_PowerTemperature_map.py	/^	x_ = int(PT_data[i,1])$/;"	v
xbar_bandwidth_	src/hmc.h	/^    const int xbar_bandwidth_ = 2;$/;"	m	class:dramsim3::HMCMemorySystem
xbar_queue_depth	src/configuration.h	/^    int xbar_queue_depth;$/;"	m	class:dramsim3::Config
y_	scripts/final_PowerTemperature_map.py	/^			y_ = Bpos[i,4]$/;"	v
y_	scripts/final_PowerTemperature_map.py	/^	y_ = int(PT_data[i,2])$/;"	v
z_	scripts/final_PowerTemperature_map.py	/^	z_ = int(PT_data[i,3])$/;"	v
~Base	ext/headers/args.hxx	/^            virtual ~Base() {}$/;"	f	class:argstest::Base
~BaseDRAMSystem	src/dram_system.h	/^    virtual ~BaseDRAMSystem() {}$/;"	f	class:dramsim3::BaseDRAMSystem
~CounterFlag	ext/headers/args.hxx	/^            virtual ~CounterFlag() {}$/;"	f	class:argstest::CounterFlag
~Error	ext/headers/args.hxx	/^            virtual ~Error() {};$/;"	f	class:argstest::Error
~ExtraError	ext/headers/args.hxx	/^            virtual ~ExtraError() {};$/;"	f	class:argstest::ExtraError
~Flag	ext/headers/args.hxx	/^            virtual ~Flag() {}$/;"	f	class:argstest::Flag
~FlagBase	ext/headers/args.hxx	/^            virtual ~FlagBase() {}$/;"	f	class:argstest::FlagBase
~Group	ext/headers/args.hxx	/^            virtual ~Group() {}$/;"	f	class:argstest::Group
~HMCMemorySystem	src/hmc.cc	/^HMCMemorySystem::~HMCMemorySystem() {$/;"	f	class:dramsim3::HMCMemorySystem
~Help	ext/headers/args.hxx	/^            virtual ~Help() {};$/;"	f	class:argstest::Help
~HelpFlag	ext/headers/args.hxx	/^            virtual ~HelpFlag() {}$/;"	f	class:argstest::HelpFlag
~IdealDRAMSystem	src/dram_system.cc	/^IdealDRAMSystem::~IdealDRAMSystem() {}$/;"	f	class:dramsim3::IdealDRAMSystem
~JedecDRAMSystem	src/dram_system.cc	/^JedecDRAMSystem::~JedecDRAMSystem() {$/;"	f	class:dramsim3::JedecDRAMSystem
~MapError	ext/headers/args.hxx	/^            virtual ~MapError() {};$/;"	f	class:argstest::MapError
~MapFlag	ext/headers/args.hxx	/^            virtual ~MapFlag() {}$/;"	f	class:argstest::MapFlag
~MapFlagList	ext/headers/args.hxx	/^            virtual ~MapFlagList() {}$/;"	f	class:argstest::MapFlagList
~MapPositional	ext/headers/args.hxx	/^            virtual ~MapPositional() {}$/;"	f	class:argstest::MapPositional
~MapPositionalList	ext/headers/args.hxx	/^            virtual ~MapPositionalList() {}$/;"	f	class:argstest::MapPositionalList
~Matcher	ext/headers/args.hxx	/^            ~Matcher() {}$/;"	f	class:argstest::Matcher
~MemorySystem	src/memory_system.cc	/^MemorySystem::~MemorySystem() {$/;"	f	class:dramsim3::MemorySystem
~NamedBase	ext/headers/args.hxx	/^            virtual ~NamedBase() {}$/;"	f	class:argstest::NamedBase
~ParseError	ext/headers/args.hxx	/^            virtual ~ParseError() {};$/;"	f	class:argstest::ParseError
~Positional	ext/headers/args.hxx	/^            virtual ~Positional() {}$/;"	f	class:argstest::Positional
~PositionalBase	ext/headers/args.hxx	/^            virtual ~PositionalBase() {}$/;"	f	class:argstest::PositionalBase
~PositionalList	ext/headers/args.hxx	/^            virtual ~PositionalList() {}$/;"	f	class:argstest::PositionalList
~ThermalCalculator	src/thermal.cc	/^ThermalCalculator::~ThermalCalculator() {}$/;"	f	class:dramsim3::ThermalCalculator
~ThermalReplay	src/thermal_replay.cc	/^ThermalReplay::~ThermalReplay() {}$/;"	f	class:ThermalReplay
~TraceBasedCPU	src/cpu.h	/^    ~TraceBasedCPU() { trace_file_.close(); }$/;"	f	class:dramsim3::TraceBasedCPU
~UsageError	ext/headers/args.hxx	/^            virtual ~UsageError() {};$/;"	f	class:argstest::UsageError
~ValidationError	ext/headers/args.hxx	/^            virtual ~ValidationError() {};$/;"	f	class:argstest::ValidationError
~ValueFlag	ext/headers/args.hxx	/^            virtual ~ValueFlag() {}$/;"	f	class:argstest::ValueFlag
~ValueFlagBase	ext/headers/args.hxx	/^            virtual ~ValueFlagBase() {}$/;"	f	class:argstest::ValueFlagBase
~ValueFlagList	ext/headers/args.hxx	/^            virtual ~ValueFlagList() {}$/;"	f	class:argstest::ValueFlagList
~arg_map	ext/fmt/include/fmt/core.h	/^  ~arg_map() { delete [] map_; }$/;"	f	class:internal::arg_map
~basic_buffer	ext/fmt/include/fmt/core.h	/^  virtual ~basic_buffer() {}$/;"	f	class:internal::basic_buffer
~basic_memory_buffer	ext/fmt/include/fmt/format.h	/^  ~basic_memory_buffer() { deallocate(); }$/;"	f	class:basic_memory_buffer
~prettify_handler	ext/fmt/include/fmt/format-inl.h	/^  ~prettify_handler() {$/;"	f	struct:internal::prettify_handler
